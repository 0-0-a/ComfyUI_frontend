{
	"KSampler": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100,
						"step": 0.1,
						"round": 0.01
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"latent_image": [
					"LATENT"
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "KSampler",
		"display_name": "KSampler",
		"description": "",
		"category": "sampling",
		"output_node": false
	},
	"CheckpointLoaderSimple": {
		"input": {
			"required": {
				"ckpt_name": [
					[
						"model1.safetensors",
						"model2.ckpt"
					]
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CLIP",
			"VAE"
		],
		"name": "CheckpointLoaderSimple",
		"display_name": "Load Checkpoint",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"CLIPTextEncode": {
		"input": {
			"required": {
				"text": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": true
					}
				],
				"clip": [
					"CLIP"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "CLIPTextEncode",
		"display_name": "CLIP Text Encode (Prompt)",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"CLIPSetLastLayer": {
		"input": {
			"required": {
				"clip": [
					"CLIP"
				],
				"stop_at_clip_layer": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				]
			}
		},
		"output": [
			"CLIP"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CLIP"
		],
		"name": "CLIPSetLastLayer",
		"display_name": "CLIP Set Last Layer",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"VAEDecode": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"vae": [
					"VAE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "VAEDecode",
		"display_name": "VAE Decode",
		"description": "",
		"category": "latent",
		"output_node": false
	},
	"VAEEncode": {
		"input": {
			"required": {
				"pixels": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "VAEEncode",
		"display_name": "VAE Encode",
		"description": "",
		"category": "latent",
		"output_node": false
	},
	"VAEEncodeForInpaint": {
		"input": {
			"required": {
				"pixels": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"mask": [
					"MASK"
				],
				"grow_mask_by": [
					"INT",
					{
						"default": 6,
						"min": 0,
						"max": 64,
						"step": 1
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "VAEEncodeForInpaint",
		"display_name": "VAE Encode (for Inpainting)",
		"description": "",
		"category": "latent/inpaint",
		"output_node": false
	},
	"VAELoader": {
		"input": {
			"required": {
				"vae_name": [
					[
						"vae1.safetensors",
						"vae2.ckpt"
					]
				]
			}
		},
		"output": [
			"VAE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"VAE"
		],
		"name": "VAELoader",
		"display_name": "Load VAE",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"EmptyLatentImage": {
		"input": {
			"required": {
				"width": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "EmptyLatentImage",
		"display_name": "Empty Latent Image",
		"description": "",
		"category": "latent",
		"output_node": false
	},
	"LatentUpscale": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"upscale_method": [
					[
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic",
						"bislerp"
					]
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"crop": [
					[
						"disabled",
						"center"
					]
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentUpscale",
		"display_name": "Upscale Latent",
		"description": "",
		"category": "latent",
		"output_node": false
	},
	"LatentUpscaleBy": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"upscale_method": [
					[
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic",
						"bislerp"
					]
				],
				"scale_by": [
					"FLOAT",
					{
						"default": 1.5,
						"min": 0.01,
						"max": 8,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentUpscaleBy",
		"display_name": "Upscale Latent By",
		"description": "",
		"category": "latent",
		"output_node": false
	},
	"LatentFromBatch": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"batch_index": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 63
					}
				],
				"length": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 64
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentFromBatch",
		"display_name": "Latent From Batch",
		"description": "",
		"category": "latent/batch",
		"output_node": false
	},
	"RepeatLatentBatch": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"amount": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 64
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "RepeatLatentBatch",
		"display_name": "Repeat Latent Batch",
		"description": "",
		"category": "latent/batch",
		"output_node": false
	},
	"SaveImage": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "SaveImage",
		"display_name": "Save Image",
		"description": "",
		"category": "image",
		"output_node": true
	},
	"PreviewImage": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "PreviewImage",
		"display_name": "Preview Image",
		"description": "",
		"category": "image",
		"output_node": true
	},
	"LoadImage": {
		"input": {
			"required": {
				"image": [
					[
						"00000-2427730660.png",
						"00006-2966685768 (1).png",
						"00006-2966685768.png",
						"00023-3076193459.png",
						"00066-4225385850.png",
						"00138-648843619.png",
						"1 (1).webp",
						"1.webp",
						"15.png",
						"3.webp",
						"309219693-e7e2d80e-ffbe-4724-812a-5139a88027e3.png",
						"322326752-b89a2151-df43-4137-a297-deb70fbda27c.png",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe (1).jpg",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe (2).jpg",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe.jpg",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (1).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (2).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (3).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2.png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269 (1).png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269 (2).png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269.png",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (1).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (2).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (3).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (4).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (5).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238.jpeg",
						"360_F_244328590_RiyvTqK8DUKDX6GSHj3JVMjiuJnwhu0y.jpg",
						"4.jpg",
						"4.webp",
						"5.webp",
						"5b57323c40b09034008b45e7.webp",
						"8 (1).webp",
						"8.webp",
						"GNb-BZSbwAAHX4z.jpg",
						"IMG_1354.JPG",
						"IMG_1563.png",
						"Image_20230919232822.jpg",
						"RGBMask (1).png",
						"RGBMask.png",
						"blended.png",
						"chair.png",
						"demo2.png",
						"dog (1).png",
						"dog (2).png",
						"dog.png",
						"dog512.png",
						"example.png",
						"i3 (1).png",
						"i3.png",
						"iris.png",
						"mask.png",
						"old_man.png",
						"pngtree-science-and-technology-space-station-light-effect-background-image_2049440.jpg",
						"s-l1200 (1).jpg",
						"s-l1200.jpg",
						"tong(1) (1).png",
						"tong(1).png",
						"unnamed.jpg"
					],
					{
						"image_upload": true
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "LoadImage",
		"display_name": "Load Image",
		"description": "",
		"category": "image",
		"output_node": false
	},
	"LoadImageMask": {
		"input": {
			"required": {
				"image": [
					[
						"00000-2427730660.png",
						"00006-2966685768 (1).png",
						"00006-2966685768.png",
						"00023-3076193459.png",
						"00066-4225385850.png",
						"00138-648843619.png",
						"1 (1).webp",
						"1.webp",
						"15.png",
						"3.webp",
						"309219693-e7e2d80e-ffbe-4724-812a-5139a88027e3.png",
						"322326752-b89a2151-df43-4137-a297-deb70fbda27c.png",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe (1).jpg",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe (2).jpg",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe.jpg",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (1).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (2).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (3).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2.png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269 (1).png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269 (2).png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269.png",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (1).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (2).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (3).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (4).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (5).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238.jpeg",
						"360_F_244328590_RiyvTqK8DUKDX6GSHj3JVMjiuJnwhu0y.jpg",
						"4.jpg",
						"4.webp",
						"5.webp",
						"5b57323c40b09034008b45e7.webp",
						"8 (1).webp",
						"8.webp",
						"GNb-BZSbwAAHX4z.jpg",
						"IMG_1354.JPG",
						"IMG_1563.png",
						"Image_20230919232822.jpg",
						"RGBMask (1).png",
						"RGBMask.png",
						"blended.png",
						"chair.png",
						"demo2.png",
						"dog (1).png",
						"dog (2).png",
						"dog.png",
						"dog512.png",
						"example.png",
						"i3 (1).png",
						"i3.png",
						"iris.png",
						"mask.png",
						"old_man.png",
						"pngtree-science-and-technology-space-station-light-effect-background-image_2049440.jpg",
						"s-l1200 (1).jpg",
						"s-l1200.jpg",
						"tong(1) (1).png",
						"tong(1).png",
						"unnamed.jpg"
					],
					{
						"image_upload": true
					}
				],
				"channel": [
					[
						"alpha",
						"red",
						"green",
						"blue"
					]
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "LoadImageMask",
		"display_name": "Load Image (as Mask)",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"ImageScale": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"upscale_method": [
					[
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic",
						"lanczos"
					]
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"crop": [
					[
						"disabled",
						"center"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageScale",
		"display_name": "Upscale Image",
		"description": "",
		"category": "image/upscaling",
		"output_node": false
	},
	"ImageScaleBy": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"upscale_method": [
					[
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic",
						"lanczos"
					]
				],
				"scale_by": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.01,
						"max": 8,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageScaleBy",
		"display_name": "Upscale Image By",
		"description": "",
		"category": "image/upscaling",
		"output_node": false
	},
	"ImageInvert": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageInvert",
		"display_name": "Invert Image",
		"description": "",
		"category": "image",
		"output_node": false
	},
	"ImageBatch": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				],
				"image2": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageBatch",
		"display_name": "Batch Images",
		"description": "",
		"category": "image",
		"output_node": false
	},
	"ImagePadForOutpaint": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"left": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"top": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"right": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"bottom": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"feathering": [
					"INT",
					{
						"default": 40,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "ImagePadForOutpaint",
		"display_name": "Pad Image for Outpainting",
		"description": "",
		"category": "image",
		"output_node": false
	},
	"EmptyImage": {
		"input": {
			"required": {
				"width": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				],
				"color": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16777215,
						"step": 1,
						"display": "color"
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "EmptyImage",
		"display_name": "EmptyImage",
		"description": "",
		"category": "image",
		"output_node": false
	},
	"ConditioningAverage": {
		"input": {
			"required": {
				"conditioning_to": [
					"CONDITIONING"
				],
				"conditioning_from": [
					"CONDITIONING"
				],
				"conditioning_to_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ConditioningAverage",
		"display_name": "ConditioningAverage",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"ConditioningCombine": {
		"input": {
			"required": {
				"conditioning_1": [
					"CONDITIONING"
				],
				"conditioning_2": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ConditioningCombine",
		"display_name": "Conditioning (Combine)",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"ConditioningConcat": {
		"input": {
			"required": {
				"conditioning_to": [
					"CONDITIONING"
				],
				"conditioning_from": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ConditioningConcat",
		"display_name": "Conditioning (Concat)",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"ConditioningSetArea": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"width": [
					"INT",
					{
						"default": 64,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 64,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ConditioningSetArea",
		"display_name": "Conditioning (Set Area)",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"ConditioningSetAreaPercentage": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"width": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"height": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"x": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"y": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ConditioningSetAreaPercentage",
		"display_name": "Conditioning (Set Area with Percentage)",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"ConditioningSetAreaStrength": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ConditioningSetAreaStrength",
		"display_name": "ConditioningSetAreaStrength",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"ConditioningSetMask": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"mask": [
					"MASK"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"set_cond_area": [
					[
						"default",
						"mask bounds"
					]
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ConditioningSetMask",
		"display_name": "Conditioning (Set Mask)",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"KSamplerAdvanced": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"add_noise": [
					[
						"enable",
						"disable"
					]
				],
				"noise_seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100,
						"step": 0.1,
						"round": 0.01
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"latent_image": [
					"LATENT"
				],
				"start_at_step": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 10000
					}
				],
				"end_at_step": [
					"INT",
					{
						"default": 10000,
						"min": 0,
						"max": 10000
					}
				],
				"return_with_leftover_noise": [
					[
						"disable",
						"enable"
					]
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "KSamplerAdvanced",
		"display_name": "KSampler (Advanced)",
		"description": "",
		"category": "sampling",
		"output_node": false
	},
	"SetLatentNoiseMask": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "SetLatentNoiseMask",
		"display_name": "Set Latent Noise Mask",
		"description": "",
		"category": "latent/inpaint",
		"output_node": false
	},
	"LatentComposite": {
		"input": {
			"required": {
				"samples_to": [
					"LATENT"
				],
				"samples_from": [
					"LATENT"
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"feather": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentComposite",
		"display_name": "Latent Composite",
		"description": "",
		"category": "latent",
		"output_node": false
	},
	"LatentBlend": {
		"input": {
			"required": {
				"samples1": [
					"LATENT"
				],
				"samples2": [
					"LATENT"
				],
				"blend_factor": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentBlend",
		"display_name": "Latent Blend",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"LatentRotate": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"rotation": [
					[
						"none",
						"90 degrees",
						"180 degrees",
						"270 degrees"
					]
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentRotate",
		"display_name": "Rotate Latent",
		"description": "",
		"category": "latent/transform",
		"output_node": false
	},
	"LatentFlip": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"flip_method": [
					[
						"x-axis: vertically",
						"y-axis: horizontally"
					]
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentFlip",
		"display_name": "Flip Latent",
		"description": "",
		"category": "latent/transform",
		"output_node": false
	},
	"LatentCrop": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentCrop",
		"display_name": "Crop Latent",
		"description": "",
		"category": "latent/transform",
		"output_node": false
	},
	"LoraLoader": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"lora_name": [
					[
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"strength_model": [
					"FLOAT",
					{
						"default": 1,
						"min": -100,
						"max": 100,
						"step": 0.01
					}
				],
				"strength_clip": [
					"FLOAT",
					{
						"default": 1,
						"min": -100,
						"max": 100,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CLIP"
		],
		"name": "LoraLoader",
		"display_name": "Load LoRA",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"CLIPLoader": {
		"input": {
			"required": {
				"clip_name": [
					[]
				],
				"type": [
					[
						"stable_diffusion",
						"stable_cascade",
						"sd3"
					]
				]
			}
		},
		"output": [
			"CLIP"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CLIP"
		],
		"name": "CLIPLoader",
		"display_name": "Load CLIP",
		"description": "",
		"category": "advanced/loaders",
		"output_node": false
	},
	"UNETLoader": {
		"input": {
			"required": {
				"unet_name": [
					[
						"iclight_sd15_fbc_unet_ldm.safetensors",
						"iclight_sd15_fc_unet_ldm.safetensors",
						"merged_ic_light.safetensors"
					]
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "UNETLoader",
		"display_name": "UNETLoader",
		"description": "",
		"category": "advanced/loaders",
		"output_node": false
	},
	"DualCLIPLoader": {
		"input": {
			"required": {
				"clip_name1": [
					[]
				],
				"clip_name2": [
					[]
				],
				"type": [
					[
						"sdxl",
						"sd3"
					]
				]
			}
		},
		"output": [
			"CLIP"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CLIP"
		],
		"name": "DualCLIPLoader",
		"display_name": "DualCLIPLoader",
		"description": "",
		"category": "advanced/loaders",
		"output_node": false
	},
	"CLIPVisionEncode": {
		"input": {
			"required": {
				"clip_vision": [
					"CLIP_VISION"
				],
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"CLIP_VISION_OUTPUT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CLIP_VISION_OUTPUT"
		],
		"name": "CLIPVisionEncode",
		"display_name": "CLIP Vision Encode",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"StyleModelApply": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"style_model": [
					"STYLE_MODEL"
				],
				"clip_vision_output": [
					"CLIP_VISION_OUTPUT"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "StyleModelApply",
		"display_name": "Apply Style Model",
		"description": "",
		"category": "conditioning/style_model",
		"output_node": false
	},
	"unCLIPConditioning": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"clip_vision_output": [
					"CLIP_VISION_OUTPUT"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"noise_augmentation": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "unCLIPConditioning",
		"display_name": "unCLIPConditioning",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"ControlNetApply": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"control_net": [
					"CONTROL_NET"
				],
				"image": [
					"IMAGE"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ControlNetApply",
		"display_name": "Apply ControlNet",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"ControlNetApplyAdvanced": {
		"input": {
			"required": {
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"control_net": [
					"CONTROL_NET"
				],
				"image": [
					"IMAGE"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_percent": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"positive",
			"negative"
		],
		"name": "ControlNetApplyAdvanced",
		"display_name": "Apply ControlNet (Advanced)",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"ControlNetLoader": {
		"input": {
			"required": {
				"control_net_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"kohya_controllllite_xl_blur.safetensors",
						"kohya_controllllite_xl_blur_anime.safetensors",
						"kohya_controllllite_xl_canny.safetensors",
						"kohya_controllllite_xl_openpose_anime.safetensors",
						"kohya_controllllite_xl_openpose_anime_v2.safetensors",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				]
			}
		},
		"output": [
			"CONTROL_NET"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTROL_NET"
		],
		"name": "ControlNetLoader",
		"display_name": "Load ControlNet Model",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"DiffControlNetLoader": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"control_net_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"kohya_controllllite_xl_blur.safetensors",
						"kohya_controllllite_xl_blur_anime.safetensors",
						"kohya_controllllite_xl_canny.safetensors",
						"kohya_controllllite_xl_openpose_anime.safetensors",
						"kohya_controllllite_xl_openpose_anime_v2.safetensors",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				]
			}
		},
		"output": [
			"CONTROL_NET"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTROL_NET"
		],
		"name": "DiffControlNetLoader",
		"display_name": "Load ControlNet Model (diff)",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"StyleModelLoader": {
		"input": {
			"required": {
				"style_model_name": [
					[]
				]
			}
		},
		"output": [
			"STYLE_MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STYLE_MODEL"
		],
		"name": "StyleModelLoader",
		"display_name": "Load Style Model",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"CLIPVisionLoader": {
		"input": {
			"required": {
				"clip_name": [
					[
						"IPAdapter_image_encoder_sd15.safetensors",
						"clip_vitl.pth",
						"sd1.5\\pytorch_model.bin"
					]
				]
			}
		},
		"output": [
			"CLIP_VISION"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CLIP_VISION"
		],
		"name": "CLIPVisionLoader",
		"display_name": "Load CLIP Vision",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"VAEDecodeTiled": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"vae": [
					"VAE"
				],
				"tile_size": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 4096,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "VAEDecodeTiled",
		"display_name": "VAE Decode (Tiled)",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"VAEEncodeTiled": {
		"input": {
			"required": {
				"pixels": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"tile_size": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 4096,
						"step": 64
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "VAEEncodeTiled",
		"display_name": "VAE Encode (Tiled)",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"unCLIPCheckpointLoader": {
		"input": {
			"required": {
				"ckpt_name": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP",
			"VAE",
			"CLIP_VISION"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CLIP",
			"VAE",
			"CLIP_VISION"
		],
		"name": "unCLIPCheckpointLoader",
		"display_name": "unCLIPCheckpointLoader",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"GLIGENLoader": {
		"input": {
			"required": {
				"gligen_name": [
					[]
				]
			}
		},
		"output": [
			"GLIGEN"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"GLIGEN"
		],
		"name": "GLIGENLoader",
		"display_name": "GLIGENLoader",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"GLIGENTextBoxApply": {
		"input": {
			"required": {
				"conditioning_to": [
					"CONDITIONING"
				],
				"clip": [
					"CLIP"
				],
				"gligen_textbox_model": [
					"GLIGEN"
				],
				"text": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": true
					}
				],
				"width": [
					"INT",
					{
						"default": 64,
						"min": 8,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 64,
						"min": 8,
						"max": 16384,
						"step": 8
					}
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "GLIGENTextBoxApply",
		"display_name": "GLIGENTextBoxApply",
		"description": "",
		"category": "conditioning/gligen",
		"output_node": false
	},
	"InpaintModelConditioning": {
		"input": {
			"required": {
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"vae": [
					"VAE"
				],
				"pixels": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"latent"
		],
		"name": "InpaintModelConditioning",
		"display_name": "InpaintModelConditioning",
		"description": "",
		"category": "conditioning/inpaint",
		"output_node": false
	},
	"CheckpointLoader": {
		"input": {
			"required": {
				"config_name": [
					[
						"anything_v3.yaml",
						"v1-inference.yaml",
						"v1-inference_clip_skip_2.yaml",
						"v1-inference_clip_skip_2_fp16.yaml",
						"v1-inference_fp16.yaml",
						"v1-inpainting-inference.yaml",
						"v2-inference-v.yaml",
						"v2-inference-v_fp32.yaml",
						"v2-inference.yaml",
						"v2-inference_fp32.yaml",
						"v2-inpainting-inference.yaml"
					]
				],
				"ckpt_name": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CLIP",
			"VAE"
		],
		"name": "CheckpointLoader",
		"display_name": "Load Checkpoint With Config (DEPRECATED)",
		"description": "",
		"category": "advanced/loaders",
		"output_node": false
	},
	"DiffusersLoader": {
		"input": {
			"required": {
				"model_path": [
					[]
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CLIP",
			"VAE"
		],
		"name": "DiffusersLoader",
		"display_name": "DiffusersLoader",
		"description": "",
		"category": "advanced/loaders/deprecated",
		"output_node": false
	},
	"LoadLatent": {
		"input": {
			"required": {
				"latent": [
					[]
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LoadLatent",
		"display_name": "LoadLatent",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"SaveLatent": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "latents/ComfyUI"
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "SaveLatent",
		"display_name": "SaveLatent",
		"description": "",
		"category": "_for_testing",
		"output_node": true
	},
	"ConditioningZeroOut": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ConditioningZeroOut",
		"display_name": "ConditioningZeroOut",
		"description": "",
		"category": "advanced/conditioning",
		"output_node": false
	},
	"ConditioningSetTimestepRange": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"start": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ConditioningSetTimestepRange",
		"display_name": "ConditioningSetTimestepRange",
		"description": "",
		"category": "advanced/conditioning",
		"output_node": false
	},
	"LoraLoaderModelOnly": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"lora_name": [
					[
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"strength_model": [
					"FLOAT",
					{
						"default": 1,
						"min": -100,
						"max": 100,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "LoraLoaderModelOnly",
		"display_name": "LoraLoaderModelOnly",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"LatentAdd": {
		"input": {
			"required": {
				"samples1": [
					"LATENT"
				],
				"samples2": [
					"LATENT"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentAdd",
		"display_name": "LatentAdd",
		"description": "",
		"category": "latent/advanced",
		"output_node": false
	},
	"LatentSubtract": {
		"input": {
			"required": {
				"samples1": [
					"LATENT"
				],
				"samples2": [
					"LATENT"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentSubtract",
		"display_name": "LatentSubtract",
		"description": "",
		"category": "latent/advanced",
		"output_node": false
	},
	"LatentMultiply": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"multiplier": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentMultiply",
		"display_name": "LatentMultiply",
		"description": "",
		"category": "latent/advanced",
		"output_node": false
	},
	"LatentInterpolate": {
		"input": {
			"required": {
				"samples1": [
					"LATENT"
				],
				"samples2": [
					"LATENT"
				],
				"ratio": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentInterpolate",
		"display_name": "LatentInterpolate",
		"description": "",
		"category": "latent/advanced",
		"output_node": false
	},
	"LatentBatch": {
		"input": {
			"required": {
				"samples1": [
					"LATENT"
				],
				"samples2": [
					"LATENT"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentBatch",
		"display_name": "LatentBatch",
		"description": "",
		"category": "latent/batch",
		"output_node": false
	},
	"LatentBatchSeedBehavior": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"seed_behavior": [
					[
						"random",
						"fixed"
					],
					{
						"default": "fixed"
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentBatchSeedBehavior",
		"display_name": "LatentBatchSeedBehavior",
		"description": "",
		"category": "latent/advanced",
		"output_node": false
	},
	"HypernetworkLoader": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"hypernetwork_name": [
					[]
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "HypernetworkLoader",
		"display_name": "HypernetworkLoader",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"UpscaleModelLoader": {
		"input": {
			"required": {
				"model_name": [
					[
						"RealESRGAN_x4plus.pth",
						"RealESRGAN_x4plus_anime_6B.pth"
					]
				]
			}
		},
		"output": [
			"UPSCALE_MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"UPSCALE_MODEL"
		],
		"name": "UpscaleModelLoader",
		"display_name": "Load Upscale Model",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"ImageUpscaleWithModel": {
		"input": {
			"required": {
				"upscale_model": [
					"UPSCALE_MODEL"
				],
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageUpscaleWithModel",
		"display_name": "Upscale Image (using Model)",
		"description": "",
		"category": "image/upscaling",
		"output_node": false
	},
	"ImageBlend": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				],
				"image2": [
					"IMAGE"
				],
				"blend_factor": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"blend_mode": [
					[
						"normal",
						"multiply",
						"screen",
						"overlay",
						"soft_light",
						"difference"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageBlend",
		"display_name": "ImageBlend",
		"description": "",
		"category": "image/postprocessing",
		"output_node": false
	},
	"ImageBlur": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"blur_radius": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 31,
						"step": 1
					}
				],
				"sigma": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.1,
						"max": 10,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageBlur",
		"display_name": "ImageBlur",
		"description": "",
		"category": "image/postprocessing",
		"output_node": false
	},
	"ImageQuantize": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"colors": [
					"INT",
					{
						"default": 256,
						"min": 1,
						"max": 256,
						"step": 1
					}
				],
				"dither": [
					[
						"none",
						"floyd-steinberg",
						"bayer-2",
						"bayer-4",
						"bayer-8",
						"bayer-16"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageQuantize",
		"display_name": "ImageQuantize",
		"description": "",
		"category": "image/postprocessing",
		"output_node": false
	},
	"ImageSharpen": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"sharpen_radius": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 31,
						"step": 1
					}
				],
				"sigma": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.1,
						"max": 10,
						"step": 0.01
					}
				],
				"alpha": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 5,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageSharpen",
		"display_name": "ImageSharpen",
		"description": "",
		"category": "image/postprocessing",
		"output_node": false
	},
	"ImageScaleToTotalPixels": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"upscale_method": [
					[
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic",
						"lanczos"
					]
				],
				"megapixels": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.01,
						"max": 16,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageScaleToTotalPixels",
		"display_name": "ImageScaleToTotalPixels",
		"description": "",
		"category": "image/upscaling",
		"output_node": false
	},
	"LatentCompositeMasked": {
		"input": {
			"required": {
				"destination": [
					"LATENT"
				],
				"source": [
					"LATENT"
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"resize_source": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentCompositeMasked",
		"display_name": "LatentCompositeMasked",
		"description": "",
		"category": "latent",
		"output_node": false
	},
	"ImageCompositeMasked": {
		"input": {
			"required": {
				"destination": [
					"IMAGE"
				],
				"source": [
					"IMAGE"
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"resize_source": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageCompositeMasked",
		"display_name": "ImageCompositeMasked",
		"description": "",
		"category": "image",
		"output_node": false
	},
	"MaskToImage": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "MaskToImage",
		"display_name": "Convert Mask to Image",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"ImageToMask": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"channel": [
					[
						"red",
						"green",
						"blue",
						"alpha"
					]
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "ImageToMask",
		"display_name": "Convert Image to Mask",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"ImageColorToMask": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"color": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16777215,
						"step": 1,
						"display": "color"
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "ImageColorToMask",
		"display_name": "ImageColorToMask",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"SolidMask": {
		"input": {
			"required": {
				"value": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "SolidMask",
		"display_name": "SolidMask",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"InvertMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "InvertMask",
		"display_name": "InvertMask",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"CropMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "CropMask",
		"display_name": "CropMask",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"MaskComposite": {
		"input": {
			"required": {
				"destination": [
					"MASK"
				],
				"source": [
					"MASK"
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"operation": [
					[
						"multiply",
						"add",
						"subtract",
						"and",
						"or",
						"xor"
					]
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "MaskComposite",
		"display_name": "MaskComposite",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"FeatherMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"left": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"top": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"right": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"bottom": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "FeatherMask",
		"display_name": "FeatherMask",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"GrowMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"expand": [
					"INT",
					{
						"default": 0,
						"min": -16384,
						"max": 16384,
						"step": 1
					}
				],
				"tapered_corners": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "GrowMask",
		"display_name": "GrowMask",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"ThresholdMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"value": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "ThresholdMask",
		"display_name": "ThresholdMask",
		"description": "",
		"category": "mask",
		"output_node": false
	},
	"PorterDuffImageComposite": {
		"input": {
			"required": {
				"source": [
					"IMAGE"
				],
				"source_alpha": [
					"MASK"
				],
				"destination": [
					"IMAGE"
				],
				"destination_alpha": [
					"MASK"
				],
				"mode": [
					[
						"ADD",
						"CLEAR",
						"DARKEN",
						"DST",
						"DST_ATOP",
						"DST_IN",
						"DST_OUT",
						"DST_OVER",
						"LIGHTEN",
						"MULTIPLY",
						"OVERLAY",
						"SCREEN",
						"SRC",
						"SRC_ATOP",
						"SRC_IN",
						"SRC_OUT",
						"SRC_OVER",
						"XOR"
					],
					{
						"default": "DST"
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "PorterDuffImageComposite",
		"display_name": "Porter-Duff Image Composite",
		"description": "",
		"category": "mask/compositing",
		"output_node": false
	},
	"SplitImageWithAlpha": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "SplitImageWithAlpha",
		"display_name": "Split Image with Alpha",
		"description": "",
		"category": "mask/compositing",
		"output_node": false
	},
	"JoinImageWithAlpha": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"alpha": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "JoinImageWithAlpha",
		"display_name": "Join Image with Alpha",
		"description": "",
		"category": "mask/compositing",
		"output_node": false
	},
	"RebatchLatents": {
		"input": {
			"required": {
				"latents": [
					"LATENT"
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"LATENT"
		],
		"name": "RebatchLatents",
		"display_name": "Rebatch Latents",
		"description": "",
		"category": "latent/batch",
		"output_node": false
	},
	"RebatchImages": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"IMAGE"
		],
		"name": "RebatchImages",
		"display_name": "Rebatch Images",
		"description": "",
		"category": "image/batch",
		"output_node": false
	},
	"ModelMergeSimple": {
		"input": {
			"required": {
				"model1": [
					"MODEL"
				],
				"model2": [
					"MODEL"
				],
				"ratio": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelMergeSimple",
		"display_name": "ModelMergeSimple",
		"description": "",
		"category": "advanced/model_merging",
		"output_node": false
	},
	"ModelMergeBlocks": {
		"input": {
			"required": {
				"model1": [
					"MODEL"
				],
				"model2": [
					"MODEL"
				],
				"input": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"middle": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"out": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelMergeBlocks",
		"display_name": "ModelMergeBlocks",
		"description": "",
		"category": "advanced/model_merging",
		"output_node": false
	},
	"ModelMergeSubtract": {
		"input": {
			"required": {
				"model1": [
					"MODEL"
				],
				"model2": [
					"MODEL"
				],
				"multiplier": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelMergeSubtract",
		"display_name": "ModelMergeSubtract",
		"description": "",
		"category": "advanced/model_merging",
		"output_node": false
	},
	"ModelMergeAdd": {
		"input": {
			"required": {
				"model1": [
					"MODEL"
				],
				"model2": [
					"MODEL"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelMergeAdd",
		"display_name": "ModelMergeAdd",
		"description": "",
		"category": "advanced/model_merging",
		"output_node": false
	},
	"CheckpointSave": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "checkpoints/ComfyUI"
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "CheckpointSave",
		"display_name": "CheckpointSave",
		"description": "",
		"category": "advanced/model_merging",
		"output_node": true
	},
	"CLIPMergeSimple": {
		"input": {
			"required": {
				"clip1": [
					"CLIP"
				],
				"clip2": [
					"CLIP"
				],
				"ratio": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CLIP"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CLIP"
		],
		"name": "CLIPMergeSimple",
		"display_name": "CLIPMergeSimple",
		"description": "",
		"category": "advanced/model_merging",
		"output_node": false
	},
	"CLIPMergeSubtract": {
		"input": {
			"required": {
				"clip1": [
					"CLIP"
				],
				"clip2": [
					"CLIP"
				],
				"multiplier": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CLIP"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CLIP"
		],
		"name": "CLIPMergeSubtract",
		"display_name": "CLIPMergeSubtract",
		"description": "",
		"category": "advanced/model_merging",
		"output_node": false
	},
	"CLIPMergeAdd": {
		"input": {
			"required": {
				"clip1": [
					"CLIP"
				],
				"clip2": [
					"CLIP"
				]
			}
		},
		"output": [
			"CLIP"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CLIP"
		],
		"name": "CLIPMergeAdd",
		"display_name": "CLIPMergeAdd",
		"description": "",
		"category": "advanced/model_merging",
		"output_node": false
	},
	"CLIPSave": {
		"input": {
			"required": {
				"clip": [
					"CLIP"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "clip/ComfyUI"
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "CLIPSave",
		"display_name": "CLIPSave",
		"description": "",
		"category": "advanced/model_merging",
		"output_node": true
	},
	"VAESave": {
		"input": {
			"required": {
				"vae": [
					"VAE"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "vae/ComfyUI_vae"
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "VAESave",
		"display_name": "VAESave",
		"description": "",
		"category": "advanced/model_merging",
		"output_node": true
	},
	"TomePatchModel": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ratio": [
					"FLOAT",
					{
						"default": 0.3,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "TomePatchModel",
		"display_name": "TomePatchModel",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"CLIPTextEncodeSDXLRefiner": {
		"input": {
			"required": {
				"ascore": [
					"FLOAT",
					{
						"default": 6,
						"min": 0,
						"max": 1000,
						"step": 0.01
					}
				],
				"width": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"height": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"text": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": true
					}
				],
				"clip": [
					"CLIP"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "CLIPTextEncodeSDXLRefiner",
		"display_name": "CLIPTextEncodeSDXLRefiner",
		"description": "",
		"category": "advanced/conditioning",
		"output_node": false
	},
	"CLIPTextEncodeSDXL": {
		"input": {
			"required": {
				"width": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"height": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"crop_w": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384
					}
				],
				"crop_h": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384
					}
				],
				"target_width": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"target_height": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"text_g": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": true
					}
				],
				"clip": [
					"CLIP"
				],
				"text_l": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": true
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "CLIPTextEncodeSDXL",
		"display_name": "CLIPTextEncodeSDXL",
		"description": "",
		"category": "advanced/conditioning",
		"output_node": false
	},
	"Canny": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"low_threshold": [
					"FLOAT",
					{
						"default": 0.4,
						"min": 0.01,
						"max": 0.99,
						"step": 0.01
					}
				],
				"high_threshold": [
					"FLOAT",
					{
						"default": 0.8,
						"min": 0.01,
						"max": 0.99,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Canny",
		"display_name": "Canny",
		"description": "",
		"category": "image/preprocessors",
		"output_node": false
	},
	"FreeU": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"b1": [
					"FLOAT",
					{
						"default": 1.1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"b2": [
					"FLOAT",
					{
						"default": 1.2,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"s1": [
					"FLOAT",
					{
						"default": 0.9,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"s2": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "FreeU",
		"display_name": "FreeU",
		"description": "",
		"category": "model_patches",
		"output_node": false
	},
	"FreeU_V2": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"b1": [
					"FLOAT",
					{
						"default": 1.3,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"b2": [
					"FLOAT",
					{
						"default": 1.4,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"s1": [
					"FLOAT",
					{
						"default": 0.9,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"s2": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "FreeU_V2",
		"display_name": "FreeU_V2",
		"description": "",
		"category": "model_patches",
		"output_node": false
	},
	"SamplerCustom": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"add_noise": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"noise_seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100,
						"step": 0.1,
						"round": 0.01
					}
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"sampler": [
					"SAMPLER"
				],
				"sigmas": [
					"SIGMAS"
				],
				"latent_image": [
					"LATENT"
				]
			}
		},
		"output": [
			"LATENT",
			"LATENT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"output",
			"denoised_output"
		],
		"name": "SamplerCustom",
		"display_name": "SamplerCustom",
		"description": "",
		"category": "sampling/custom_sampling",
		"output_node": false
	},
	"BasicScheduler": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"SIGMAS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMAS"
		],
		"name": "BasicScheduler",
		"display_name": "BasicScheduler",
		"description": "",
		"category": "sampling/custom_sampling/schedulers",
		"output_node": false
	},
	"KarrasScheduler": {
		"input": {
			"required": {
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"sigma_max": [
					"FLOAT",
					{
						"default": 14.614642,
						"min": 0,
						"max": 5000,
						"step": 0.01,
						"round": false
					}
				],
				"sigma_min": [
					"FLOAT",
					{
						"default": 0.0291675,
						"min": 0,
						"max": 5000,
						"step": 0.01,
						"round": false
					}
				],
				"rho": [
					"FLOAT",
					{
						"default": 7,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				]
			}
		},
		"output": [
			"SIGMAS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMAS"
		],
		"name": "KarrasScheduler",
		"display_name": "KarrasScheduler",
		"description": "",
		"category": "sampling/custom_sampling/schedulers",
		"output_node": false
	},
	"ExponentialScheduler": {
		"input": {
			"required": {
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"sigma_max": [
					"FLOAT",
					{
						"default": 14.614642,
						"min": 0,
						"max": 5000,
						"step": 0.01,
						"round": false
					}
				],
				"sigma_min": [
					"FLOAT",
					{
						"default": 0.0291675,
						"min": 0,
						"max": 5000,
						"step": 0.01,
						"round": false
					}
				]
			}
		},
		"output": [
			"SIGMAS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMAS"
		],
		"name": "ExponentialScheduler",
		"display_name": "ExponentialScheduler",
		"description": "",
		"category": "sampling/custom_sampling/schedulers",
		"output_node": false
	},
	"PolyexponentialScheduler": {
		"input": {
			"required": {
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"sigma_max": [
					"FLOAT",
					{
						"default": 14.614642,
						"min": 0,
						"max": 5000,
						"step": 0.01,
						"round": false
					}
				],
				"sigma_min": [
					"FLOAT",
					{
						"default": 0.0291675,
						"min": 0,
						"max": 5000,
						"step": 0.01,
						"round": false
					}
				],
				"rho": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				]
			}
		},
		"output": [
			"SIGMAS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMAS"
		],
		"name": "PolyexponentialScheduler",
		"display_name": "PolyexponentialScheduler",
		"description": "",
		"category": "sampling/custom_sampling/schedulers",
		"output_node": false
	},
	"VPScheduler": {
		"input": {
			"required": {
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"beta_d": [
					"FLOAT",
					{
						"default": 19.9,
						"min": 0,
						"max": 5000,
						"step": 0.01,
						"round": false
					}
				],
				"beta_min": [
					"FLOAT",
					{
						"default": 0.1,
						"min": 0,
						"max": 5000,
						"step": 0.01,
						"round": false
					}
				],
				"eps_s": [
					"FLOAT",
					{
						"default": 0.001,
						"min": 0,
						"max": 1,
						"step": 0.0001,
						"round": false
					}
				]
			}
		},
		"output": [
			"SIGMAS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMAS"
		],
		"name": "VPScheduler",
		"display_name": "VPScheduler",
		"description": "",
		"category": "sampling/custom_sampling/schedulers",
		"output_node": false
	},
	"SDTurboScheduler": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"steps": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10
					}
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"SIGMAS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMAS"
		],
		"name": "SDTurboScheduler",
		"display_name": "SDTurboScheduler",
		"description": "",
		"category": "sampling/custom_sampling/schedulers",
		"output_node": false
	},
	"KSamplerSelect": {
		"input": {
			"required": {
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				]
			}
		},
		"output": [
			"SAMPLER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SAMPLER"
		],
		"name": "KSamplerSelect",
		"display_name": "KSamplerSelect",
		"description": "",
		"category": "sampling/custom_sampling/samplers",
		"output_node": false
	},
	"SamplerEulerAncestral": {
		"input": {
			"required": {
				"eta": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"s_noise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				]
			}
		},
		"output": [
			"SAMPLER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SAMPLER"
		],
		"name": "SamplerEulerAncestral",
		"display_name": "SamplerEulerAncestral",
		"description": "",
		"category": "sampling/custom_sampling/samplers",
		"output_node": false
	},
	"SamplerLMS": {
		"input": {
			"required": {
				"order": [
					"INT",
					{
						"default": 4,
						"min": 1,
						"max": 100
					}
				]
			}
		},
		"output": [
			"SAMPLER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SAMPLER"
		],
		"name": "SamplerLMS",
		"display_name": "SamplerLMS",
		"description": "",
		"category": "sampling/custom_sampling/samplers",
		"output_node": false
	},
	"SamplerDPMPP_3M_SDE": {
		"input": {
			"required": {
				"eta": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"s_noise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"noise_device": [
					[
						"gpu",
						"cpu"
					]
				]
			}
		},
		"output": [
			"SAMPLER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SAMPLER"
		],
		"name": "SamplerDPMPP_3M_SDE",
		"display_name": "SamplerDPMPP_3M_SDE",
		"description": "",
		"category": "sampling/custom_sampling/samplers",
		"output_node": false
	},
	"SamplerDPMPP_2M_SDE": {
		"input": {
			"required": {
				"solver_type": [
					[
						"midpoint",
						"heun"
					]
				],
				"eta": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"s_noise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"noise_device": [
					[
						"gpu",
						"cpu"
					]
				]
			}
		},
		"output": [
			"SAMPLER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SAMPLER"
		],
		"name": "SamplerDPMPP_2M_SDE",
		"display_name": "SamplerDPMPP_2M_SDE",
		"description": "",
		"category": "sampling/custom_sampling/samplers",
		"output_node": false
	},
	"SamplerDPMPP_SDE": {
		"input": {
			"required": {
				"eta": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"s_noise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"r": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"noise_device": [
					[
						"gpu",
						"cpu"
					]
				]
			}
		},
		"output": [
			"SAMPLER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SAMPLER"
		],
		"name": "SamplerDPMPP_SDE",
		"display_name": "SamplerDPMPP_SDE",
		"description": "",
		"category": "sampling/custom_sampling/samplers",
		"output_node": false
	},
	"SamplerDPMAdaptative": {
		"input": {
			"required": {
				"order": [
					"INT",
					{
						"default": 3,
						"min": 2,
						"max": 3
					}
				],
				"rtol": [
					"FLOAT",
					{
						"default": 0.05,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"atol": [
					"FLOAT",
					{
						"default": 0.0078,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"h_init": [
					"FLOAT",
					{
						"default": 0.05,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"pcoeff": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"icoeff": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"dcoeff": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"accept_safety": [
					"FLOAT",
					{
						"default": 0.81,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"eta": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				],
				"s_noise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01,
						"round": false
					}
				]
			}
		},
		"output": [
			"SAMPLER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SAMPLER"
		],
		"name": "SamplerDPMAdaptative",
		"display_name": "SamplerDPMAdaptative",
		"description": "",
		"category": "sampling/custom_sampling/samplers",
		"output_node": false
	},
	"SplitSigmas": {
		"input": {
			"required": {
				"sigmas": [
					"SIGMAS"
				],
				"step": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 10000
					}
				]
			}
		},
		"output": [
			"SIGMAS",
			"SIGMAS"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"high_sigmas",
			"low_sigmas"
		],
		"name": "SplitSigmas",
		"display_name": "SplitSigmas",
		"description": "",
		"category": "sampling/custom_sampling/sigmas",
		"output_node": false
	},
	"SplitSigmasDenoise": {
		"input": {
			"required": {
				"sigmas": [
					"SIGMAS"
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"SIGMAS",
			"SIGMAS"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"high_sigmas",
			"low_sigmas"
		],
		"name": "SplitSigmasDenoise",
		"display_name": "SplitSigmasDenoise",
		"description": "",
		"category": "sampling/custom_sampling/sigmas",
		"output_node": false
	},
	"FlipSigmas": {
		"input": {
			"required": {
				"sigmas": [
					"SIGMAS"
				]
			}
		},
		"output": [
			"SIGMAS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMAS"
		],
		"name": "FlipSigmas",
		"display_name": "FlipSigmas",
		"description": "",
		"category": "sampling/custom_sampling/sigmas",
		"output_node": false
	},
	"CFGGuider": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100,
						"step": 0.1,
						"round": 0.01
					}
				]
			}
		},
		"output": [
			"GUIDER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"GUIDER"
		],
		"name": "CFGGuider",
		"display_name": "CFGGuider",
		"description": "",
		"category": "sampling/custom_sampling/guiders",
		"output_node": false
	},
	"DualCFGGuider": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"cond1": [
					"CONDITIONING"
				],
				"cond2": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"cfg_conds": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100,
						"step": 0.1,
						"round": 0.01
					}
				],
				"cfg_cond2_negative": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100,
						"step": 0.1,
						"round": 0.01
					}
				]
			}
		},
		"output": [
			"GUIDER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"GUIDER"
		],
		"name": "DualCFGGuider",
		"display_name": "DualCFGGuider",
		"description": "",
		"category": "sampling/custom_sampling/guiders",
		"output_node": false
	},
	"BasicGuider": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"conditioning": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"GUIDER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"GUIDER"
		],
		"name": "BasicGuider",
		"display_name": "BasicGuider",
		"description": "",
		"category": "sampling/custom_sampling/guiders",
		"output_node": false
	},
	"RandomNoise": {
		"input": {
			"required": {
				"noise_seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				]
			}
		},
		"output": [
			"NOISE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"NOISE"
		],
		"name": "RandomNoise",
		"display_name": "RandomNoise",
		"description": "",
		"category": "sampling/custom_sampling/noise",
		"output_node": false
	},
	"DisableNoise": {
		"input": {
			"required": {}
		},
		"output": [
			"NOISE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"NOISE"
		],
		"name": "DisableNoise",
		"display_name": "DisableNoise",
		"description": "",
		"category": "sampling/custom_sampling/noise",
		"output_node": false
	},
	"AddNoise": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"noise": [
					"NOISE"
				],
				"sigmas": [
					"SIGMAS"
				],
				"latent_image": [
					"LATENT"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "AddNoise",
		"display_name": "AddNoise",
		"description": "",
		"category": "_for_testing/custom_sampling/noise",
		"output_node": false
	},
	"SamplerCustomAdvanced": {
		"input": {
			"required": {
				"noise": [
					"NOISE"
				],
				"guider": [
					"GUIDER"
				],
				"sampler": [
					"SAMPLER"
				],
				"sigmas": [
					"SIGMAS"
				],
				"latent_image": [
					"LATENT"
				]
			}
		},
		"output": [
			"LATENT",
			"LATENT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"output",
			"denoised_output"
		],
		"name": "SamplerCustomAdvanced",
		"display_name": "SamplerCustomAdvanced",
		"description": "",
		"category": "sampling/custom_sampling",
		"output_node": false
	},
	"HyperTile": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"tile_size": [
					"INT",
					{
						"default": 256,
						"min": 1,
						"max": 2048
					}
				],
				"swap_size": [
					"INT",
					{
						"default": 2,
						"min": 1,
						"max": 128
					}
				],
				"max_depth": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 10
					}
				],
				"scale_depth": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "HyperTile",
		"display_name": "HyperTile",
		"description": "",
		"category": "model_patches",
		"output_node": false
	},
	"ModelSamplingDiscrete": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"sampling": [
					[
						"eps",
						"v_prediction",
						"lcm",
						"x0"
					]
				],
				"zsnr": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelSamplingDiscrete",
		"display_name": "ModelSamplingDiscrete",
		"description": "",
		"category": "advanced/model",
		"output_node": false
	},
	"ModelSamplingContinuousEDM": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"sampling": [
					[
						"v_prediction",
						"edm_playground_v2.5",
						"eps"
					]
				],
				"sigma_max": [
					"FLOAT",
					{
						"default": 120,
						"min": 0,
						"max": 1000,
						"step": 0.001,
						"round": false
					}
				],
				"sigma_min": [
					"FLOAT",
					{
						"default": 0.002,
						"min": 0,
						"max": 1000,
						"step": 0.001,
						"round": false
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelSamplingContinuousEDM",
		"display_name": "ModelSamplingContinuousEDM",
		"description": "",
		"category": "advanced/model",
		"output_node": false
	},
	"ModelSamplingStableCascade": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"shift": [
					"FLOAT",
					{
						"default": 2,
						"min": 0,
						"max": 100,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelSamplingStableCascade",
		"display_name": "ModelSamplingStableCascade",
		"description": "",
		"category": "advanced/model",
		"output_node": false
	},
	"ModelSamplingSD3": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"shift": [
					"FLOAT",
					{
						"default": 3,
						"min": 0,
						"max": 100,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelSamplingSD3",
		"display_name": "ModelSamplingSD3",
		"description": "",
		"category": "advanced/model",
		"output_node": false
	},
	"RescaleCFG": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"multiplier": [
					"FLOAT",
					{
						"default": 0.7,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "RescaleCFG",
		"display_name": "RescaleCFG",
		"description": "",
		"category": "advanced/model",
		"output_node": false
	},
	"PatchModelAddDownscale": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"block_number": [
					"INT",
					{
						"default": 3,
						"min": 1,
						"max": 32,
						"step": 1
					}
				],
				"downscale_factor": [
					"FLOAT",
					{
						"default": 2,
						"min": 0.1,
						"max": 9,
						"step": 0.001
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_percent": [
					"FLOAT",
					{
						"default": 0.35,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"downscale_after_skip": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"downscale_method": [
					[
						"bicubic",
						"nearest-exact",
						"bilinear",
						"area",
						"bislerp"
					]
				],
				"upscale_method": [
					[
						"bicubic",
						"nearest-exact",
						"bilinear",
						"area",
						"bislerp"
					]
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "PatchModelAddDownscale",
		"display_name": "PatchModelAddDownscale (Kohya Deep Shrink)",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"ImageCrop": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageCrop",
		"display_name": "ImageCrop",
		"description": "",
		"category": "image/transform",
		"output_node": false
	},
	"RepeatImageBatch": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"amount": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "RepeatImageBatch",
		"display_name": "RepeatImageBatch",
		"description": "",
		"category": "image/batch",
		"output_node": false
	},
	"ImageFromBatch": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"batch_index": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 4095
					}
				],
				"length": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageFromBatch",
		"display_name": "ImageFromBatch",
		"description": "",
		"category": "image/batch",
		"output_node": false
	},
	"SaveAnimatedWEBP": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				],
				"fps": [
					"FLOAT",
					{
						"default": 6,
						"min": 0.01,
						"max": 1000,
						"step": 0.01
					}
				],
				"lossless": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"quality": [
					"INT",
					{
						"default": 80,
						"min": 0,
						"max": 100
					}
				],
				"method": [
					[
						"default",
						"fastest",
						"slowest"
					]
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "SaveAnimatedWEBP",
		"display_name": "SaveAnimatedWEBP",
		"description": "",
		"category": "image/animation",
		"output_node": true
	},
	"SaveAnimatedPNG": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				],
				"fps": [
					"FLOAT",
					{
						"default": 6,
						"min": 0.01,
						"max": 1000,
						"step": 0.01
					}
				],
				"compress_level": [
					"INT",
					{
						"default": 4,
						"min": 0,
						"max": 9
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "SaveAnimatedPNG",
		"display_name": "SaveAnimatedPNG",
		"description": "",
		"category": "image/animation",
		"output_node": true
	},
	"ImageOnlyCheckpointLoader": {
		"input": {
			"required": {
				"ckpt_name": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP_VISION",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CLIP_VISION",
			"VAE"
		],
		"name": "ImageOnlyCheckpointLoader",
		"display_name": "Image Only Checkpoint Loader (img2vid model)",
		"description": "",
		"category": "loaders/video_models",
		"output_node": false
	},
	"SVD_img2vid_Conditioning": {
		"input": {
			"required": {
				"clip_vision": [
					"CLIP_VISION"
				],
				"init_image": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"width": [
					"INT",
					{
						"default": 1024,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 576,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"video_frames": [
					"INT",
					{
						"default": 14,
						"min": 1,
						"max": 4096
					}
				],
				"motion_bucket_id": [
					"INT",
					{
						"default": 127,
						"min": 1,
						"max": 1023
					}
				],
				"fps": [
					"INT",
					{
						"default": 6,
						"min": 1,
						"max": 1024
					}
				],
				"augmentation_level": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"latent"
		],
		"name": "SVD_img2vid_Conditioning",
		"display_name": "SVD_img2vid_Conditioning",
		"description": "",
		"category": "conditioning/video_models",
		"output_node": false
	},
	"VideoLinearCFGGuidance": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"min_cfg": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.5,
						"round": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "VideoLinearCFGGuidance",
		"display_name": "VideoLinearCFGGuidance",
		"description": "",
		"category": "sampling/video_models",
		"output_node": false
	},
	"VideoTriangleCFGGuidance": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"min_cfg": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.5,
						"round": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "VideoTriangleCFGGuidance",
		"display_name": "VideoTriangleCFGGuidance",
		"description": "",
		"category": "sampling/video_models",
		"output_node": false
	},
	"ImageOnlyCheckpointSave": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"clip_vision": [
					"CLIP_VISION"
				],
				"vae": [
					"VAE"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "checkpoints/ComfyUI"
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "ImageOnlyCheckpointSave",
		"display_name": "ImageOnlyCheckpointSave",
		"description": "",
		"category": "_for_testing",
		"output_node": true
	},
	"SelfAttentionGuidance": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"scale": [
					"FLOAT",
					{
						"default": 0.5,
						"min": -2,
						"max": 5,
						"step": 0.1
					}
				],
				"blur_sigma": [
					"FLOAT",
					{
						"default": 2,
						"min": 0,
						"max": 10,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "SelfAttentionGuidance",
		"display_name": "Self-Attention Guidance",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"PerpNeg": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"empty_conditioning": [
					"CONDITIONING"
				],
				"neg_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "PerpNeg",
		"display_name": "Perp-Neg (DEPRECATED by PerpNegGuider)",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"PerpNegGuider": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"empty_conditioning": [
					"CONDITIONING"
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100,
						"step": 0.1,
						"round": 0.01
					}
				],
				"neg_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"GUIDER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"GUIDER"
		],
		"name": "PerpNegGuider",
		"display_name": "PerpNegGuider",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"StableZero123_Conditioning": {
		"input": {
			"required": {
				"clip_vision": [
					"CLIP_VISION"
				],
				"init_image": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"width": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				],
				"elevation": [
					"FLOAT",
					{
						"default": 0,
						"min": -180,
						"max": 180,
						"step": 0.1,
						"round": false
					}
				],
				"azimuth": [
					"FLOAT",
					{
						"default": 0,
						"min": -180,
						"max": 180,
						"step": 0.1,
						"round": false
					}
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"latent"
		],
		"name": "StableZero123_Conditioning",
		"display_name": "StableZero123_Conditioning",
		"description": "",
		"category": "conditioning/3d_models",
		"output_node": false
	},
	"StableZero123_Conditioning_Batched": {
		"input": {
			"required": {
				"clip_vision": [
					"CLIP_VISION"
				],
				"init_image": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"width": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				],
				"elevation": [
					"FLOAT",
					{
						"default": 0,
						"min": -180,
						"max": 180,
						"step": 0.1,
						"round": false
					}
				],
				"azimuth": [
					"FLOAT",
					{
						"default": 0,
						"min": -180,
						"max": 180,
						"step": 0.1,
						"round": false
					}
				],
				"elevation_batch_increment": [
					"FLOAT",
					{
						"default": 0,
						"min": -180,
						"max": 180,
						"step": 0.1,
						"round": false
					}
				],
				"azimuth_batch_increment": [
					"FLOAT",
					{
						"default": 0,
						"min": -180,
						"max": 180,
						"step": 0.1,
						"round": false
					}
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"latent"
		],
		"name": "StableZero123_Conditioning_Batched",
		"display_name": "StableZero123_Conditioning_Batched",
		"description": "",
		"category": "conditioning/3d_models",
		"output_node": false
	},
	"SV3D_Conditioning": {
		"input": {
			"required": {
				"clip_vision": [
					"CLIP_VISION"
				],
				"init_image": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"width": [
					"INT",
					{
						"default": 576,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 576,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"video_frames": [
					"INT",
					{
						"default": 21,
						"min": 1,
						"max": 4096
					}
				],
				"elevation": [
					"FLOAT",
					{
						"default": 0,
						"min": -90,
						"max": 90,
						"step": 0.1,
						"round": false
					}
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"latent"
		],
		"name": "SV3D_Conditioning",
		"display_name": "SV3D_Conditioning",
		"description": "",
		"category": "conditioning/3d_models",
		"output_node": false
	},
	"SD_4XUpscale_Conditioning": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"scale_ratio": [
					"FLOAT",
					{
						"default": 4,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"noise_augmentation": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"latent"
		],
		"name": "SD_4XUpscale_Conditioning",
		"display_name": "SD_4XUpscale_Conditioning",
		"description": "",
		"category": "conditioning/upscale_diffusion",
		"output_node": false
	},
	"PhotoMakerLoader": {
		"input": {
			"required": {
				"photomaker_model_name": [
					[]
				]
			}
		},
		"output": [
			"PHOTOMAKER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"PHOTOMAKER"
		],
		"name": "PhotoMakerLoader",
		"display_name": "PhotoMakerLoader",
		"description": "",
		"category": "_for_testing/photomaker",
		"output_node": false
	},
	"PhotoMakerEncode": {
		"input": {
			"required": {
				"photomaker": [
					"PHOTOMAKER"
				],
				"image": [
					"IMAGE"
				],
				"clip": [
					"CLIP"
				],
				"text": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": true,
						"default": "photograph of photomaker"
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "PhotoMakerEncode",
		"display_name": "PhotoMakerEncode",
		"description": "",
		"category": "_for_testing/photomaker",
		"output_node": false
	},
	"CLIPTextEncodeControlnet": {
		"input": {
			"required": {
				"clip": [
					"CLIP"
				],
				"conditioning": [
					"CONDITIONING"
				],
				"text": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": true
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "CLIPTextEncodeControlnet",
		"display_name": "CLIPTextEncodeControlnet",
		"description": "",
		"category": "_for_testing/conditioning",
		"output_node": false
	},
	"Morphology": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"operation": [
					[
						"erode",
						"dilate",
						"open",
						"close",
						"gradient",
						"bottom_hat",
						"top_hat"
					]
				],
				"kernel_size": [
					"INT",
					{
						"default": 3,
						"min": 3,
						"max": 999,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Morphology",
		"display_name": "ImageMorphology",
		"description": "",
		"category": "image/postprocessing",
		"output_node": false
	},
	"StableCascade_EmptyLatentImage": {
		"input": {
			"required": {
				"width": [
					"INT",
					{
						"default": 1024,
						"min": 256,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 1024,
						"min": 256,
						"max": 16384,
						"step": 8
					}
				],
				"compression": [
					"INT",
					{
						"default": 42,
						"min": 4,
						"max": 128,
						"step": 1
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				]
			}
		},
		"output": [
			"LATENT",
			"LATENT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"stage_c",
			"stage_b"
		],
		"name": "StableCascade_EmptyLatentImage",
		"display_name": "StableCascade_EmptyLatentImage",
		"description": "",
		"category": "latent/stable_cascade",
		"output_node": false
	},
	"StableCascade_StageB_Conditioning": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"stage_c": [
					"LATENT"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "StableCascade_StageB_Conditioning",
		"display_name": "StableCascade_StageB_Conditioning",
		"description": "",
		"category": "conditioning/stable_cascade",
		"output_node": false
	},
	"StableCascade_StageC_VAEEncode": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"compression": [
					"INT",
					{
						"default": 42,
						"min": 4,
						"max": 128,
						"step": 1
					}
				]
			}
		},
		"output": [
			"LATENT",
			"LATENT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"stage_c",
			"stage_b"
		],
		"name": "StableCascade_StageC_VAEEncode",
		"display_name": "StableCascade_StageC_VAEEncode",
		"description": "",
		"category": "latent/stable_cascade",
		"output_node": false
	},
	"StableCascade_SuperResolutionControlnet": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				]
			}
		},
		"output": [
			"IMAGE",
			"LATENT",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"controlnet_input",
			"stage_c",
			"stage_b"
		],
		"name": "StableCascade_SuperResolutionControlnet",
		"display_name": "StableCascade_SuperResolutionControlnet",
		"description": "",
		"category": "_for_testing/stable_cascade",
		"output_node": false
	},
	"DifferentialDiffusion": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "DifferentialDiffusion",
		"display_name": "Differential Diffusion",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"InstructPixToPixConditioning": {
		"input": {
			"required": {
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"vae": [
					"VAE"
				],
				"pixels": [
					"IMAGE"
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"latent"
		],
		"name": "InstructPixToPixConditioning",
		"display_name": "InstructPixToPixConditioning",
		"description": "",
		"category": "conditioning/instructpix2pix",
		"output_node": false
	},
	"ModelMergeSD1": {
		"input": {
			"required": {
				"model1": [
					"MODEL"
				],
				"model2": [
					"MODEL"
				],
				"time_embed.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"label_emb.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.0.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.1.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.2.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.3.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.4.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.5.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.6.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.7.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.8.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.9.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.10.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.11.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"middle_block.0.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"middle_block.1.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"middle_block.2.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.0.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.1.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.2.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.3.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.4.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.5.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.6.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.7.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.8.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.9.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.10.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.11.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"out.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelMergeSD1",
		"display_name": "ModelMergeSD1",
		"description": "",
		"category": "advanced/model_merging/model_specific",
		"output_node": false
	},
	"ModelMergeSD2": {
		"input": {
			"required": {
				"model1": [
					"MODEL"
				],
				"model2": [
					"MODEL"
				],
				"time_embed.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"label_emb.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.0.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.1.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.2.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.3.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.4.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.5.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.6.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.7.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.8.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.9.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.10.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.11.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"middle_block.0.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"middle_block.1.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"middle_block.2.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.0.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.1.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.2.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.3.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.4.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.5.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.6.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.7.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.8.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.9.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.10.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.11.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"out.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelMergeSD2",
		"display_name": "ModelMergeSD2",
		"description": "",
		"category": "advanced/model_merging/model_specific",
		"output_node": false
	},
	"ModelMergeSDXL": {
		"input": {
			"required": {
				"model1": [
					"MODEL"
				],
				"model2": [
					"MODEL"
				],
				"time_embed.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"label_emb.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.0": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.1": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.2": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.3": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.4": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.5": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.6": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.7": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"input_blocks.8": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"middle_block.0": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"middle_block.1": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"middle_block.2": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.0": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.1": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.2": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.3": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.4": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.5": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.6": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.7": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"output_blocks.8": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"out.": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelMergeSDXL",
		"display_name": "ModelMergeSDXL",
		"description": "",
		"category": "advanced/model_merging/model_specific",
		"output_node": false
	},
	"PerturbedAttentionGuidance": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"scale": [
					"FLOAT",
					{
						"default": 3,
						"min": 0,
						"max": 100,
						"step": 0.1,
						"round": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "PerturbedAttentionGuidance",
		"display_name": "PerturbedAttentionGuidance",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"AlignYourStepsScheduler": {
		"input": {
			"required": {
				"model_type": [
					[
						"SD1",
						"SDXL",
						"SVD"
					]
				],
				"steps": [
					"INT",
					{
						"default": 10,
						"min": 10,
						"max": 10000
					}
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"SIGMAS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMAS"
		],
		"name": "AlignYourStepsScheduler",
		"display_name": "AlignYourStepsScheduler",
		"description": "",
		"category": "sampling/custom_sampling/schedulers",
		"output_node": false
	},
	"UNetSelfAttentionMultiply": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"q": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"k": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"v": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"out": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "UNetSelfAttentionMultiply",
		"display_name": "UNetSelfAttentionMultiply",
		"description": "",
		"category": "_for_testing/attention_experiments",
		"output_node": false
	},
	"UNetCrossAttentionMultiply": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"q": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"k": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"v": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"out": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "UNetCrossAttentionMultiply",
		"display_name": "UNetCrossAttentionMultiply",
		"description": "",
		"category": "_for_testing/attention_experiments",
		"output_node": false
	},
	"CLIPAttentionMultiply": {
		"input": {
			"required": {
				"clip": [
					"CLIP"
				],
				"q": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"k": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"v": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"out": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CLIP"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CLIP"
		],
		"name": "CLIPAttentionMultiply",
		"display_name": "CLIPAttentionMultiply",
		"description": "",
		"category": "_for_testing/attention_experiments",
		"output_node": false
	},
	"UNetTemporalAttentionMultiply": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"self_structural": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"self_temporal": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"cross_structural": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"cross_temporal": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "UNetTemporalAttentionMultiply",
		"display_name": "UNetTemporalAttentionMultiply",
		"description": "",
		"category": "_for_testing/attention_experiments",
		"output_node": false
	},
	"SamplerLCMUpscale": {
		"input": {
			"required": {
				"scale_ratio": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.1,
						"max": 20,
						"step": 0.01
					}
				],
				"scale_steps": [
					"INT",
					{
						"default": -1,
						"min": -1,
						"max": 1000,
						"step": 1
					}
				],
				"upscale_method": [
					[
						"bislerp",
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic"
					]
				]
			}
		},
		"output": [
			"SAMPLER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SAMPLER"
		],
		"name": "SamplerLCMUpscale",
		"display_name": "SamplerLCMUpscale",
		"description": "",
		"category": "sampling/custom_sampling/samplers",
		"output_node": false
	},
	"WebcamCapture": {
		"input": {
			"required": {
				"image": [
					"WEBCAM",
					{}
				],
				"width": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"capture_on_queue": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "WebcamCapture",
		"display_name": "Webcam Capture",
		"description": "",
		"category": "image",
		"output_node": false
	},
	"TripleCLIPLoader": {
		"input": {
			"required": {
				"clip_name1": [
					[]
				],
				"clip_name2": [
					[]
				],
				"clip_name3": [
					[]
				]
			}
		},
		"output": [
			"CLIP"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CLIP"
		],
		"name": "TripleCLIPLoader",
		"display_name": "TripleCLIPLoader",
		"description": "",
		"category": "advanced/loaders",
		"output_node": false
	},
	"EmptySD3LatentImage": {
		"input": {
			"required": {
				"width": [
					"INT",
					{
						"default": 1024,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 1024,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "EmptySD3LatentImage",
		"display_name": "EmptySD3LatentImage",
		"description": "",
		"category": "latent/sd3",
		"output_node": false
	},
	"CLIPTextEncodeSD3": {
		"input": {
			"required": {
				"clip": [
					"CLIP"
				],
				"clip_l": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": true
					}
				],
				"clip_g": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": true
					}
				],
				"t5xxl": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": true
					}
				],
				"empty_padding": [
					[
						"none",
						"empty_prompt"
					]
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "CLIPTextEncodeSD3",
		"display_name": "CLIPTextEncodeSD3",
		"description": "",
		"category": "advanced/conditioning",
		"output_node": false
	},
	"A1111StyleCLIPTextEncode": {
		"input": {
			"required": {
				"text": [
					"STRING",
					{
						"multiline": true
					}
				],
				"clip": [
					"CLIP"
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 150,
						"step": 1
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "A1111StyleCLIPTextEncode",
		"display_name": "A1111 Style CLIPTextEncode",
		"description": "",
		"category": "conditioning",
		"output_node": false
	},
	"TimestepKeyframe": {
		"input": {
			"required": {
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			},
			"optional": {
				"prev_timestep_kf": [
					"TIMESTEP_KEYFRAME"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"cn_weights": [
					"CONTROL_NET_WEIGHTS"
				],
				"latent_keyframe": [
					"LATENT_KEYFRAME"
				],
				"null_latent_kf_strength": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"inherit_missing": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"guarantee_usage": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"mask_optional": [
					"MASK"
				]
			}
		},
		"output": [
			"TIMESTEP_KEYFRAME"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"TIMESTEP_KF"
		],
		"name": "TimestepKeyframe",
		"display_name": "Timestep Keyframe 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
		"output_node": false
	},
	"LatentKeyframe": {
		"input": {
			"required": {
				"batch_index": [
					"INT",
					{
						"default": 0,
						"min": -9223372036854776000,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				]
			},
			"optional": {
				"prev_latent_kf": [
					"LATENT_KEYFRAME"
				]
			}
		},
		"output": [
			"LATENT_KEYFRAME"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT_KF"
		],
		"name": "LatentKeyframe",
		"display_name": "Latent Keyframe 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
		"output_node": false
	},
	"LatentKeyframeGroup": {
		"input": {
			"required": {
				"index_strengths": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				]
			},
			"optional": {
				"prev_latent_kf": [
					"LATENT_KEYFRAME"
				],
				"latent_optional": [
					"LATENT"
				],
				"print_keyframes": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"LATENT_KEYFRAME"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT_KF"
		],
		"name": "LatentKeyframeGroup",
		"display_name": "Latent Keyframe Group 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
		"output_node": false
	},
	"LatentKeyframeBatchedGroup": {
		"input": {
			"required": {
				"float_strengths": [
					"FLOAT",
					{
						"default": -1,
						"min": -1,
						"step": 0.001,
						"forceInput": true
					}
				]
			},
			"optional": {
				"prev_latent_kf": [
					"LATENT_KEYFRAME"
				],
				"print_keyframes": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"LATENT_KEYFRAME"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT_KF"
		],
		"name": "LatentKeyframeBatchedGroup",
		"display_name": "Latent Keyframe Batched Group 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
		"output_node": false
	},
	"LatentKeyframeTiming": {
		"input": {
			"required": {
				"batch_index_from": [
					"INT",
					{
						"default": 0,
						"min": -9223372036854776000,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"batch_index_to_excl": [
					"INT",
					{
						"default": 0,
						"min": -9223372036854776000,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"strength_from": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"strength_to": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"interpolation": [
					[
						"linear",
						"ease-in",
						"ease-out",
						"ease-in-out"
					]
				]
			},
			"optional": {
				"prev_latent_kf": [
					"LATENT_KEYFRAME"
				],
				"print_keyframes": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"LATENT_KEYFRAME"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT_KF"
		],
		"name": "LatentKeyframeTiming",
		"display_name": "Latent Keyframe Interpolation 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/keyframes",
		"output_node": false
	},
	"ACN_AdvancedControlNetApply": {
		"input": {
			"required": {
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"control_net": [
					"CONTROL_NET"
				],
				"image": [
					"IMAGE"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_percent": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			},
			"optional": {
				"mask_optional": [
					"MASK"
				],
				"timestep_kf": [
					"TIMESTEP_KEYFRAME"
				],
				"latent_kf_override": [
					"LATENT_KEYFRAME"
				],
				"weights_override": [
					"CONTROL_NET_WEIGHTS"
				],
				"model_optional": [
					"MODEL"
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"MODEL"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"model_opt"
		],
		"name": "ACN_AdvancedControlNetApply",
		"display_name": "Apply Advanced ControlNet 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝",
		"output_node": false
	},
	"ControlNetLoaderAdvanced": {
		"input": {
			"required": {
				"control_net_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"kohya_controllllite_xl_blur.safetensors",
						"kohya_controllllite_xl_blur_anime.safetensors",
						"kohya_controllllite_xl_canny.safetensors",
						"kohya_controllllite_xl_openpose_anime.safetensors",
						"kohya_controllllite_xl_openpose_anime_v2.safetensors",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				]
			},
			"optional": {
				"timestep_keyframe": [
					"TIMESTEP_KEYFRAME"
				]
			}
		},
		"output": [
			"CONTROL_NET"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTROL_NET"
		],
		"name": "ControlNetLoaderAdvanced",
		"display_name": "Load Advanced ControlNet Model 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝",
		"output_node": false
	},
	"DiffControlNetLoaderAdvanced": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"control_net_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"kohya_controllllite_xl_blur.safetensors",
						"kohya_controllllite_xl_blur_anime.safetensors",
						"kohya_controllllite_xl_canny.safetensors",
						"kohya_controllllite_xl_openpose_anime.safetensors",
						"kohya_controllllite_xl_openpose_anime_v2.safetensors",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				]
			},
			"optional": {
				"timestep_keyframe": [
					"TIMESTEP_KEYFRAME"
				]
			}
		},
		"output": [
			"CONTROL_NET"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTROL_NET"
		],
		"name": "DiffControlNetLoaderAdvanced",
		"display_name": "Load Advanced ControlNet Model (diff) 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝",
		"output_node": false
	},
	"ScaledSoftControlNetWeights": {
		"input": {
			"required": {
				"base_multiplier": [
					"FLOAT",
					{
						"default": 0.825,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"flip_weights": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"CONTROL_NET_WEIGHTS",
			"TIMESTEP_KEYFRAME"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"CN_WEIGHTS",
			"TK_SHORTCUT"
		],
		"name": "ScaledSoftControlNetWeights",
		"display_name": "Scaled Soft Weights 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/weights",
		"output_node": false
	},
	"ScaledSoftMaskedUniversalWeights": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"min_base_multiplier": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"max_base_multiplier": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"CONTROL_NET_WEIGHTS",
			"TIMESTEP_KEYFRAME"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"CN_WEIGHTS",
			"TK_SHORTCUT"
		],
		"name": "ScaledSoftMaskedUniversalWeights",
		"display_name": "Scaled Soft Masked Weights 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/weights",
		"output_node": false
	},
	"SoftControlNetWeights": {
		"input": {
			"required": {
				"weight_00": [
					"FLOAT",
					{
						"default": 0.09941396206337118,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_01": [
					"FLOAT",
					{
						"default": 0.12050177219802567,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_02": [
					"FLOAT",
					{
						"default": 0.14606275417942507,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_03": [
					"FLOAT",
					{
						"default": 0.17704576264172736,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_04": [
					"FLOAT",
					{
						"default": 0.214600924414215,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_05": [
					"FLOAT",
					{
						"default": 0.26012233262329093,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_06": [
					"FLOAT",
					{
						"default": 0.3152997971191405,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_07": [
					"FLOAT",
					{
						"default": 0.3821815722656249,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_08": [
					"FLOAT",
					{
						"default": 0.4632503906249999,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_09": [
					"FLOAT",
					{
						"default": 0.561515625,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_10": [
					"FLOAT",
					{
						"default": 0.6806249999999999,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_11": [
					"FLOAT",
					{
						"default": 0.825,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_12": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"flip_weights": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"CONTROL_NET_WEIGHTS",
			"TIMESTEP_KEYFRAME"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"CN_WEIGHTS",
			"TK_SHORTCUT"
		],
		"name": "SoftControlNetWeights",
		"display_name": "ControlNet Soft Weights 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet",
		"output_node": false
	},
	"CustomControlNetWeights": {
		"input": {
			"required": {
				"weight_00": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_01": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_02": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_03": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_04": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_05": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_06": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_07": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_08": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_09": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_10": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_11": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_12": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"flip_weights": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"CONTROL_NET_WEIGHTS",
			"TIMESTEP_KEYFRAME"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"CN_WEIGHTS",
			"TK_SHORTCUT"
		],
		"name": "CustomControlNetWeights",
		"display_name": "ControlNet Custom Weights 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/weights/ControlNet",
		"output_node": false
	},
	"SoftT2IAdapterWeights": {
		"input": {
			"required": {
				"weight_00": [
					"FLOAT",
					{
						"default": 0.25,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_01": [
					"FLOAT",
					{
						"default": 0.62,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_02": [
					"FLOAT",
					{
						"default": 0.825,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_03": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"flip_weights": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"CONTROL_NET_WEIGHTS",
			"TIMESTEP_KEYFRAME"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"CN_WEIGHTS",
			"TK_SHORTCUT"
		],
		"name": "SoftT2IAdapterWeights",
		"display_name": "T2IAdapter Soft Weights 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/weights/T2IAdapter",
		"output_node": false
	},
	"CustomT2IAdapterWeights": {
		"input": {
			"required": {
				"weight_00": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_01": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_02": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"weight_03": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"flip_weights": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"CONTROL_NET_WEIGHTS",
			"TIMESTEP_KEYFRAME"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"CN_WEIGHTS",
			"TK_SHORTCUT"
		],
		"name": "CustomT2IAdapterWeights",
		"display_name": "T2IAdapter Custom Weights 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/weights/T2IAdapter",
		"output_node": false
	},
	"ACN_DefaultUniversalWeights": {
		"input": {},
		"output": [
			"CONTROL_NET_WEIGHTS",
			"TIMESTEP_KEYFRAME"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"CN_WEIGHTS",
			"TK_SHORTCUT"
		],
		"name": "ACN_DefaultUniversalWeights",
		"display_name": "Force Default Weights 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/weights",
		"output_node": false
	},
	"ACN_SparseCtrlRGBPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"latent_size": [
					"LATENT"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"proc_IMAGE"
		],
		"name": "ACN_SparseCtrlRGBPreprocessor",
		"display_name": "RGB SparseCtrl 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/preprocess",
		"output_node": false
	},
	"ACN_SparseCtrlLoaderAdvanced": {
		"input": {
			"required": {
				"sparsectrl_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"kohya_controllllite_xl_blur.safetensors",
						"kohya_controllllite_xl_blur_anime.safetensors",
						"kohya_controllllite_xl_canny.safetensors",
						"kohya_controllllite_xl_openpose_anime.safetensors",
						"kohya_controllllite_xl_openpose_anime_v2.safetensors",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				],
				"use_motion": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"motion_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				]
			},
			"optional": {
				"sparse_method": [
					"SPARSE_METHOD"
				],
				"tk_optional": [
					"TIMESTEP_KEYFRAME"
				]
			}
		},
		"output": [
			"CONTROL_NET"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTROL_NET"
		],
		"name": "ACN_SparseCtrlLoaderAdvanced",
		"display_name": "Load SparseCtrl Model 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl",
		"output_node": false
	},
	"ACN_SparseCtrlMergedLoaderAdvanced": {
		"input": {
			"required": {
				"sparsectrl_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"kohya_controllllite_xl_blur.safetensors",
						"kohya_controllllite_xl_blur_anime.safetensors",
						"kohya_controllllite_xl_canny.safetensors",
						"kohya_controllllite_xl_openpose_anime.safetensors",
						"kohya_controllllite_xl_openpose_anime_v2.safetensors",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				],
				"control_net_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"kohya_controllllite_xl_blur.safetensors",
						"kohya_controllllite_xl_blur_anime.safetensors",
						"kohya_controllllite_xl_canny.safetensors",
						"kohya_controllllite_xl_openpose_anime.safetensors",
						"kohya_controllllite_xl_openpose_anime_v2.safetensors",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				],
				"use_motion": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"motion_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				]
			},
			"optional": {
				"sparse_method": [
					"SPARSE_METHOD"
				],
				"tk_optional": [
					"TIMESTEP_KEYFRAME"
				]
			}
		},
		"output": [
			"CONTROL_NET"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTROL_NET"
		],
		"name": "ACN_SparseCtrlMergedLoaderAdvanced",
		"display_name": "Load Merged SparseCtrl Model 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl/experimental",
		"output_node": false
	},
	"ACN_SparseCtrlIndexMethodNode": {
		"input": {
			"required": {
				"indexes": [
					"STRING",
					{
						"default": "0"
					}
				]
			}
		},
		"output": [
			"SPARSE_METHOD"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SPARSE_METHOD"
		],
		"name": "ACN_SparseCtrlIndexMethodNode",
		"display_name": "SparseCtrl Index Method 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl",
		"output_node": false
	},
	"ACN_SparseCtrlSpreadMethodNode": {
		"input": {
			"required": {
				"spread": [
					[
						"uniform",
						"starting",
						"ending",
						"center"
					]
				]
			}
		},
		"output": [
			"SPARSE_METHOD"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SPARSE_METHOD"
		],
		"name": "ACN_SparseCtrlSpreadMethodNode",
		"display_name": "SparseCtrl Spread Method 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/SparseCtrl",
		"output_node": false
	},
	"LoadImagesFromDirectory": {
		"input": {
			"required": {
				"directory": [
					"STRING",
					{
						"default": ""
					}
				]
			},
			"optional": {
				"image_load_cap": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"start_index": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK",
			"INT"
		],
		"name": "LoadImagesFromDirectory",
		"display_name": "Load Images [DEPRECATED] 🛂🅐🅒🅝",
		"description": "",
		"category": "Adv-ControlNet 🛂🅐🅒🅝/deprecated",
		"output_node": false
	},
	"ADE_AnimateDiffLoRALoader": {
		"input": {
			"required": {
				"lora_name": [
					[]
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				]
			},
			"optional": {
				"prev_motion_lora": [
					"MOTION_LORA"
				]
			}
		},
		"output": [
			"MOTION_LORA"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MOTION_LORA"
		],
		"name": "ADE_AnimateDiffLoRALoader",
		"display_name": "Load AnimateDiff LoRA 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓",
		"output_node": false
	},
	"ADE_AnimateDiffSamplingSettings": {
		"input": {
			"required": {
				"batch_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"noise_type": [
					[
						"default",
						"constant",
						"empty",
						"repeated_context",
						"FreeNoise"
					]
				],
				"seed_gen": [
					[
						"comfy",
						"auto1111"
					]
				],
				"seed_offset": [
					"INT",
					{
						"default": 0,
						"min": -9007199254740991,
						"max": 9007199254740991
					}
				]
			},
			"optional": {
				"noise_layers": [
					"NOISE_LAYERS"
				],
				"iteration_opts": [
					"ITERATION_OPTS"
				],
				"seed_override": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000,
						"forceInput": true
					}
				],
				"adapt_denoise_steps": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"custom_cfg": [
					"CUSTOM_CFG"
				],
				"sigma_schedule": [
					"SIGMA_SCHEDULE"
				]
			}
		},
		"output": [
			"SAMPLE_SETTINGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"settings"
		],
		"name": "ADE_AnimateDiffSamplingSettings",
		"display_name": "Sample Settings 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓",
		"output_node": false
	},
	"ADE_AnimateDiffKeyframe": {
		"input": {
			"required": {
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			},
			"optional": {
				"prev_ad_keyframes": [
					"AD_KEYFRAMES"
				],
				"scale_multival": [
					"MULTIVAL"
				],
				"effect_multival": [
					"MULTIVAL"
				],
				"inherit_missing": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"guarantee_steps": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 9007199254740991
					}
				]
			}
		},
		"output": [
			"AD_KEYFRAMES"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"AD_KEYFRAMES"
		],
		"name": "ADE_AnimateDiffKeyframe",
		"display_name": "AnimateDiff Keyframe 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓",
		"output_node": false
	},
	"ADE_MultivalDynamic": {
		"input": {
			"required": {
				"float_val": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				]
			},
			"optional": {
				"mask_optional": [
					"MASK"
				]
			}
		},
		"output": [
			"MULTIVAL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MULTIVAL"
		],
		"name": "ADE_MultivalDynamic",
		"display_name": "Multival Dynamic 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/multival",
		"output_node": false
	},
	"ADE_MultivalScaledMask": {
		"input": {
			"required": {
				"min_float_val": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"step": 0.001
					}
				],
				"max_float_val": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				],
				"mask": [
					"MASK"
				]
			},
			"optional": {
				"scaling": [
					[
						"absolute",
						"relative"
					]
				]
			}
		},
		"output": [
			"MULTIVAL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MULTIVAL"
		],
		"name": "ADE_MultivalScaledMask",
		"display_name": "Multival Scaled Mask 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/multival",
		"output_node": false
	},
	"ADE_StandardStaticContextOptions": {
		"input": {
			"required": {
				"context_length": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 128
					}
				],
				"context_overlap": [
					"INT",
					{
						"default": 4,
						"min": 0,
						"max": 128
					}
				]
			},
			"optional": {
				"fuse_method": [
					[
						"pyramid",
						"relative",
						"flat"
					]
				],
				"use_on_equal_length": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"guarantee_steps": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"prev_context": [
					"CONTEXT_OPTIONS"
				],
				"view_opts": [
					"VIEW_OPTS"
				]
			}
		},
		"output": [
			"CONTEXT_OPTIONS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTEXT_OPTS"
		],
		"name": "ADE_StandardStaticContextOptions",
		"display_name": "Context Options◆Standard Static 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/context opts",
		"output_node": false
	},
	"ADE_StandardUniformContextOptions": {
		"input": {
			"required": {
				"context_length": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 128
					}
				],
				"context_stride": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 32
					}
				],
				"context_overlap": [
					"INT",
					{
						"default": 4,
						"min": 0,
						"max": 128
					}
				]
			},
			"optional": {
				"fuse_method": [
					[
						"pyramid",
						"flat"
					]
				],
				"use_on_equal_length": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"guarantee_steps": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"prev_context": [
					"CONTEXT_OPTIONS"
				],
				"view_opts": [
					"VIEW_OPTS"
				]
			}
		},
		"output": [
			"CONTEXT_OPTIONS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTEXT_OPTS"
		],
		"name": "ADE_StandardUniformContextOptions",
		"display_name": "Context Options◆Standard Uniform 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/context opts",
		"output_node": false
	},
	"ADE_LoopedUniformContextOptions": {
		"input": {
			"required": {
				"context_length": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 128
					}
				],
				"context_stride": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 32
					}
				],
				"context_overlap": [
					"INT",
					{
						"default": 4,
						"min": 0,
						"max": 128
					}
				],
				"closed_loop": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"fuse_method": [
					[
						"pyramid",
						"flat"
					]
				],
				"use_on_equal_length": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"guarantee_steps": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"prev_context": [
					"CONTEXT_OPTIONS"
				],
				"view_opts": [
					"VIEW_OPTS"
				]
			}
		},
		"output": [
			"CONTEXT_OPTIONS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTEXT_OPTS"
		],
		"name": "ADE_LoopedUniformContextOptions",
		"display_name": "Context Options◆Looped Uniform 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/context opts",
		"output_node": false
	},
	"ADE_ViewsOnlyContextOptions": {
		"input": {
			"required": {
				"view_opts_req": [
					"VIEW_OPTS"
				]
			},
			"optional": {
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"guarantee_steps": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"prev_context": [
					"CONTEXT_OPTIONS"
				]
			}
		},
		"output": [
			"CONTEXT_OPTIONS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTEXT_OPTS"
		],
		"name": "ADE_ViewsOnlyContextOptions",
		"display_name": "Context Options◆Views Only [VRAM⇈] 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/context opts",
		"output_node": false
	},
	"ADE_BatchedContextOptions": {
		"input": {
			"required": {
				"context_length": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 128
					}
				]
			},
			"optional": {
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"guarantee_steps": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"prev_context": [
					"CONTEXT_OPTIONS"
				]
			}
		},
		"output": [
			"CONTEXT_OPTIONS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTEXT_OPTS"
		],
		"name": "ADE_BatchedContextOptions",
		"display_name": "Context Options◆Batched [Non-AD] 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/context opts",
		"output_node": false
	},
	"ADE_AnimateDiffUniformContextOptions": {
		"input": {
			"required": {
				"context_length": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 128
					}
				],
				"context_stride": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 32
					}
				],
				"context_overlap": [
					"INT",
					{
						"default": 4,
						"min": 0,
						"max": 128
					}
				],
				"context_schedule": [
					[
						"uniform"
					]
				],
				"closed_loop": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"fuse_method": [
					[
						"pyramid",
						"flat"
					],
					{
						"default": "flat"
					}
				],
				"use_on_equal_length": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"guarantee_steps": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"prev_context": [
					"CONTEXT_OPTIONS"
				],
				"view_opts": [
					"VIEW_OPTS"
				]
			}
		},
		"output": [
			"CONTEXT_OPTIONS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONTEXT_OPTS"
		],
		"name": "ADE_AnimateDiffUniformContextOptions",
		"display_name": "Context Options◆Looped Uniform 🎭🅐🅓",
		"description": "",
		"category": "",
		"output_node": false
	},
	"ADE_StandardStaticViewOptions": {
		"input": {
			"required": {
				"view_length": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 128
					}
				],
				"view_overlap": [
					"INT",
					{
						"default": 4,
						"min": 0,
						"max": 128
					}
				]
			},
			"optional": {
				"fuse_method": [
					[
						"pyramid",
						"flat"
					]
				]
			}
		},
		"output": [
			"VIEW_OPTS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"VIEW_OPTS"
		],
		"name": "ADE_StandardStaticViewOptions",
		"display_name": "View Options◆Standard Static 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/context opts/view opts",
		"output_node": false
	},
	"ADE_StandardUniformViewOptions": {
		"input": {
			"required": {
				"view_length": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 128
					}
				],
				"view_stride": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 32
					}
				],
				"view_overlap": [
					"INT",
					{
						"default": 4,
						"min": 0,
						"max": 128
					}
				]
			},
			"optional": {
				"fuse_method": [
					[
						"pyramid",
						"flat"
					]
				]
			}
		},
		"output": [
			"VIEW_OPTS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"VIEW_OPTS"
		],
		"name": "ADE_StandardUniformViewOptions",
		"display_name": "View Options◆Standard Uniform 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/context opts/view opts",
		"output_node": false
	},
	"ADE_LoopedUniformViewOptions": {
		"input": {
			"required": {
				"view_length": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 128
					}
				],
				"view_stride": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 32
					}
				],
				"view_overlap": [
					"INT",
					{
						"default": 4,
						"min": 0,
						"max": 128
					}
				],
				"closed_loop": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"fuse_method": [
					[
						"pyramid",
						"flat"
					]
				],
				"use_on_equal_length": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"VIEW_OPTS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"VIEW_OPTS"
		],
		"name": "ADE_LoopedUniformViewOptions",
		"display_name": "View Options◆Looped Uniform 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/context opts/view opts",
		"output_node": false
	},
	"ADE_IterationOptsDefault": {
		"input": {
			"required": {
				"iterations": [
					"INT",
					{
						"default": 1,
						"min": 1
					}
				]
			},
			"optional": {
				"iter_batch_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"iter_seed_offset": [
					"INT",
					{
						"default": 0,
						"min": -9007199254740991,
						"max": 9007199254740991
					}
				]
			}
		},
		"output": [
			"ITERATION_OPTS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"ITERATION_OPTS"
		],
		"name": "ADE_IterationOptsDefault",
		"display_name": "Default Iteration Options 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/iteration opts",
		"output_node": false
	},
	"ADE_IterationOptsFreeInit": {
		"input": {
			"required": {
				"iterations": [
					"INT",
					{
						"default": 2,
						"min": 1
					}
				],
				"filter": [
					[
						"gaussian",
						"butterworth",
						"ideal",
						"box"
					]
				],
				"d_s": [
					"FLOAT",
					{
						"default": 0.25,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"d_t": [
					"FLOAT",
					{
						"default": 0.25,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"n_butterworth": [
					"INT",
					{
						"default": 4,
						"min": 1,
						"max": 100
					}
				],
				"sigma_step": [
					"INT",
					{
						"default": 999,
						"min": 1,
						"max": 999
					}
				],
				"apply_to_1st_iter": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"init_type": [
					[
						"FreeInit [sampler sigma]",
						"FreeInit [model sigma]",
						"DinkInit_v1"
					]
				]
			},
			"optional": {
				"iter_batch_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"iter_seed_offset": [
					"INT",
					{
						"default": 1,
						"min": -9007199254740991,
						"max": 9007199254740991
					}
				]
			}
		},
		"output": [
			"ITERATION_OPTS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"ITERATION_OPTS"
		],
		"name": "ADE_IterationOptsFreeInit",
		"display_name": "FreeInit Iteration Options 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/iteration opts",
		"output_node": false
	},
	"ADE_NoiseLayerAdd": {
		"input": {
			"required": {
				"batch_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"noise_type": [
					[
						"default",
						"constant",
						"empty",
						"repeated_context",
						"FreeNoise"
					]
				],
				"seed_gen_override": [
					[
						"use existing",
						"comfy",
						"auto1111"
					]
				],
				"seed_offset": [
					"INT",
					{
						"default": 0,
						"min": -9007199254740991,
						"max": 9007199254740991
					}
				],
				"noise_weight": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				]
			},
			"optional": {
				"prev_noise_layers": [
					"NOISE_LAYERS"
				],
				"mask_optional": [
					"MASK"
				],
				"seed_override": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000,
						"forceInput": true
					}
				]
			}
		},
		"output": [
			"NOISE_LAYERS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"NOISE_LAYERS"
		],
		"name": "ADE_NoiseLayerAdd",
		"display_name": "Noise Layer [Add] 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/noise layers",
		"output_node": false
	},
	"ADE_NoiseLayerAddWeighted": {
		"input": {
			"required": {
				"batch_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"noise_type": [
					[
						"default",
						"constant",
						"empty",
						"repeated_context",
						"FreeNoise"
					]
				],
				"seed_gen_override": [
					[
						"use existing",
						"comfy",
						"auto1111"
					]
				],
				"seed_offset": [
					"INT",
					{
						"default": 0,
						"min": -9007199254740991,
						"max": 9007199254740991
					}
				],
				"noise_weight": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"balance_multiplier": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				]
			},
			"optional": {
				"prev_noise_layers": [
					"NOISE_LAYERS"
				],
				"mask_optional": [
					"MASK"
				],
				"seed_override": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000,
						"forceInput": true
					}
				]
			}
		},
		"output": [
			"NOISE_LAYERS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"NOISE_LAYERS"
		],
		"name": "ADE_NoiseLayerAddWeighted",
		"display_name": "Noise Layer [Add Weighted] 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/noise layers",
		"output_node": false
	},
	"ADE_NoiseLayerReplace": {
		"input": {
			"required": {
				"batch_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"noise_type": [
					[
						"default",
						"constant",
						"empty",
						"repeated_context",
						"FreeNoise"
					]
				],
				"seed_gen_override": [
					[
						"use existing",
						"comfy",
						"auto1111"
					]
				],
				"seed_offset": [
					"INT",
					{
						"default": 0,
						"min": -9007199254740991,
						"max": 9007199254740991
					}
				]
			},
			"optional": {
				"prev_noise_layers": [
					"NOISE_LAYERS"
				],
				"mask_optional": [
					"MASK"
				],
				"seed_override": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000,
						"forceInput": true
					}
				]
			}
		},
		"output": [
			"NOISE_LAYERS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"NOISE_LAYERS"
		],
		"name": "ADE_NoiseLayerReplace",
		"display_name": "Noise Layer [Replace] 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/noise layers",
		"output_node": false
	},
	"ADE_AnimateDiffSettings": {
		"input": {
			"optional": {
				"pe_adjust": [
					"PE_ADJUST"
				]
			}
		},
		"output": [
			"AD_SETTINGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"AD_SETTINGS"
		],
		"name": "ADE_AnimateDiffSettings",
		"display_name": "AnimateDiff Settings 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/ad settings",
		"output_node": false
	},
	"ADE_AdjustPESweetspotStretch": {
		"input": {
			"required": {
				"sweetspot": [
					"INT",
					{
						"default": 16,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"new_sweetspot": [
					"INT",
					{
						"default": 16,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"print_adjustment": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"prev_pe_adjust": [
					"PE_ADJUST"
				]
			}
		},
		"output": [
			"PE_ADJUST"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"PE_ADJUST"
		],
		"name": "ADE_AdjustPESweetspotStretch",
		"display_name": "Adjust PE [Sweetspot Stretch] 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust",
		"output_node": false
	},
	"ADE_AdjustPEFullStretch": {
		"input": {
			"required": {
				"pe_stretch": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991
					}
				],
				"print_adjustment": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"prev_pe_adjust": [
					"PE_ADJUST"
				]
			}
		},
		"output": [
			"PE_ADJUST"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"PE_ADJUST"
		],
		"name": "ADE_AdjustPEFullStretch",
		"display_name": "Adjust PE [Full Stretch] 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust",
		"output_node": false
	},
	"ADE_AdjustPEManual": {
		"input": {
			"required": {
				"cap_initial_pe_length": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"interpolate_pe_to_length": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"initial_pe_idx_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"final_pe_idx_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"print_adjustment": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"prev_pe_adjust": [
					"PE_ADJUST"
				]
			}
		},
		"output": [
			"PE_ADJUST"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"PE_ADJUST"
		],
		"name": "ADE_AdjustPEManual",
		"display_name": "Adjust PE [Manual] 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/ad settings/pe adjust",
		"output_node": false
	},
	"ADE_CustomCFG": {
		"input": {
			"required": {
				"cfg_multival": [
					"MULTIVAL"
				]
			}
		},
		"output": [
			"CUSTOM_CFG"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CUSTOM_CFG"
		],
		"name": "ADE_CustomCFG",
		"display_name": "Custom CFG 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/sample settings",
		"output_node": false
	},
	"ADE_CustomCFGKeyframe": {
		"input": {
			"required": {
				"cfg_multival": [
					"MULTIVAL"
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"guarantee_steps": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 9007199254740991
					}
				]
			},
			"optional": {
				"prev_custom_cfg": [
					"CUSTOM_CFG"
				]
			}
		},
		"output": [
			"CUSTOM_CFG"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CUSTOM_CFG"
		],
		"name": "ADE_CustomCFGKeyframe",
		"display_name": "Custom CFG Keyframe 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/sample settings",
		"output_node": false
	},
	"ADE_SigmaSchedule": {
		"input": {
			"required": {
				"beta_schedule": [
					[
						"sqrt_linear (AnimateDiff)",
						"linear (AnimateDiff-SDXL)",
						"linear (HotshotXL/default)",
						"avg(sqrt_linear,linear)",
						"lcm avg(sqrt_linear,linear)",
						"lcm",
						"lcm[100_ots]",
						"lcm >> sqrt_linear",
						"sqrt",
						"cosine",
						"squaredcos_cap_v2"
					]
				]
			}
		},
		"output": [
			"SIGMA_SCHEDULE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMA_SCHEDULE"
		],
		"name": "ADE_SigmaSchedule",
		"display_name": "Create Sigma Schedule 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule",
		"output_node": false
	},
	"ADE_RawSigmaSchedule": {
		"input": {
			"required": {
				"raw_beta_schedule": [
					[
						"linear",
						"sqrt_linear",
						"sqrt",
						"cosine",
						"squaredcos_cap_v2"
					]
				],
				"linear_start": [
					"FLOAT",
					{
						"default": 0.00085,
						"min": 0,
						"max": 1,
						"step": 0.000001
					}
				],
				"linear_end": [
					"FLOAT",
					{
						"default": 0.012,
						"min": 0,
						"max": 1,
						"step": 0.000001
					}
				],
				"sampling": [
					[
						"eps",
						"v_prediction",
						"lcm"
					]
				],
				"lcm_original_timesteps": [
					"INT",
					{
						"default": 50,
						"min": 1,
						"max": 1000
					}
				],
				"lcm_zsnr": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"SIGMA_SCHEDULE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMA_SCHEDULE"
		],
		"name": "ADE_RawSigmaSchedule",
		"display_name": "Create Raw Sigma Schedule 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule",
		"output_node": false
	},
	"ADE_SigmaScheduleWeightedAverage": {
		"input": {
			"required": {
				"schedule_A": [
					"SIGMA_SCHEDULE"
				],
				"schedule_B": [
					"SIGMA_SCHEDULE"
				],
				"weight_A": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"SIGMA_SCHEDULE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMA_SCHEDULE"
		],
		"name": "ADE_SigmaScheduleWeightedAverage",
		"display_name": "Sigma Schedule Weighted Mean 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule",
		"output_node": false
	},
	"ADE_SigmaScheduleWeightedAverageInterp": {
		"input": {
			"required": {
				"schedule_A": [
					"SIGMA_SCHEDULE"
				],
				"schedule_B": [
					"SIGMA_SCHEDULE"
				],
				"weight_A_Start": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"weight_A_End": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"interpolation": [
					[
						"linear",
						"ease_in",
						"ease_out",
						"ease_in_out"
					]
				]
			}
		},
		"output": [
			"SIGMA_SCHEDULE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMA_SCHEDULE"
		],
		"name": "ADE_SigmaScheduleWeightedAverageInterp",
		"display_name": "Sigma Schedule Interpolated Mean 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule",
		"output_node": false
	},
	"ADE_SigmaScheduleSplitAndCombine": {
		"input": {
			"required": {
				"schedule_Start": [
					"SIGMA_SCHEDULE"
				],
				"schedule_End": [
					"SIGMA_SCHEDULE"
				],
				"idx_split_percent": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"SIGMA_SCHEDULE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMA_SCHEDULE"
		],
		"name": "ADE_SigmaScheduleSplitAndCombine",
		"display_name": "Sigma Schedule Split Combine 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/sample settings/sigma schedule",
		"output_node": false
	},
	"ADE_AnimateDiffUnload": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ADE_AnimateDiffUnload",
		"display_name": "AnimateDiff Unload 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/extras",
		"output_node": false
	},
	"ADE_EmptyLatentImageLarge": {
		"input": {
			"required": {
				"width": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 262144
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "ADE_EmptyLatentImageLarge",
		"display_name": "Empty Latent Image (Big Batch) 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/extras",
		"output_node": false
	},
	"CheckpointLoaderSimpleWithNoiseSelect": {
		"input": {
			"required": {
				"ckpt_name": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"beta_schedule": [
					[
						"autoselect",
						"use existing",
						"sqrt_linear (AnimateDiff)",
						"linear (AnimateDiff-SDXL)",
						"linear (HotshotXL/default)",
						"avg(sqrt_linear,linear)",
						"lcm avg(sqrt_linear,linear)",
						"lcm",
						"lcm[100_ots]",
						"lcm >> sqrt_linear",
						"sqrt",
						"cosine",
						"squaredcos_cap_v2"
					],
					{
						"default": "use existing"
					}
				]
			},
			"optional": {
				"use_custom_scale_factor": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"scale_factor": [
					"FLOAT",
					{
						"default": 0.18215,
						"min": 0,
						"max": 1,
						"step": 0.00001
					}
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CLIP",
			"VAE"
		],
		"name": "CheckpointLoaderSimpleWithNoiseSelect",
		"display_name": "Load Checkpoint w/ Noise Select 🎭🅐🅓",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/extras",
		"output_node": false
	},
	"ADE_AnimateDiffLoaderGen1": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"model_name": [
					[
						"mm_sdxl_v10_beta.ckpt"
					]
				],
				"beta_schedule": [
					[
						"autoselect",
						"use existing",
						"sqrt_linear (AnimateDiff)",
						"linear (AnimateDiff-SDXL)",
						"linear (HotshotXL/default)",
						"avg(sqrt_linear,linear)",
						"lcm avg(sqrt_linear,linear)",
						"lcm",
						"lcm[100_ots]",
						"lcm >> sqrt_linear",
						"sqrt",
						"cosine",
						"squaredcos_cap_v2"
					],
					{
						"default": "autoselect"
					}
				]
			},
			"optional": {
				"context_options": [
					"CONTEXT_OPTIONS"
				],
				"motion_lora": [
					"MOTION_LORA"
				],
				"ad_settings": [
					"AD_SETTINGS"
				],
				"ad_keyframes": [
					"AD_KEYFRAMES"
				],
				"sample_settings": [
					"SAMPLE_SETTINGS"
				],
				"scale_multival": [
					"MULTIVAL"
				],
				"effect_multival": [
					"MULTIVAL"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ADE_AnimateDiffLoaderGen1",
		"display_name": "AnimateDiff Loader 🎭🅐🅓①",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/① Gen1 nodes ①",
		"output_node": false
	},
	"ADE_AnimateDiffLoaderWithContext": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"model_name": [
					[
						"mm_sdxl_v10_beta.ckpt"
					]
				],
				"beta_schedule": [
					[
						"autoselect",
						"use existing",
						"sqrt_linear (AnimateDiff)",
						"linear (AnimateDiff-SDXL)",
						"linear (HotshotXL/default)",
						"avg(sqrt_linear,linear)",
						"lcm avg(sqrt_linear,linear)",
						"lcm",
						"lcm[100_ots]",
						"lcm >> sqrt_linear",
						"sqrt",
						"cosine",
						"squaredcos_cap_v2"
					],
					{
						"default": "autoselect"
					}
				]
			},
			"optional": {
				"context_options": [
					"CONTEXT_OPTIONS"
				],
				"motion_lora": [
					"MOTION_LORA"
				],
				"ad_settings": [
					"AD_SETTINGS"
				],
				"sample_settings": [
					"SAMPLE_SETTINGS"
				],
				"motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				],
				"apply_v2_models_properly": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"ad_keyframes": [
					"AD_KEYFRAMES"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ADE_AnimateDiffLoaderWithContext",
		"display_name": "AnimateDiff Loader [Legacy] 🎭🅐🅓①",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/① Gen1 nodes ①",
		"output_node": false
	},
	"ADE_AnimateDiffModelSettings_Release": {
		"input": {
			"required": {
				"min_motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				],
				"max_motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				]
			},
			"optional": {
				"mask_motion_scale": [
					"MASK"
				]
			}
		},
		"output": [
			"AD_SETTINGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"AD_SETTINGS"
		],
		"name": "ADE_AnimateDiffModelSettings_Release",
		"display_name": "[DEPR] Motion Model Settings 🎭🅐🅓①",
		"description": "",
		"category": "",
		"output_node": false
	},
	"ADE_AnimateDiffModelSettingsSimple": {
		"input": {
			"required": {
				"motion_pe_stretch": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				]
			},
			"optional": {
				"mask_motion_scale": [
					"MASK"
				],
				"min_motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				],
				"max_motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"AD_SETTINGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"AD_SETTINGS"
		],
		"name": "ADE_AnimateDiffModelSettingsSimple",
		"display_name": "[DEPR] Motion Model Settings (Simple) 🎭🅐🅓①",
		"description": "",
		"category": "",
		"output_node": false
	},
	"ADE_AnimateDiffModelSettings": {
		"input": {
			"required": {
				"pe_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"attn_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"other_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"motion_pe_stretch": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"cap_initial_pe_length": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"interpolate_pe_to_length": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"initial_pe_idx_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"final_pe_idx_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				]
			},
			"optional": {
				"mask_motion_scale": [
					"MASK"
				],
				"min_motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				],
				"max_motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"AD_SETTINGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"AD_SETTINGS"
		],
		"name": "ADE_AnimateDiffModelSettings",
		"display_name": "[DEPR] Motion Model Settings (Advanced) 🎭🅐🅓①",
		"description": "",
		"category": "",
		"output_node": false
	},
	"ADE_AnimateDiffModelSettingsAdvancedAttnStrengths": {
		"input": {
			"required": {
				"pe_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"attn_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"attn_q_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"attn_k_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"attn_v_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"attn_out_weight_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"attn_out_bias_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"other_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.0001
					}
				],
				"motion_pe_stretch": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"cap_initial_pe_length": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"interpolate_pe_to_length": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"initial_pe_idx_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"final_pe_idx_offset": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				]
			},
			"optional": {
				"mask_motion_scale": [
					"MASK"
				],
				"min_motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				],
				"max_motion_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"AD_SETTINGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"AD_SETTINGS"
		],
		"name": "ADE_AnimateDiffModelSettingsAdvancedAttnStrengths",
		"display_name": "[DEPR] Motion Model Settings (Adv. Attn) 🎭🅐🅓①",
		"description": "",
		"category": "",
		"output_node": false
	},
	"ADE_UseEvolvedSampling": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"beta_schedule": [
					[
						"autoselect",
						"use existing",
						"sqrt_linear (AnimateDiff)",
						"linear (AnimateDiff-SDXL)",
						"linear (HotshotXL/default)",
						"avg(sqrt_linear,linear)",
						"lcm avg(sqrt_linear,linear)",
						"lcm",
						"lcm[100_ots]",
						"lcm >> sqrt_linear",
						"sqrt",
						"cosine",
						"squaredcos_cap_v2"
					],
					{
						"default": "autoselect"
					}
				]
			},
			"optional": {
				"m_models": [
					"M_MODELS"
				],
				"context_options": [
					"CONTEXT_OPTIONS"
				],
				"sample_settings": [
					"SAMPLE_SETTINGS"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ADE_UseEvolvedSampling",
		"display_name": "Use Evolved Sampling 🎭🅐🅓②",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②",
		"output_node": false
	},
	"ADE_ApplyAnimateDiffModelSimple": {
		"input": {
			"required": {
				"motion_model": [
					"MOTION_MODEL_ADE"
				]
			},
			"optional": {
				"motion_lora": [
					"MOTION_LORA"
				],
				"scale_multival": [
					"MULTIVAL"
				],
				"effect_multival": [
					"MULTIVAL"
				],
				"ad_keyframes": [
					"AD_KEYFRAMES"
				]
			}
		},
		"output": [
			"M_MODELS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"M_MODELS"
		],
		"name": "ADE_ApplyAnimateDiffModelSimple",
		"display_name": "Apply AnimateDiff Model 🎭🅐🅓②",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②",
		"output_node": false
	},
	"ADE_ApplyAnimateDiffModel": {
		"input": {
			"required": {
				"motion_model": [
					"MOTION_MODEL_ADE"
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_percent": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			},
			"optional": {
				"motion_lora": [
					"MOTION_LORA"
				],
				"scale_multival": [
					"MULTIVAL"
				],
				"effect_multival": [
					"MULTIVAL"
				],
				"ad_keyframes": [
					"AD_KEYFRAMES"
				],
				"prev_m_models": [
					"M_MODELS"
				]
			}
		},
		"output": [
			"M_MODELS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"M_MODELS"
		],
		"name": "ADE_ApplyAnimateDiffModel",
		"display_name": "Apply AnimateDiff Model (Adv.) 🎭🅐🅓②",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②",
		"output_node": false
	},
	"ADE_LoadAnimateDiffModel": {
		"input": {
			"required": {
				"model_name": [
					[
						"mm_sdxl_v10_beta.ckpt"
					]
				]
			},
			"optional": {
				"ad_settings": [
					"AD_SETTINGS"
				]
			}
		},
		"output": [
			"MOTION_MODEL_ADE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MOTION_MODEL"
		],
		"name": "ADE_LoadAnimateDiffModel",
		"display_name": "Load AnimateDiff Model 🎭🅐🅓②",
		"description": "",
		"category": "Animate Diff 🎭🅐🅓/② Gen2 nodes ②",
		"output_node": false
	},
	"AnimateDiffLoaderV1": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"latents": [
					"LATENT"
				],
				"model_name": [
					[
						"mm_sdxl_v10_beta.ckpt"
					]
				],
				"unlimited_area_hack": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"beta_schedule": [
					[
						"sqrt_linear (AnimateDiff)",
						"use existing",
						"autoselect",
						"linear (AnimateDiff-SDXL)",
						"linear (HotshotXL/default)",
						"avg(sqrt_linear,linear)",
						"lcm avg(sqrt_linear,linear)",
						"lcm",
						"lcm[100_ots]",
						"lcm >> sqrt_linear",
						"sqrt",
						"cosine",
						"squaredcos_cap_v2"
					]
				]
			}
		},
		"output": [
			"MODEL",
			"LATENT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MODEL",
			"LATENT"
		],
		"name": "AnimateDiffLoaderV1",
		"display_name": "AnimateDiff Loader [DEPRECATED] 🎭🅐🅓",
		"description": "",
		"category": "",
		"output_node": false
	},
	"ADE_AnimateDiffLoaderV1Advanced": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"latents": [
					"LATENT"
				],
				"model_name": [
					[
						"mm_sdxl_v10_beta.ckpt"
					]
				],
				"unlimited_area_hack": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"context_length": [
					"INT",
					{
						"default": 16,
						"min": 0,
						"max": 1000
					}
				],
				"context_stride": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 1000
					}
				],
				"context_overlap": [
					"INT",
					{
						"default": 4,
						"min": 0,
						"max": 1000
					}
				],
				"context_schedule": [
					[
						"uniform"
					]
				],
				"closed_loop": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"beta_schedule": [
					[
						"sqrt_linear (AnimateDiff)",
						"use existing",
						"autoselect",
						"linear (AnimateDiff-SDXL)",
						"linear (HotshotXL/default)",
						"avg(sqrt_linear,linear)",
						"lcm avg(sqrt_linear,linear)",
						"lcm",
						"lcm[100_ots]",
						"lcm >> sqrt_linear",
						"sqrt",
						"cosine",
						"squaredcos_cap_v2"
					]
				]
			}
		},
		"output": [
			"MODEL",
			"LATENT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MODEL",
			"LATENT"
		],
		"name": "ADE_AnimateDiffLoaderV1Advanced",
		"display_name": "AnimateDiff Loader (Advanced) [DEPRECATED] 🎭🅐🅓",
		"description": "",
		"category": "",
		"output_node": false
	},
	"ADE_AnimateDiffCombine": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"frame_rate": [
					"INT",
					{
						"default": 8,
						"min": 1,
						"max": 24,
						"step": 1
					}
				],
				"loop_count": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "AnimateDiff"
					}
				],
				"format": [
					[
						"image/gif",
						"image/webp"
					]
				],
				"pingpong": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"save_image": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [
			"GIF"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"GIF"
		],
		"name": "ADE_AnimateDiffCombine",
		"display_name": "AnimateDiff Combine [DEPRECATED, Use Video Combine (VHS) Instead!] 🎭🅐🅓",
		"description": "",
		"category": "",
		"output_node": true
	},
	"AnyLinePreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"image"
		],
		"name": "AnyLinePreprocessor",
		"display_name": "TheMisto.ai Anyline",
		"description": "",
		"category": "TheMisto/image/preprocessor",
		"output_node": false
	},
	"BiRefNet_ModelLoader_Zho": {
		"input": {
			"required": {
				"birefnet_model": [
					[]
				]
			}
		},
		"output": [
			"BRNMODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"birefnetmodel"
		],
		"name": "BiRefNet_ModelLoader_Zho",
		"display_name": "🧹BiRefNet Model Loader",
		"description": "",
		"category": "🧹BiRefNet",
		"output_node": false
	},
	"BiRefNet_Zho": {
		"input": {
			"required": {
				"birefnetmodel": [
					"BRNMODEL"
				],
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"image",
			"mask"
		],
		"name": "BiRefNet_Zho",
		"display_name": "🧹BiRefNet",
		"description": "",
		"category": "🧹BiRefNet",
		"output_node": false
	},
	"LoraLoader|pysssss": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"lora_name": [
					[
						{
							"content": "animeoutlineV4_16.safetensors",
							"image": "loras/animeoutlineV4_16.preview.png"
						},
						{
							"content": "animeTarotCardArtStyleLora_v31 (1).safetensors",
							"image": "loras/animeTarotCardArtStyleLora_v31 (1).preview.png"
						},
						{
							"content": "Anya01V20.safetensors",
							"image": null
						},
						{
							"content": "atdanStyleLora_lk.safetensors",
							"image": "loras/atdanStyleLora_lk.preview.png"
						},
						{
							"content": "bl3uprint.safetensors",
							"image": null
						},
						{
							"content": "BloodlineLong-07.safetensors",
							"image": null
						},
						{
							"content": "BloodlineLong-08.safetensors",
							"image": null
						},
						{
							"content": "BloodlineLong-09.safetensors",
							"image": null
						},
						{
							"content": "BloodlineLong-10.safetensors",
							"image": null
						},
						{
							"content": "BloodlineLong-11.safetensors",
							"image": "loras/BloodlineLong-11.preview.png"
						},
						{
							"content": "BloodlineLong-12.safetensors",
							"image": null
						},
						{
							"content": "bondageSuspension_v11.safetensors",
							"image": "loras/bondageSuspension_v11.preview.png"
						},
						{
							"content": "breastCurtains_v10.safetensors",
							"image": null
						},
						{
							"content": "chilloutmixss_xss10.safetensors",
							"image": "loras/chilloutmixss_xss10.preview.png"
						},
						{
							"content": "ConceptBetterCenterOpening_v1.safetensors",
							"image": "loras/ConceptBetterCenterOpening_v1.preview.png"
						},
						{
							"content": "ConceptDeliveryInBox_deliveryv106.safetensors",
							"image": "loras/ConceptDeliveryInBox_deliveryv106.preview.png"
						},
						{
							"content": "conceptNippleTagAnd_v10.safetensors",
							"image": "loras/conceptNippleTagAnd_v10.preview.png"
						},
						{
							"content": "covering_breasts_v0.1.safetensors",
							"image": "loras/covering_breasts_v0.1.preview.png"
						},
						{
							"content": "CrotchlessPantsV1A10.safetensors",
							"image": "loras/CrotchlessPantsV1A10.preview.png"
						},
						{
							"content": "cuteDollGen2_beta1.safetensors",
							"image": null
						},
						{
							"content": "cuteGirlMix4_v10.safetensors",
							"image": "loras/cuteGirlMix4_v10.preview.png"
						},
						{
							"content": "darkMagicianGirlLora_1.safetensors",
							"image": "loras/darkMagicianGirlLora_1.preview.png"
						},
						{
							"content": "dilationTapeLora-05.safetensors",
							"image": "loras/dilationTapeLora-05.preview.png"
						},
						{
							"content": "dungeon_v2.0.safetensors",
							"image": "loras/dungeon_v2.0.preview.png"
						},
						{
							"content": "elegantHanfuRuqun_v10.safetensors",
							"image": "loras/elegantHanfuRuqun_v10.preview.png"
						},
						{
							"content": "femaleMasturbation_v1.safetensors",
							"image": "loras/femaleMasturbation_v1.preview.png"
						},
						{
							"content": "finenude_v0_2a.safetensors",
							"image": "loras/finenude_v0_2a.preview.png"
						},
						{
							"content": "foldedPose_v1.safetensors",
							"image": "loras/foldedPose_v1.preview.png"
						},
						{
							"content": "funtoys_v1.safetensors",
							"image": "loras/funtoys_v1.preview.png"
						},
						{
							"content": "gachaSplashLORA_gachaSplash30.safetensors",
							"image": "loras/gachaSplashLORA_gachaSplash30.preview.png"
						},
						{
							"content": "gachaSplashLORA_gachaSplashFarShot.safetensors",
							"image": "loras/gachaSplashLORA_gachaSplashFarShot.preview.png"
						},
						{
							"content": "grabbingOwnAss_v1Pruned.safetensors",
							"image": "loras/grabbingOwnAss_v1Pruned.preview.png"
						},
						{
							"content": "handpull-12.safetensors",
							"image": "loras/handpull-12.preview.png"
						},
						{
							"content": "infirmary_v0.1.safetensors",
							"image": "loras/infirmary_v0.1.preview.png"
						},
						{
							"content": "Ink scenery.safetensors",
							"image": "loras/Ink scenery.preview.png"
						},
						{
							"content": "innievag.safetensors",
							"image": "loras/innievag.preview.png"
						},
						{
							"content": "ip-adapter-faceid-plus_sd15_lora.safetensors",
							"image": null
						},
						{
							"content": "ip-adapter-faceid-plusv2_sd15_lora.safetensors",
							"image": null
						},
						{
							"content": "ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
							"image": null
						},
						{
							"content": "ip-adapter-faceid_sd15_lora.safetensors",
							"image": null
						},
						{
							"content": "ip-adapter-faceid_sdxl_lora.safetensors",
							"image": null
						},
						{
							"content": "japaneseDollLikeness_v10.safetensors",
							"image": "loras/japaneseDollLikeness_v10.preview.png"
						},
						{
							"content": "Kit_YGO.safetensors",
							"image": "loras/Kit_YGO.preview.png"
						},
						{
							"content": "kitchen_apron.safetensors",
							"image": "loras/kitchen_apron.preview.png"
						},
						{
							"content": "koreandolllikenessV20_v20.safetensors",
							"image": null
						},
						{
							"content": "lactation_v11.safetensors",
							"image": "loras/lactation_v11.preview.png"
						},
						{
							"content": "laundryDragonmaidLoraYuGi_v01.safetensors",
							"image": "loras/laundryDragonmaidLoraYuGi_v01.preview.png"
						},
						{
							"content": "lcm-lora-sdv1-5.safetensors",
							"image": null
						},
						{
							"content": "lcm-lora-sdxl.safetensors",
							"image": null
						},
						{
							"content": "lcm_lora_sd15.safetensors",
							"image": null
						},
						{
							"content": "lcm_lora_sdxl.safetensors",
							"image": null
						},
						{
							"content": "less_clothesConv2D2.5e-5_BF16.safetensors",
							"image": "loras/less_clothesConv2D2.5e-5_BF16.preview.png"
						},
						{
							"content": "lessUnderwear_v10.safetensors",
							"image": "loras/lessUnderwear_v10.preview.png"
						},
						{
							"content": "liloi.safetensors",
							"image": "loras/liloi.preview.png"
						},
						{
							"content": "LogoRedmondV2-Logo-LogoRedmAF.safetensors",
							"image": null
						},
						{
							"content": "LuotianyiKoushiki_v1.safetensors",
							"image": null
						},
						{
							"content": "maplestoryStyle_v30.safetensors",
							"image": "loras/maplestoryStyle_v30.preview.png"
						},
						{
							"content": "misakaMikotoACertain_misakaV1.safetensors",
							"image": "loras/misakaMikotoACertain_misakaV1.preview.png"
						},
						{
							"content": "mLegsPoseLora800_v10.safetensors",
							"image": "loras/mLegsPoseLora800_v10.preview.png"
						},
						{
							"content": "Neurosama.safetensors",
							"image": "loras/Neurosama.preview.png"
						},
						{
							"content": "NippleLinkedPiercing_30.safetensors",
							"image": "loras/NippleLinkedPiercing_30.preview.png"
						},
						{
							"content": "nipplePiercing_v20.safetensors",
							"image": "loras/nipplePiercing_v20.preview.png"
						},
						{
							"content": "nippleRibbon_3.safetensors",
							"image": "loras/nippleRibbon_3.png"
						},
						{
							"content": "npm-v11t-000005.safetensors",
							"image": "loras/npm-v11t-000005.preview.png"
						},
						{
							"content": "objectMasturbation-v11.safetensors",
							"image": "loras/objectMasturbation-v11.preview.png"
						},
						{
							"content": "OppaiChallengeV1.safetensors",
							"image": "loras/OppaiChallengeV1.preview.png"
						},
						{
							"content": "pose  pet play.safetensors",
							"image": "loras/pose  pet play.preview.png"
						},
						{
							"content": "pussy_juiceConv2D2.5e-5_BF16.safetensors",
							"image": "loras/pussy_juiceConv2D2.5e-5_BF16.preview.png"
						},
						{
							"content": "Pussy_Spread_v01.safetensors",
							"image": "loras/Pussy_Spread_v01.preview.png"
						},
						{
							"content": "realSpreadPussy_sppSpreadpussyWV1.safetensors",
							"image": "loras/realSpreadPussy_sppSpreadpussyWV1.preview.png"
						},
						{
							"content": "restroom_v0.2a.safetensors",
							"image": "loras/restroom_v0.2a.preview.png"
						},
						{
							"content": "reverseTranslucent_v10.safetensors",
							"image": "loras/reverseTranslucent_v10.preview.png"
						},
						{
							"content": "russianDollLikeness_v3.safetensors",
							"image": null
						},
						{
							"content": "sagiriIzumiEroManga_v10.safetensors",
							"image": "loras/sagiriIzumiEroManga_v10.preview.png"
						},
						{
							"content": "Saya-removing bra.safetensors",
							"image": "loras/Saya-removing bra.preview.png"
						},
						{
							"content": "Saya-spread pussy(fingers).safetensors",
							"image": "loras/Saya-spread pussy(fingers).preview.png"
						},
						{
							"content": "shibari_V20.safetensors",
							"image": "loras/shibari_V20.preview.png"
						},
						{
							"content": "SiriusBlackBikiniV1.safetensors",
							"image": "loras/SiriusBlackBikiniV1.preview.png"
						},
						{
							"content": "skyStrikerAceRayeYuGiOh_v1.safetensors",
							"image": "loras/skyStrikerAceRayeYuGiOh_v1.preview.png"
						},
						{
							"content": "split_lora32V1.safetensors",
							"image": "loras/split_lora32V1.preview.png"
						},
						{
							"content": "spreadPussy_v11.safetensors",
							"image": "loras/spreadPussy_v11.preview.png"
						},
						{
							"content": "ssssGRIDMANTakarada_trV1.safetensors",
							"image": "loras/ssssGRIDMANTakarada_trV1.preview.png"
						},
						{
							"content": "Stardust_v20.safetensors",
							"image": "loras/Stardust_v20.png"
						},
						{
							"content": "SubmissivePoseV2-000008.safetensors",
							"image": "loras/SubmissivePoseV2-000008.preview.png"
						},
						{
							"content": "synth3.safetensors",
							"image": "loras/synth3.preview.png"
						},
						{
							"content": "thighvibe.safetensors",
							"image": "loras/thighvibe.preview.png"
						},
						{
							"content": "toiletGirl.safetensors",
							"image": "loras/toiletGirl.preview.png"
						},
						{
							"content": "unalignedDocking-000040.safetensors",
							"image": "loras/unalignedDocking-000040.preview.png"
						},
						{
							"content": "V11ForegroundPlant_V11.safetensors",
							"image": "loras/V11ForegroundPlant_V11.preview.png"
						},
						{
							"content": "vibrator_v10.safetensors",
							"image": "loras/vibrator_v10.preview.png"
						},
						{
							"content": "virginDestroyer_v10.safetensors",
							"image": "loras/virginDestroyer_v10.preview.png"
						},
						{
							"content": "vision_pro_v2.safetensors",
							"image": "loras/vision_pro_v2.preview.png"
						},
						{
							"content": "VsingerTianyi_tianyi.safetensors",
							"image": "loras/VsingerTianyi_tianyi.preview.png"
						},
						{
							"content": "vsingerYuezhengLing_v1.safetensors",
							"image": "loras/vsingerYuezhengLing_v1.preview.png"
						},
						{
							"content": "雪糕-xuegao4.0.safetensors",
							"image": "loras/雪糕-xuegao4.0.preview.png"
						}
					]
				],
				"strength_model": [
					"FLOAT",
					{
						"default": 1,
						"min": -100,
						"max": 100,
						"step": 0.01
					}
				],
				"strength_clip": [
					"FLOAT",
					{
						"default": 1,
						"min": -100,
						"max": 100,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CLIP"
		],
		"name": "LoraLoader|pysssss",
		"display_name": "Lora Loader 🐍",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"CheckpointLoader|pysssss": {
		"input": {
			"required": {
				"ckpt_name": [
					[
						{
							"content": "3Guofeng3_v32Light.safetensors",
							"image": "checkpoints/3Guofeng3_v32Light.preview.png"
						},
						{
							"content": "abyssorangemix2_Hard.safetensors",
							"image": "checkpoints/abyssorangemix2_Hard.preview.png"
						},
						{
							"content": "abyssorangemix3AOM3_aom3a1b.safetensors",
							"image": "checkpoints/abyssorangemix3AOM3_aom3a1b.preview.png"
						},
						{
							"content": "abyssorangemix3AOM3_aom3a2.safetensors",
							"image": "checkpoints/abyssorangemix3AOM3_aom3a2.preview.png"
						},
						{
							"content": "abyssorangemix3AOM3_aom3a3.safetensors",
							"image": "checkpoints/abyssorangemix3AOM3_aom3a3.preview.png"
						},
						{
							"content": "animagine-xl-2.0.safetensors",
							"image": null
						},
						{
							"content": "anygenV37_anygenv37.ckpt",
							"image": "checkpoints/anygenV37_anygenv37.preview.png"
						},
						{
							"content": "anygenz5.6.vae.pt",
							"image": null
						},
						{
							"content": "AnythingV5Ink_v32Ink.safetensors",
							"image": "checkpoints/AnythingV5Ink_v32Ink.preview.png"
						},
						{
							"content": "aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
							"image": "checkpoints/aoaokoPVCStyleModel_pvcAOAOKO.preview.png"
						},
						{
							"content": "AWPortrait_v1.4.safetensors",
							"image": null
						},
						{
							"content": "awportrait_v13.safetensors",
							"image": null
						},
						{
							"content": "beautifulRealistic_v60.safetensors",
							"image": "checkpoints/beautifulRealistic_v60.preview.png"
						},
						{
							"content": "cetusMix_Codaedition.safetensors",
							"image": "checkpoints/cetusMix_Codaedition.preview.png"
						},
						{
							"content": "chilloutmix_NiPrunedFp32Fix.safetensors",
							"image": "checkpoints/chilloutmix_NiPrunedFp32Fix.preview.png"
						},
						{
							"content": "coloringPage_v10.safetensors",
							"image": "checkpoints/coloringPage_v10.preview.png"
						},
						{
							"content": "CounterfeitV25_25.safetensors",
							"image": "checkpoints/CounterfeitV25_25.preview.png"
						},
						{
							"content": "counterfeitxl_v10.safetensors",
							"image": "checkpoints/counterfeitxl_v10.preview.png"
						},
						{
							"content": "cuteyukimixAdorable_neochapter2.safetensors",
							"image": "checkpoints/cuteyukimixAdorable_neochapter2.preview.png"
						},
						{
							"content": "cuteyukimixSpecializedAnd_echodimension.safetensors",
							"image": "checkpoints/cuteyukimixSpecializedAnd_echodimension.preview.png"
						},
						{
							"content": "dosmix_.safetensors",
							"image": "checkpoints/dosmix_.preview.png"
						},
						{
							"content": "dreamshaper_6BakedVae.safetensors",
							"image": "checkpoints/dreamshaper_6BakedVae.preview.png"
						},
						{
							"content": "dreamshaperXL10_alpha2Xl10.safetensors",
							"image": "checkpoints/dreamshaperXL10_alpha2Xl10.preview.png"
						},
						{
							"content": "etherBluMix_etherBluMix5.safetensors",
							"image": "checkpoints/etherBluMix_etherBluMix5.preview.png"
						},
						{
							"content": "etherRealMix_etherRealMix3.safetensors",
							"image": "checkpoints/etherRealMix_etherRealMix3.preview.png"
						},
						{
							"content": "ghostmix_v20Bakedvae.safetensors",
							"image": "checkpoints/ghostmix_v20Bakedvae.preview.png"
						},
						{
							"content": "hassakuHentaiModel_hassakuv1.safetensors",
							"image": "checkpoints/hassakuHentaiModel_hassakuv1.preview.png"
						},
						{
							"content": "henmixReal_v10.safetensors",
							"image": "checkpoints/henmixReal_v10.preview.png"
						},
						{
							"content": "juggernautXL_v8Rundiffusion.safetensors",
							"image": null
						},
						{
							"content": "kohakuXLDelta_rev1.safetensors",
							"image": null
						},
						{
							"content": "lyriel_v13.safetensors",
							"image": "checkpoints/lyriel_v13.preview.png"
						},
						{
							"content": "majicmixRealistic_v6.safetensors",
							"image": "checkpoints/majicmixRealistic_v6.preview.png"
						},
						{
							"content": "matrixHentaiPlusXL_v10.safetensors",
							"image": null
						},
						{
							"content": "meinahentai_v2.safetensors",
							"image": "checkpoints/meinahentai_v2.preview.png"
						},
						{
							"content": "meinahentai_v3.safetensors",
							"image": "checkpoints/meinahentai_v3.preview.png"
						},
						{
							"content": "meinamix_meinaV7.safetensors",
							"image": "checkpoints/meinamix_meinaV7.preview.png"
						},
						{
							"content": "meinapastel_v6Pastel.safetensors",
							"image": "checkpoints/meinapastel_v6Pastel.preview.png"
						},
						{
							"content": "netaArtXL_v10.safetensors",
							"image": null
						},
						{
							"content": "pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
							"image": "checkpoints/pastelMixStylizedAnime_pastelMixPrunedFP16.preview.png"
						},
						{
							"content": "perfectWorld_v2Baked.safetensors",
							"image": "checkpoints/perfectWorld_v2Baked.preview.png"
						},
						{
							"content": "perfectWorld_v4Baked.safetensors",
							"image": "checkpoints/perfectWorld_v4Baked.preview.png"
						},
						{
							"content": "ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
							"image": null
						},
						{
							"content": "realisticVisionV20_v20.safetensors",
							"image": "checkpoints/realisticVisionV20_v20.preview.png"
						},
						{
							"content": "realvisxlV40_v40Bakedvae.safetensors",
							"image": null
						},
						{
							"content": "sd-v1-5-pruned-noema-fp16.safetensors",
							"image": null
						},
						{
							"content": "sd3_medium_incl_clips_t5xxlfp8.safetensors",
							"image": null
						},
						{
							"content": "sd_xl_base_1.0.safetensors",
							"image": "checkpoints/sd_xl_base_1.0.preview.png"
						},
						{
							"content": "sd_xl_base_1.0_inpainting_0.1.safetensors",
							"image": null
						},
						{
							"content": "sd_xl_refiner_1.0.safetensors",
							"image": "checkpoints/sd_xl_refiner_1.0.preview.png"
						},
						{
							"content": "sdxl_lightning_4step_unet.safetensors",
							"image": null
						},
						{
							"content": "spiritforeseermix_spiritforeseerO.safetensors",
							"image": "checkpoints/spiritforeseermix_spiritforeseerO.preview.png"
						},
						{
							"content": "uberRealisticPornMerge_urpmv13.safetensors",
							"image": "checkpoints/uberRealisticPornMerge_urpmv13.preview.png"
						},
						{
							"content": "V08_V08.safetensors",
							"image": "checkpoints/V08_V08.preview.png"
						},
						{
							"content": "v1-5-pruned-emaonly.safetensors",
							"image": null
						}
					]
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CLIP",
			"VAE"
		],
		"name": "CheckpointLoader|pysssss",
		"display_name": "Checkpoint Loader 🐍",
		"description": "",
		"category": "loaders",
		"output_node": false
	},
	"ConstrainImage|pysssss": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"max_width": [
					"INT",
					{
						"default": 1024,
						"min": 0
					}
				],
				"max_height": [
					"INT",
					{
						"default": 1024,
						"min": 0
					}
				],
				"min_width": [
					"INT",
					{
						"default": 0,
						"min": 0
					}
				],
				"min_height": [
					"INT",
					{
						"default": 0,
						"min": 0
					}
				],
				"crop_if_required": [
					[
						"yes",
						"no"
					],
					{
						"default": "no"
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ConstrainImage|pysssss",
		"display_name": "Constrain Image 🐍",
		"description": "",
		"category": "image",
		"output_node": false
	},
	"ConstrainImageforVideo|pysssss": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"max_width": [
					"INT",
					{
						"default": 1024,
						"min": 0
					}
				],
				"max_height": [
					"INT",
					{
						"default": 1024,
						"min": 0
					}
				],
				"min_width": [
					"INT",
					{
						"default": 0,
						"min": 0
					}
				],
				"min_height": [
					"INT",
					{
						"default": 0,
						"min": 0
					}
				],
				"crop_if_required": [
					[
						"yes",
						"no"
					],
					{
						"default": "no"
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ConstrainImageforVideo|pysssss",
		"display_name": "Constrain Image for Video 🐍",
		"description": "",
		"category": "image",
		"output_node": false
	},
	"MathExpression|pysssss": {
		"input": {
			"required": {
				"expression": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false,
						"pysssss.autocomplete": {
							"words": [
								{
									"text": "round",
									"value": "round()",
									"showValue": false,
									"hint": "number, dp? = 0",
									"caretOffset": -1
								},
								{
									"text": "ceil",
									"value": "ceil()",
									"showValue": false,
									"hint": "number",
									"caretOffset": -1
								},
								{
									"text": "floor",
									"value": "floor()",
									"showValue": false,
									"hint": "number",
									"caretOffset": -1
								},
								{
									"text": "min",
									"value": "min()",
									"showValue": false,
									"hint": "...numbers",
									"caretOffset": -1
								},
								{
									"text": "max",
									"value": "max()",
									"showValue": false,
									"hint": "...numbers",
									"caretOffset": -1
								},
								{
									"text": "randomint",
									"value": "randomint()",
									"showValue": false,
									"hint": "min, max",
									"caretOffset": -1
								},
								{
									"text": "randomchoice",
									"value": "randomchoice()",
									"showValue": false,
									"hint": "...numbers",
									"caretOffset": -1
								},
								{
									"text": "sqrt",
									"value": "sqrt()",
									"showValue": false,
									"hint": "number",
									"caretOffset": -1
								},
								{
									"text": "int",
									"value": "int()",
									"showValue": false,
									"hint": "number",
									"caretOffset": -1
								},
								{
									"text": "iif",
									"value": "iif()",
									"showValue": false,
									"hint": "value, truepart, falsepart",
									"caretOffset": -1
								}
							],
							"separator": ""
						}
					}
				]
			},
			"optional": {
				"a": [
					"INT,FLOAT,IMAGE,LATENT"
				],
				"b": [
					"INT,FLOAT,IMAGE,LATENT"
				],
				"c": [
					"INT,FLOAT,IMAGE,LATENT"
				]
			},
			"hidden": {
				"extra_pnginfo": "EXTRA_PNGINFO",
				"prompt": "PROMPT"
			}
		},
		"output": [
			"INT",
			"FLOAT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"INT",
			"FLOAT"
		],
		"name": "MathExpression|pysssss",
		"display_name": "Math Expression 🐍",
		"description": "",
		"category": "utils",
		"output_node": true
	},
	"PlaySound|pysssss": {
		"input": {
			"required": {
				"any": [
					"*",
					{}
				],
				"mode": [
					[
						"always",
						"on empty queue"
					],
					{}
				],
				"volume": [
					"FLOAT",
					{
						"min": 0,
						"max": 1,
						"step": 0.1,
						"default": 0.5
					}
				],
				"file": [
					"STRING",
					{
						"default": "notify.mp3"
					}
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"*"
		],
		"name": "PlaySound|pysssss",
		"display_name": "PlaySound 🐍",
		"description": "",
		"category": "utils",
		"output_node": true
	},
	"Repeater|pysssss": {
		"input": {
			"required": {
				"source": [
					"*",
					{}
				],
				"repeats": [
					"INT",
					{
						"min": 0,
						"max": 5000,
						"default": 2
					}
				],
				"output": [
					[
						"single",
						"multi"
					],
					{}
				],
				"node_mode": [
					[
						"reuse",
						"create"
					],
					{}
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"*"
		],
		"name": "Repeater|pysssss",
		"display_name": "Repeater 🐍",
		"description": "",
		"category": "utils",
		"output_node": false
	},
	"ReroutePrimitive|pysssss": {
		"input": {
			"required": {
				"value": [
					"*"
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"*"
		],
		"name": "ReroutePrimitive|pysssss",
		"display_name": "Reroute Primitive 🐍",
		"description": "",
		"category": "utils",
		"output_node": false
	},
	"ShowText|pysssss": {
		"input": {
			"required": {
				"text": [
					"STRING",
					{
						"forceInput": true
					}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"STRING"
		],
		"name": "ShowText|pysssss",
		"display_name": "Show Text 🐍",
		"description": "",
		"category": "utils",
		"output_node": true
	},
	"StringFunction|pysssss": {
		"input": {
			"required": {
				"action": [
					[
						"append",
						"replace"
					],
					{}
				],
				"tidy_tags": [
					[
						"yes",
						"no"
					],
					{}
				]
			},
			"optional": {
				"text_a": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"text_b": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"text_c": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "StringFunction|pysssss",
		"display_name": "String Function 🐍",
		"description": "",
		"category": "utils",
		"output_node": true
	},
	"SystemNotification|pysssss": {
		"input": {
			"required": {
				"message": [
					"STRING",
					{
						"default": "Your notification has triggered."
					}
				],
				"any": [
					"*",
					{}
				],
				"mode": [
					[
						"always",
						"on empty queue"
					],
					{}
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"*"
		],
		"name": "SystemNotification|pysssss",
		"display_name": "SystemNotification 🐍",
		"description": "",
		"category": "utils",
		"output_node": true
	},
	"LoadText|pysssss": {
		"input": {
			"required": {
				"root_dir": [
					[
						"input",
						"output",
						"temp"
					],
					{}
				],
				"file": [
					[
						"[none]"
					],
					{
						"pysssss.binding": [
							{
								"source": "root_dir",
								"callback": [
									{
										"type": "set",
										"target": "$this.disabled",
										"value": true
									},
									{
										"type": "fetch",
										"url": "/pysssss/text-file/{$source.value}",
										"then": [
											{
												"type": "set",
												"target": "$this.options.values",
												"value": "$result"
											},
											{
												"type": "validate-combo"
											},
											{
												"type": "set",
												"target": "$this.disabled",
												"value": false
											}
										]
									}
								]
							}
						]
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "LoadText|pysssss",
		"display_name": "Load Text 🐍",
		"description": "",
		"category": "utils",
		"output_node": false
	},
	"SaveText|pysssss": {
		"input": {
			"required": {
				"root_dir": [
					[
						"input",
						"output",
						"temp"
					],
					{}
				],
				"file": [
					"STRING",
					{
						"default": "file.txt"
					}
				],
				"append": [
					[
						"append",
						"overwrite",
						"new only"
					],
					{}
				],
				"insert": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "new line",
						"label_off": "none",
						"pysssss.binding": [
							{
								"source": "append",
								"callback": [
									{
										"type": "if",
										"condition": [
											{
												"left": "$source.value",
												"op": "eq",
												"right": "\"append\""
											}
										],
										"true": [
											{
												"type": "set",
												"target": "$this.disabled",
												"value": false
											}
										],
										"false": [
											{
												"type": "set",
												"target": "$this.disabled",
												"value": true
											}
										]
									}
								]
							}
						]
					}
				],
				"text": [
					"STRING",
					{
						"forceInput": true,
						"multiline": true
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "SaveText|pysssss",
		"display_name": "Save Text 🐍",
		"description": "",
		"category": "utils",
		"output_node": true
	},
	"easy positive": {
		"input": {
			"required": {
				"positive": [
					"STRING",
					{
						"default": "",
						"multiline": true,
						"placeholder": "Positive"
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"positive"
		],
		"name": "easy positive",
		"display_name": "Positive",
		"description": "",
		"category": "EasyUse/Prompt",
		"output_node": false
	},
	"easy negative": {
		"input": {
			"required": {
				"negative": [
					"STRING",
					{
						"default": "",
						"multiline": true,
						"placeholder": "Negative"
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"negative"
		],
		"name": "easy negative",
		"display_name": "Negative",
		"description": "",
		"category": "EasyUse/Prompt",
		"output_node": false
	},
	"easy wildcards": {
		"input": {
			"required": {
				"text": [
					"STRING",
					{
						"default": "",
						"multiline": true,
						"dynamicPrompts": false,
						"placeholder": "(Support Lora Block Weight and wildcard)"
					}
				],
				"Select to add LoRA": [
					[
						"Select the LoRA to add to the text",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"Select to add Wildcard": [
					[
						"Select the Wildcard to add to the text"
					]
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"STRING",
			"STRING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"text",
			"populated_text"
		],
		"name": "easy wildcards",
		"display_name": "Wildcards",
		"description": "",
		"category": "EasyUse/Prompt",
		"output_node": true
	},
	"easy promptList": {
		"input": {
			"required": {
				"prompt_1": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				],
				"prompt_2": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				],
				"prompt_3": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				],
				"prompt_4": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				],
				"prompt_5": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				]
			},
			"optional": {
				"optional_prompt_list": [
					"LIST"
				]
			}
		},
		"output": [
			"LIST"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"prompt_list"
		],
		"name": "easy promptList",
		"display_name": "PromptList",
		"description": "",
		"category": "EasyUse/Prompt",
		"output_node": false
	},
	"easy stylesSelector": {
		"input": {
			"required": {
				"styles": [
					[
						"fooocus_styles"
					],
					{
						"default": "fooocus_styles"
					}
				]
			},
			"optional": {
				"positive": [
					"STRING",
					{
						"forceInput": true
					}
				],
				"negative": [
					"STRING",
					{
						"forceInput": true
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"STRING",
			"STRING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"positive",
			"negative"
		],
		"name": "easy stylesSelector",
		"display_name": "Styles Selector",
		"description": "",
		"category": "EasyUse/Prompt",
		"output_node": true
	},
	"easy portraitMaster": {
		"input": {
			"required": {
				"shot": [
					[
						"-",
						"Head portrait",
						"Head and shoulders portrait",
						"Half-length portrait",
						"Full-length portrait",
						"Face",
						"Portrait",
						"Full body",
						"Close-up"
					],
					{
						"key": "shot_list"
					}
				],
				"shot_weight": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"gender": [
					[
						"-",
						"Man",
						"Woman"
					],
					{
						"default": "Woman",
						"key": "gender_list"
					}
				],
				"age": [
					"INT",
					{
						"default": 30,
						"min": 18,
						"max": 90,
						"step": 1,
						"display": "slider"
					}
				],
				"nationality_1": [
					[
						"-",
						"Afghan",
						"Albanian",
						"Algerian",
						"Andorran",
						"Angolan",
						"Antiguans Barbudans",
						"Argentine",
						"Armenian",
						"Australian",
						"Austrian",
						"Azerbaijani",
						"Bahamian",
						"Bahraini",
						"Bangladeshi",
						"Barbadian",
						"Belarusian",
						"Belgian",
						"Belizean",
						"Beninese",
						"Bhutanese",
						"Bolivian",
						"Bosnian Herzegovinian",
						"Brazilian",
						"British",
						"Bruneian",
						"Bulgarian",
						"Burkinabe",
						"Burundian",
						"Cambodian",
						"Cameroonian",
						"Canadian",
						"Cape Verdian",
						"Central African",
						"Chadian",
						"Chilean",
						"Chinese",
						"Colombian",
						"Comoran",
						"Congolese",
						"Costa Rican",
						"Croatian",
						"Cuban",
						"Cypriot",
						"Czech",
						"Danish",
						"Djibouti",
						"Dominican",
						"Dutch",
						"East Timorese",
						"Ecuadorean",
						"Egyptian",
						"Emirian",
						"Equatorial Guinean",
						"Eritrean",
						"Estonian",
						"Ethiopian",
						"Fijian",
						"Filipino",
						"Finnish",
						"French",
						"Gabonese",
						"Gambian",
						"Georgian",
						"German",
						"Ghanaian",
						"Greek",
						"Grenadian",
						"Guatemalan",
						"Guinean",
						"Guyanese",
						"Haitian",
						"Herzegovinian",
						"Honduran",
						"Hungarian",
						"Icelander",
						"Indian",
						"Indonesian",
						"Iranian",
						"Iraqi",
						"Irish",
						"Israeli",
						"Italian",
						"Ivorian",
						"Jamaican",
						"Japanese",
						"Jordanian",
						"Kazakhstani",
						"Kenyan",
						"Kiribati",
						"North Korean",
						"South Korean",
						"Kuwaiti",
						"Kyrgyz",
						"Laotian",
						"Latvian",
						"Lebanese",
						"Liberian",
						"Libyan",
						"Liechtensteiner",
						"Lithuanian",
						"Luxembourgish",
						"Macedonian",
						"Malagasy",
						"Malawian",
						"Malaysian",
						"Maldivan",
						"Malian",
						"Maltese",
						"Marshallese",
						"Mauritanian",
						"Mauritian",
						"Mexican",
						"Micronesian",
						"Moldovan",
						"Monegasque",
						"Mongolian",
						"Montenegrin",
						"Moroccan",
						"Mosotho",
						"Motswana",
						"Mozambican",
						"Namibian",
						"Nauruan",
						"Nepalese",
						"New Zealander",
						"Ni-Vanuatu",
						"Nicaraguan",
						"Nigerian",
						"Nigerien",
						"North Korean",
						"Northern Irish",
						"Norwegian",
						"Omani",
						"Pakistani",
						"Palauan",
						"Palestinian",
						"Panamanian",
						"Papua New Guinean",
						"Paraguayan",
						"Peruvian",
						"Polish",
						"Portuguese",
						"Qatari",
						"Romanian",
						"Russian",
						"Rwandan",
						"Saint Lucian",
						"Salvadoran",
						"Samoan",
						"San Marinese",
						"Sao Tomean",
						"Saudi",
						"Scottish",
						"Senegalese",
						"Serbian",
						"Seychellois",
						"Sierra Leonean",
						"Singaporean",
						"Slovakian",
						"Slovenian",
						"Solomon Islander",
						"Somali",
						"South African",
						"South Korean",
						"South Sudanese",
						"Spanish",
						"Sri Lankan",
						"Sudanese",
						"Surinamer",
						"Swazi",
						"Swedish",
						"Swiss",
						"Syrian",
						"Tajikistani",
						"Tanzanian",
						"Thai",
						"Togolese",
						"Tongan",
						"Trinidadian Tobagonian",
						"Tunisian",
						"Turkish",
						"Turkmen",
						"Tuvaluan",
						"Ugandan",
						"Ukrainian",
						"Uruguayan",
						"Uzbekistani",
						"Venezuelan",
						"Vietnamese",
						"Welsh",
						"Yemeni",
						"Zambian",
						"Zimbabwean"
					],
					{
						"default": "Chinese",
						"key": "nationality_list"
					}
				],
				"nationality_2": [
					[
						"-",
						"Afghan",
						"Albanian",
						"Algerian",
						"Andorran",
						"Angolan",
						"Antiguans Barbudans",
						"Argentine",
						"Armenian",
						"Australian",
						"Austrian",
						"Azerbaijani",
						"Bahamian",
						"Bahraini",
						"Bangladeshi",
						"Barbadian",
						"Belarusian",
						"Belgian",
						"Belizean",
						"Beninese",
						"Bhutanese",
						"Bolivian",
						"Bosnian Herzegovinian",
						"Brazilian",
						"British",
						"Bruneian",
						"Bulgarian",
						"Burkinabe",
						"Burundian",
						"Cambodian",
						"Cameroonian",
						"Canadian",
						"Cape Verdian",
						"Central African",
						"Chadian",
						"Chilean",
						"Chinese",
						"Colombian",
						"Comoran",
						"Congolese",
						"Costa Rican",
						"Croatian",
						"Cuban",
						"Cypriot",
						"Czech",
						"Danish",
						"Djibouti",
						"Dominican",
						"Dutch",
						"East Timorese",
						"Ecuadorean",
						"Egyptian",
						"Emirian",
						"Equatorial Guinean",
						"Eritrean",
						"Estonian",
						"Ethiopian",
						"Fijian",
						"Filipino",
						"Finnish",
						"French",
						"Gabonese",
						"Gambian",
						"Georgian",
						"German",
						"Ghanaian",
						"Greek",
						"Grenadian",
						"Guatemalan",
						"Guinean",
						"Guyanese",
						"Haitian",
						"Herzegovinian",
						"Honduran",
						"Hungarian",
						"Icelander",
						"Indian",
						"Indonesian",
						"Iranian",
						"Iraqi",
						"Irish",
						"Israeli",
						"Italian",
						"Ivorian",
						"Jamaican",
						"Japanese",
						"Jordanian",
						"Kazakhstani",
						"Kenyan",
						"Kiribati",
						"North Korean",
						"South Korean",
						"Kuwaiti",
						"Kyrgyz",
						"Laotian",
						"Latvian",
						"Lebanese",
						"Liberian",
						"Libyan",
						"Liechtensteiner",
						"Lithuanian",
						"Luxembourgish",
						"Macedonian",
						"Malagasy",
						"Malawian",
						"Malaysian",
						"Maldivan",
						"Malian",
						"Maltese",
						"Marshallese",
						"Mauritanian",
						"Mauritian",
						"Mexican",
						"Micronesian",
						"Moldovan",
						"Monegasque",
						"Mongolian",
						"Montenegrin",
						"Moroccan",
						"Mosotho",
						"Motswana",
						"Mozambican",
						"Namibian",
						"Nauruan",
						"Nepalese",
						"New Zealander",
						"Ni-Vanuatu",
						"Nicaraguan",
						"Nigerian",
						"Nigerien",
						"North Korean",
						"Northern Irish",
						"Norwegian",
						"Omani",
						"Pakistani",
						"Palauan",
						"Palestinian",
						"Panamanian",
						"Papua New Guinean",
						"Paraguayan",
						"Peruvian",
						"Polish",
						"Portuguese",
						"Qatari",
						"Romanian",
						"Russian",
						"Rwandan",
						"Saint Lucian",
						"Salvadoran",
						"Samoan",
						"San Marinese",
						"Sao Tomean",
						"Saudi",
						"Scottish",
						"Senegalese",
						"Serbian",
						"Seychellois",
						"Sierra Leonean",
						"Singaporean",
						"Slovakian",
						"Slovenian",
						"Solomon Islander",
						"Somali",
						"South African",
						"South Korean",
						"South Sudanese",
						"Spanish",
						"Sri Lankan",
						"Sudanese",
						"Surinamer",
						"Swazi",
						"Swedish",
						"Swiss",
						"Syrian",
						"Tajikistani",
						"Tanzanian",
						"Thai",
						"Togolese",
						"Tongan",
						"Trinidadian Tobagonian",
						"Tunisian",
						"Turkish",
						"Turkmen",
						"Tuvaluan",
						"Ugandan",
						"Ukrainian",
						"Uruguayan",
						"Uzbekistani",
						"Venezuelan",
						"Vietnamese",
						"Welsh",
						"Yemeni",
						"Zambian",
						"Zimbabwean"
					],
					{
						"key": "nationality_list"
					}
				],
				"nationality_mix": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"body_type": [
					[
						"-",
						"Underweight",
						"Normal weight",
						"Overweight",
						"Obese"
					],
					{
						"key": "body_type_list"
					}
				],
				"body_type_weight": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"model_pose": [
					[
						"-",
						"Power Pose",
						"Walking Pose",
						"The Over-the-Shoulder Look",
						"S-curve Pose",
						"Sitting Pose",
						"Close-Up Beauty Shot Pose",
						"Leaning Pose",
						"Arms Up Pose",
						"Casual Stroll Pose",
						"Headshot Pose",
						"Sitting Cross-Legged Pose",
						"Back Arch Pose",
						"Hand-on-Hip Pose",
						"Gazing into the Distance Pose",
						"Candid Laugh Pose",
						"Dynamic Action Pose",
						"Contrapposto Pose",
						"High Fashion Pose"
					],
					{
						"key": "model_pose_list"
					}
				],
				"eyes_color": [
					[
						"-",
						"Brown",
						"Blue",
						"Green",
						"Hazel",
						"Gray",
						"Amber",
						"Red",
						"Violet"
					],
					{
						"key": "eyes_color_list"
					}
				],
				"facial_expression": [
					[
						"-",
						"Happy",
						"Sad",
						"Angry",
						"Surprised",
						"Fearful",
						"Disgusted",
						"Contemptuous",
						"Excited",
						"Nervous",
						"Confused",
						"Amused",
						"Content",
						"Disappointed",
						"Bored",
						"Relieved",
						"In love",
						"Shy",
						"Envious",
						"Proud",
						"Cautious",
						"Serious",
						"Serene",
						"Peaceful",
						"Calm"
					],
					{
						"key": "face_expression_list"
					}
				],
				"facial_expression_weight": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"face_shape": [
					[
						"-",
						"Oval",
						"Round",
						"Square",
						"Heart-shaped",
						"Long",
						"Rectangle",
						"Triangle",
						"Inverted Triangle",
						"Pear-shaped",
						"Oblong",
						"Square Round",
						"Square Oval"
					],
					{
						"key": "face_shape_list"
					}
				],
				"face_shape_weight": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"facial_asymmetry": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"hair_style": [
					[
						"-",
						"Asymmetrical cut",
						"Blunt cut",
						"Bob cut",
						"Braided bob",
						"Buzz cut",
						"Choppy cut",
						"Curly bob",
						"Curtain bangs",
						"Faux hawk",
						"Feathered cut",
						"French bob",
						"Layered cut",
						"Long bob",
						"Mohawk",
						"Pixie cut",
						"Shag cut",
						"Side-swept bangs",
						"Textured cut",
						"Undercut",
						"Wavy bob",
						"Faux hawk short pixie",
						"Brave short haircut with shaved sides",
						"Tapered haricut wuth shaved side",
						"Stacked bob",
						"Lemonade braids",
						"Middle part ponytails",
						"Stitch braids",
						"Deep side part",
						"French braids",
						"Box braids",
						"Two dutch braids",
						"Wavy cut with curtains bangs",
						"Right side shaved",
						"Sweeping pixie",
						"Smooth lob",
						"Long pixie",
						"Sideswept pixie",
						"Italian bob",
						"Shullet"
					],
					{
						"key": "hair_style_list"
					}
				],
				"hair_color": [
					[
						"-",
						"Black",
						"Brown",
						"Blonde",
						"Red",
						"Auburn",
						"Chestnut",
						"Gray",
						"White",
						"Salt and pepper"
					],
					{
						"key": "hair_color_list"
					}
				],
				"disheveled": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"beard": [
					[
						"-",
						"Stubble Beard",
						"Goatee",
						"Full Beard",
						"Van Dyke Beard",
						"Soul Patch",
						"Garibaldi Beard",
						"Mutton Chops",
						"Circle Beard",
						"Corporate Beard",
						"Balbo Beard",
						"Ducktail Beard",
						"Chinstrap Beard",
						"Anchor Beard",
						"Chevron Mustache",
						"Horseshoe Mustache",
						"Handlebar Mustache",
						"Imperial Mustache",
						"Pencil Mustache",
						"Friendly Mutton Chops",
						"Zappa Mustache"
					],
					{
						"key": "beard_list"
					}
				],
				"skin_details": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"skin_pores": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"dimples": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"freckles": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"moles": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"skin_imperfections": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"skin_acne": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"tanned_skin": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"eyes_details": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"iris_details": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"circular_iris": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"circular_pupil": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"light_type": [
					[
						"-",
						"Natural sunlight",
						"Soft ambient light",
						"Harsh sunlight",
						"Overcast sky",
						"Sunset glow",
						"Sunrise warmth",
						"Twilight hues",
						"Candlelight",
						"Incandescent lighting",
						"Fluorescent lighting",
						"Moonlight",
						"Dappled sunlight",
						"Backlit silhouette",
						"Spotlight",
						"Rim lighting",
						"Firelight",
						"City streetlights",
						"Studio lighting",
						"Lantern light",
						"Tungsten lighting",
						"Cloudy day diffused light",
						"Skylight",
						"Golden hour light",
						"Blue hour light",
						"Flash photography",
						"Stage lighting",
						"Neon lights",
						"Torchlight",
						"Softbox lighting",
						"Rim light",
						"Lightning",
						"Abstract light patterns"
					],
					{
						"key": "light_type_list"
					}
				],
				"light_direction": [
					[
						"-",
						"top",
						"bottom",
						"right",
						"left",
						"front",
						"rear",
						"top-right",
						"top-left",
						"bottom-right",
						"bottom-left"
					],
					{
						"key": "light_direction_list"
					}
				],
				"light_weight": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.05,
						"min": 0,
						"max": 1.95,
						"display": "slider"
					}
				],
				"photorealism_improvement": [
					[
						"enable",
						"disable"
					]
				],
				"prompt_start": [
					"STRING",
					{
						"multiline": true,
						"default": "raw photo, (realistic:1.5)"
					}
				],
				"prompt_additional": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				],
				"prompt_end": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				],
				"negative_prompt": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				]
			}
		},
		"output": [
			"STRING",
			"STRING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"positive",
			"negative"
		],
		"name": "easy portraitMaster",
		"display_name": "Portrait Master",
		"description": "",
		"category": "EasyUse/Prompt",
		"output_node": false
	},
	"easy fullLoader": {
		"input": {
			"required": {
				"ckpt_name": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"config_name": [
					[
						"Default",
						"anything_v3.yaml",
						"v1-inference.yaml",
						"v1-inference_clip_skip_2.yaml",
						"v1-inference_clip_skip_2_fp16.yaml",
						"v1-inference_fp16.yaml",
						"v1-inpainting-inference.yaml",
						"v2-inference-v.yaml",
						"v2-inference-v_fp32.yaml",
						"v2-inference.yaml",
						"v2-inference_fp32.yaml",
						"v2-inpainting-inference.yaml"
					],
					{
						"default": "Default"
					}
				],
				"vae_name": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"clip_skip": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": 0,
						"step": 1
					}
				],
				"lora_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"lora_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"resolution": [
					[
						"自定义 x 自定义",
						"512 x 512",
						"512 x 768",
						"576 x 1024",
						"768 x 512",
						"768 x 768",
						"768 x 1024",
						"768 x 1280",
						"768 x 1344",
						"768 x 1536",
						"816 x 1920",
						"832 x 1152",
						"896 x 1152",
						"896 x 1088",
						"1024 x 1024",
						"1024 x 576",
						"1024 x 768",
						"1080 x 1920",
						"1440 x 2560",
						"1088 x 896",
						"1152 x 832",
						"1152 x 896",
						"1280 x 768",
						"1344 x 768",
						"1536 x 640",
						"1536 x 768",
						"1920 x 816",
						"1920 x 1080",
						"2560 x 1440"
					]
				],
				"empty_latent_width": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"empty_latent_height": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"positive": [
					"STRING",
					{
						"default": "Positive",
						"multiline": true
					}
				],
				"positive_token_normalization": [
					[
						"none",
						"mean",
						"length",
						"length+mean"
					]
				],
				"positive_weight_interpretation": [
					[
						"comfy",
						"A1111",
						"comfy++",
						"compel",
						"fixed attention"
					]
				],
				"negative": [
					"STRING",
					{
						"default": "Negative",
						"multiline": true
					}
				],
				"negative_token_normalization": [
					[
						"none",
						"mean",
						"length",
						"length+mean"
					]
				],
				"negative_weight_interpretation": [
					[
						"comfy",
						"A1111",
						"comfy++",
						"compel",
						"fixed attention"
					]
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 64
					}
				]
			},
			"optional": {
				"model_override": [
					"MODEL"
				],
				"clip_override": [
					"CLIP"
				],
				"vae_override": [
					"VAE"
				],
				"optional_lora_stack": [
					"LORA_STACK"
				],
				"a1111_prompt_style": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"VAE",
			"CLIP",
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model",
			"vae",
			"clip",
			"positive",
			"negative",
			"latent"
		],
		"name": "easy fullLoader",
		"display_name": "EasyLoader (Full)",
		"description": "",
		"category": "EasyUse/Loaders",
		"output_node": false
	},
	"easy a1111Loader": {
		"input": {
			"required": {
				"ckpt_name": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"vae_name": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"clip_skip": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": 0,
						"step": 1
					}
				],
				"lora_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"lora_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"resolution": [
					[
						"自定义 x 自定义",
						"512 x 512",
						"512 x 768",
						"576 x 1024",
						"768 x 512",
						"768 x 768",
						"768 x 1024",
						"768 x 1280",
						"768 x 1344",
						"768 x 1536",
						"816 x 1920",
						"832 x 1152",
						"896 x 1152",
						"896 x 1088",
						"1024 x 1024",
						"1024 x 576",
						"1024 x 768",
						"1080 x 1920",
						"1440 x 2560",
						"1088 x 896",
						"1152 x 832",
						"1152 x 896",
						"1280 x 768",
						"1344 x 768",
						"1536 x 640",
						"1536 x 768",
						"1920 x 816",
						"1920 x 1080",
						"2560 x 1440"
					],
					{
						"default": "512 x 512"
					}
				],
				"empty_latent_width": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"empty_latent_height": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"positive": [
					"STRING",
					{
						"default": "Positive",
						"multiline": true
					}
				],
				"negative": [
					"STRING",
					{
						"default": "Negative",
						"multiline": true
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 64
					}
				]
			},
			"optional": {
				"optional_lora_stack": [
					"LORA_STACK"
				],
				"a1111_prompt_style": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model",
			"vae"
		],
		"name": "easy a1111Loader",
		"display_name": "EasyLoader (A1111)",
		"description": "",
		"category": "EasyUse/Loaders",
		"output_node": false
	},
	"easy comfyLoader": {
		"input": {
			"required": {
				"ckpt_name": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"vae_name": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"clip_skip": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": 0,
						"step": 1
					}
				],
				"lora_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"lora_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"resolution": [
					[
						"自定义 x 自定义",
						"512 x 512",
						"512 x 768",
						"576 x 1024",
						"768 x 512",
						"768 x 768",
						"768 x 1024",
						"768 x 1280",
						"768 x 1344",
						"768 x 1536",
						"816 x 1920",
						"832 x 1152",
						"896 x 1152",
						"896 x 1088",
						"1024 x 1024",
						"1024 x 576",
						"1024 x 768",
						"1080 x 1920",
						"1440 x 2560",
						"1088 x 896",
						"1152 x 832",
						"1152 x 896",
						"1280 x 768",
						"1344 x 768",
						"1536 x 640",
						"1536 x 768",
						"1920 x 816",
						"1920 x 1080",
						"2560 x 1440"
					],
					{
						"default": "512 x 512"
					}
				],
				"empty_latent_width": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"empty_latent_height": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"positive": [
					"STRING",
					{
						"default": "Positive",
						"multiline": true
					}
				],
				"negative": [
					"STRING",
					{
						"default": "Negative",
						"multiline": true
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 64
					}
				]
			},
			"optional": {
				"optional_lora_stack": [
					"LORA_STACK"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model",
			"vae"
		],
		"name": "easy comfyLoader",
		"display_name": "EasyLoader (Comfy)",
		"description": "",
		"category": "EasyUse/Loaders",
		"output_node": false
	},
	"easy zero123Loader": {
		"input": {
			"required": {
				"ckpt_name": [
					[]
				],
				"vae_name": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"init_image": [
					"IMAGE"
				],
				"empty_latent_width": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"empty_latent_height": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 64
					}
				],
				"elevation": [
					"FLOAT",
					{
						"default": 0,
						"min": -180,
						"max": 180
					}
				],
				"azimuth": [
					"FLOAT",
					{
						"default": 0,
						"min": -180,
						"max": 180
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model",
			"vae"
		],
		"name": "easy zero123Loader",
		"display_name": "EasyLoader (Zero123)",
		"description": "",
		"category": "EasyUse/Loaders",
		"output_node": false
	},
	"easy svdLoader": {
		"input": {
			"required": {
				"ckpt_name": [
					[]
				],
				"vae_name": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"clip_name": [
					[
						"None"
					]
				],
				"init_image": [
					"IMAGE"
				],
				"resolution": [
					[
						"自定义 x 自定义",
						"512 x 512",
						"512 x 768",
						"576 x 1024",
						"768 x 512",
						"768 x 768",
						"768 x 1024",
						"768 x 1280",
						"768 x 1344",
						"768 x 1536",
						"816 x 1920",
						"832 x 1152",
						"896 x 1152",
						"896 x 1088",
						"1024 x 1024",
						"1024 x 576",
						"1024 x 768",
						"1080 x 1920",
						"1440 x 2560",
						"1088 x 896",
						"1152 x 832",
						"1152 x 896",
						"1280 x 768",
						"1344 x 768",
						"1536 x 640",
						"1536 x 768",
						"1920 x 816",
						"1920 x 1080",
						"2560 x 1440"
					],
					{
						"default": "1024 x 576"
					}
				],
				"empty_latent_width": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"empty_latent_height": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"video_frames": [
					"INT",
					{
						"default": 14,
						"min": 1,
						"max": 4096
					}
				],
				"motion_bucket_id": [
					"INT",
					{
						"default": 127,
						"min": 1,
						"max": 1023
					}
				],
				"fps": [
					"INT",
					{
						"default": 6,
						"min": 1,
						"max": 1024
					}
				],
				"augmentation_level": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			},
			"optional": {
				"optional_positive": [
					"STRING",
					{
						"default": "",
						"multiline": true
					}
				],
				"optional_negative": [
					"STRING",
					{
						"default": "",
						"multiline": true
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model",
			"vae"
		],
		"name": "easy svdLoader",
		"display_name": "EasyLoader (SVD)",
		"description": "",
		"category": "EasyUse/Loaders",
		"output_node": false
	},
	"easy cascadeLoader": {
		"input": {
			"required": {
				"stage_c": [
					[
						"iclight_sd15_fbc_unet_ldm.safetensors",
						"iclight_sd15_fc_unet_ldm.safetensors",
						"merged_ic_light.safetensors",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"stage_b": [
					[
						"iclight_sd15_fbc_unet_ldm.safetensors",
						"iclight_sd15_fc_unet_ldm.safetensors",
						"merged_ic_light.safetensors",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"stage_a": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"clip_name": [
					[
						"None"
					]
				],
				"lora_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"lora_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"resolution": [
					[
						"自定义 x 自定义",
						"512 x 512",
						"512 x 768",
						"576 x 1024",
						"768 x 512",
						"768 x 768",
						"768 x 1024",
						"768 x 1280",
						"768 x 1344",
						"768 x 1536",
						"816 x 1920",
						"832 x 1152",
						"896 x 1152",
						"896 x 1088",
						"1024 x 1024",
						"1024 x 576",
						"1024 x 768",
						"1080 x 1920",
						"1440 x 2560",
						"1088 x 896",
						"1152 x 832",
						"1152 x 896",
						"1280 x 768",
						"1344 x 768",
						"1536 x 640",
						"1536 x 768",
						"1920 x 816",
						"1920 x 1080",
						"2560 x 1440"
					],
					{
						"default": "1024 x 1024"
					}
				],
				"empty_latent_width": [
					"INT",
					{
						"default": 1024,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"empty_latent_height": [
					"INT",
					{
						"default": 1024,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"compression": [
					"INT",
					{
						"default": 42,
						"min": 32,
						"max": 64,
						"step": 1
					}
				],
				"positive": [
					"STRING",
					{
						"default": "Positive",
						"multiline": true
					}
				],
				"negative": [
					"STRING",
					{
						"default": "",
						"multiline": true
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 64
					}
				]
			},
			"optional": {
				"optional_lora_stack": [
					"LORA_STACK"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"LATENT",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model_c",
			"latent_c",
			"vae"
		],
		"name": "easy cascadeLoader",
		"display_name": "EasyCascadeLoader",
		"description": "",
		"category": "EasyUse/Loaders",
		"output_node": false
	},
	"easy loraStack": {
		"input": {
			"required": {
				"toggle": [
					[
						true,
						false
					]
				],
				"mode": [
					[
						"simple",
						"advanced"
					]
				],
				"num_loras": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 10
					}
				]
			},
			"optional": {
				"optional_lora_stack": [
					"LORA_STACK"
				],
				"lora_1_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					],
					{
						"default": "None"
					}
				],
				"lora_1_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_1_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_1_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_2_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					],
					{
						"default": "None"
					}
				],
				"lora_2_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_2_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_2_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_3_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					],
					{
						"default": "None"
					}
				],
				"lora_3_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_3_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_3_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_4_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					],
					{
						"default": "None"
					}
				],
				"lora_4_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_4_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_4_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_5_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					],
					{
						"default": "None"
					}
				],
				"lora_5_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_5_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_5_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_6_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					],
					{
						"default": "None"
					}
				],
				"lora_6_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_6_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_6_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_7_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					],
					{
						"default": "None"
					}
				],
				"lora_7_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_7_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_7_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_8_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					],
					{
						"default": "None"
					}
				],
				"lora_8_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_8_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_8_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_9_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					],
					{
						"default": "None"
					}
				],
				"lora_9_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_9_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_9_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_10_name": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					],
					{
						"default": "None"
					}
				],
				"lora_10_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_10_model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_10_clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"LORA_STACK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"lora_stack"
		],
		"name": "easy loraStack",
		"display_name": "EasyLoraStack",
		"description": "",
		"category": "EasyUse/Loaders",
		"output_node": false
	},
	"easy controlnetLoader": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"image": [
					"IMAGE"
				],
				"control_net_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				]
			},
			"optional": {
				"control_net": [
					"CONTROL_NET"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"scale_soft_weights": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"positive",
			"negative"
		],
		"name": "easy controlnetLoader",
		"display_name": "EasyControlnet",
		"description": "",
		"category": "EasyUse/Loaders",
		"output_node": true
	},
	"easy controlnetLoaderADV": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"image": [
					"IMAGE"
				],
				"control_net_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				]
			},
			"optional": {
				"control_net": [
					"CONTROL_NET"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_percent": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"scale_soft_weights": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"positive",
			"negative"
		],
		"name": "easy controlnetLoaderADV",
		"display_name": "EasyControlnet (Advanced)",
		"description": "",
		"category": "EasyUse/Loaders",
		"output_node": true
	},
	"easy LLLiteLoader": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"model_name": [
					[
						"kohya_controllllite_xl_blur.safetensors",
						"kohya_controllllite_xl_blur_anime.safetensors",
						"kohya_controllllite_xl_canny.safetensors",
						"kohya_controllllite_xl_openpose_anime.safetensors",
						"kohya_controllllite_xl_openpose_anime_v2.safetensors"
					]
				],
				"cond_image": [
					"IMAGE"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"steps": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 200,
						"step": 1
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.1
					}
				],
				"end_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "easy LLLiteLoader",
		"display_name": "EasyLLLite",
		"description": "",
		"category": "EasyUse/Loaders",
		"output_node": false
	},
	"easy latentNoisy": {
		"input": {
			"required": {
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"steps": [
					"INT",
					{
						"default": 10000,
						"min": 0,
						"max": 10000
					}
				],
				"start_at_step": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 10000
					}
				],
				"end_at_step": [
					"INT",
					{
						"default": 10000,
						"min": 1,
						"max": 10000
					}
				],
				"source": [
					[
						"CPU",
						"GPU"
					]
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				]
			},
			"optional": {
				"pipe": [
					"PIPE_LINE"
				],
				"optional_model": [
					"MODEL"
				],
				"optional_latent": [
					"LATENT"
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"LATENT",
			"FLOAT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"latent",
			"sigma"
		],
		"name": "easy latentNoisy",
		"display_name": "LatentNoisy",
		"description": "",
		"category": "EasyUse/Latent",
		"output_node": false
	},
	"easy latentCompositeMaskedWithCond": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"text_combine": [
					"LIST"
				],
				"source_latent": [
					"LATENT"
				],
				"source_mask": [
					"MASK"
				],
				"destination_mask": [
					"MASK"
				],
				"text_combine_mode": [
					[
						"add",
						"replace",
						"cover"
					],
					{
						"default": "add"
					}
				],
				"replace_text": [
					"STRING",
					{
						"default": ""
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"LATENT",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			true
		],
		"output_name": [
			"pipe",
			"latent",
			"conditioning"
		],
		"name": "easy latentCompositeMaskedWithCond",
		"display_name": "LatentCompositeMaskedWithCond",
		"description": "",
		"category": "EasyUse/Latent",
		"output_node": true
	},
	"easy seed": {
		"input": {
			"required": {
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"seed"
		],
		"name": "easy seed",
		"display_name": "EasySeed",
		"description": "",
		"category": "EasyUse/Seed",
		"output_node": true
	},
	"easy globalSeed": {
		"input": {
			"required": {
				"value": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				],
				"mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "control_before_generate",
						"label_off": "control_after_generate"
					}
				],
				"action": [
					[
						"fixed",
						"increment",
						"decrement",
						"randomize",
						"increment for each node",
						"decrement for each node",
						"randomize for each node"
					]
				],
				"last_seed": [
					"STRING",
					{
						"default": ""
					}
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "easy globalSeed",
		"display_name": "EasyGlobalSeed",
		"description": "",
		"category": "EasyUse/Seed",
		"output_node": true
	},
	"easy preSampling": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				]
			},
			"optional": {
				"image_to_latent": [
					"IMAGE"
				],
				"latent": [
					"LATENT"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy preSampling",
		"display_name": "PreSampling",
		"description": "",
		"category": "EasyUse/PreSampling",
		"output_node": true
	},
	"easy preSamplingAdvanced": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"start_at_step": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 10000
					}
				],
				"end_at_step": [
					"INT",
					{
						"default": 10000,
						"min": 0,
						"max": 10000
					}
				],
				"add_noise": [
					[
						"enable",
						"disable"
					]
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				]
			},
			"optional": {
				"image_to_latent": [
					"IMAGE"
				],
				"latent": [
					"LATENT"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy preSamplingAdvanced",
		"display_name": "PreSampling (Advanced)",
		"description": "",
		"category": "EasyUse/PreSampling",
		"output_node": true
	},
	"easy preSamplingNoiseIn": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"factor": [
					"FLOAT",
					{
						"default": 0.1,
						"min": 0,
						"max": 1,
						"step": 0.01,
						"round": 0.01
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				]
			},
			"optional": {
				"optional_noise_seed": [
					"INT",
					{
						"forceInput": true
					}
				],
				"optional_latent": [
					"LATENT"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy preSamplingNoiseIn",
		"display_name": "PreSampling (NoiseIn)",
		"description": "",
		"category": "EasyUse/PreSampling",
		"output_node": true
	},
	"easy preSamplingSdTurbo": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"steps": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"eta": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01,
						"round": false
					}
				],
				"s_noise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01,
						"round": false
					}
				],
				"upscale_ratio": [
					"FLOAT",
					{
						"default": 2,
						"min": 0,
						"max": 16,
						"step": 0.01,
						"round": false
					}
				],
				"start_step": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"end_step": [
					"INT",
					{
						"default": 15,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"upscale_n_step": [
					"INT",
					{
						"default": 3,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"unsharp_kernel_size": [
					"INT",
					{
						"default": 3,
						"min": 1,
						"max": 21,
						"step": 1
					}
				],
				"unsharp_sigma": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 10,
						"step": 0.01,
						"round": false
					}
				],
				"unsharp_strength": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 10,
						"step": 0.01,
						"round": false
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy preSamplingSdTurbo",
		"display_name": "PreSampling (SDTurbo)",
		"description": "",
		"category": "EasyUse/PreSampling",
		"output_node": true
	},
	"easy preSamplingDynamicCFG": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"cfg_mode": [
					[
						"Constant",
						"Linear Down",
						"Cosine Down",
						"Half Cosine Down",
						"Linear Up",
						"Cosine Up",
						"Half Cosine Up",
						"Power Up",
						"Power Down",
						"Linear Repeating",
						"Cosine Repeating",
						"Sawtooth"
					]
				],
				"cfg_scale_min": [
					"FLOAT",
					{
						"default": 3.5,
						"min": 0,
						"max": 100,
						"step": 0.5
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				]
			},
			"optional": {
				"image_to_latent": [
					"IMAGE"
				],
				"latent": [
					"LATENT"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy preSamplingDynamicCFG",
		"display_name": "PreSampling (DynamicCFG)",
		"description": "",
		"category": "EasyUse/PreSampling",
		"output_node": true
	},
	"easy preSamplingCascade": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"encode_vae_name": [
					[
						"None",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"decode_vae_name": [
					[
						"None",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 4,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					],
					{
						"default": "euler_ancestral"
					}
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					],
					{
						"default": "simple"
					}
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				]
			},
			"optional": {
				"image_to_latent_c": [
					"IMAGE"
				],
				"latent_c": [
					"LATENT"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy preSamplingCascade",
		"display_name": "PreSampling (Cascade)",
		"description": "",
		"category": "EasyUse/PreSampling",
		"output_node": true
	},
	"easy preSamplingLayerDiffusion": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"method": [
					[
						"Attention Injection",
						"Conv Injection",
						"Everything",
						"Foreground",
						"Background"
					]
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					],
					{
						"default": "euler_ancestral"
					}
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					],
					{
						"default": "simple"
					}
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				]
			},
			"optional": {
				"image": [
					"IMAGE"
				],
				"blended_image": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy preSamplingLayerDiffusion",
		"display_name": "PreSampling (LayerDiffuse)",
		"description": "",
		"category": "EasyUse/PreSampling",
		"output_node": true
	},
	"easy preSamplingLayerDiffusionADDTL": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"foreground_prompt": [
					"STRING",
					{
						"default": "",
						"placeholder": "Foreground Additional Prompt",
						"multiline": true
					}
				],
				"background_prompt": [
					"STRING",
					{
						"default": "",
						"placeholder": "Background Additional Prompt",
						"multiline": true
					}
				],
				"blended_prompt": [
					"STRING",
					{
						"default": "",
						"placeholder": "Blended Additional Prompt",
						"multiline": true
					}
				]
			},
			"optional": {
				"optional_fg_cond": [
					"CONDITIONING"
				],
				"optional_bg_cond": [
					"CONDITIONING"
				],
				"optional_blended_cond": [
					"CONDITIONING"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy preSamplingLayerDiffusionADDTL",
		"display_name": "PreSampling (LayerDiffuse ADDTL)",
		"description": "",
		"category": "EasyUse/PreSampling",
		"output_node": true
	},
	"easy fullkSampler": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					]
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"optional": {
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				],
				"model": [
					"MODEL"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"latent": [
					"LATENT"
				],
				"vae": [
					"VAE"
				],
				"clip": [
					"CLIP"
				],
				"xyPlot": [
					"XYPLOT"
				]
			},
			"hidden": {
				"tile_size": "INT",
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID",
				"embeddingsList": [
					[
						"badhandv4.pt",
						"easynegative.safetensors",
						"negative_hand-neg.pt",
						"ng_deepnegative_v1_75t.pt",
						"pureerosface_v1.pt",
						"ulzzang-6500-v1.1.bin"
					]
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"IMAGE",
			"MODEL",
			"CONDITIONING",
			"CONDITIONING",
			"LATENT",
			"VAE",
			"CLIP",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"image",
			"model",
			"positive",
			"negative",
			"latent",
			"vae",
			"clip",
			"seed"
		],
		"name": "easy fullkSampler",
		"display_name": "EasyKSampler (Full)",
		"description": "",
		"category": "EasyUse/Sampler",
		"output_node": true
	},
	"easy kSampler": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					],
					{
						"default": "Preview"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"optional": {
				"model": [
					"MODEL"
				]
			},
			"hidden": {
				"tile_size": "INT",
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID",
				"embeddingsList": [
					[
						"badhandv4.pt",
						"easynegative.safetensors",
						"negative_hand-neg.pt",
						"ng_deepnegative_v1_75t.pt",
						"pureerosface_v1.pt",
						"ulzzang-6500-v1.1.bin"
					]
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"pipe",
			"image"
		],
		"name": "easy kSampler",
		"display_name": "EasyKSampler",
		"description": "",
		"category": "EasyUse/Sampler",
		"output_node": true
	},
	"easy kSamplerTiled": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"tile_size": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 4096,
						"step": 64
					}
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					],
					{
						"default": "Preview"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"optional": {
				"model": [
					"MODEL"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID",
				"embeddingsList": [
					[
						"badhandv4.pt",
						"easynegative.safetensors",
						"negative_hand-neg.pt",
						"ng_deepnegative_v1_75t.pt",
						"pureerosface_v1.pt",
						"ulzzang-6500-v1.1.bin"
					]
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"pipe",
			"image"
		],
		"name": "easy kSamplerTiled",
		"display_name": "EasyKSampler (Tiled Decode)",
		"description": "",
		"category": "EasyUse/Sampler",
		"output_node": true
	},
	"easy kSamplerLayerDiffusion": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					],
					{
						"default": "Preview"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"optional": {
				"model": [
					"MODEL"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID",
				"embeddingsList": [
					[
						"badhandv4.pt",
						"easynegative.safetensors",
						"negative_hand-neg.pt",
						"ng_deepnegative_v1_75t.pt",
						"pureerosface_v1.pt",
						"ulzzang-6500-v1.1.bin"
					]
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"IMAGE",
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false,
			false,
			true
		],
		"output_name": [
			"pipe",
			"final_image",
			"original_image",
			"alpha"
		],
		"name": "easy kSamplerLayerDiffusion",
		"display_name": "EasyKSampler (LayerDiffuse)",
		"description": "",
		"category": "EasyUse/Sampler",
		"output_node": true
	},
	"easy kSamplerInpainting": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"grow_mask_by": [
					"INT",
					{
						"default": 6,
						"min": 0,
						"max": 64,
						"step": 1
					}
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					],
					{
						"default": "Preview"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"optional": {
				"model": [
					"MODEL"
				],
				"mask": [
					"MASK"
				],
				"patch": [
					"INPAINT_PATCH"
				]
			},
			"hidden": {
				"tile_size": "INT",
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID",
				"embeddingsList": [
					[
						"badhandv4.pt",
						"easynegative.safetensors",
						"negative_hand-neg.pt",
						"ng_deepnegative_v1_75t.pt",
						"pureerosface_v1.pt",
						"ulzzang-6500-v1.1.bin"
					]
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"IMAGE",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"image",
			"vae"
		],
		"name": "easy kSamplerInpainting",
		"display_name": "EasyKSampler (Inpainting)",
		"description": "",
		"category": "EasyUse/Sampler",
		"output_node": true
	},
	"easy kSamplerDownscaleUnet": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"downscale_mode": [
					[
						"None",
						"Auto",
						"Custom"
					],
					{
						"default": "Auto"
					}
				],
				"block_number": [
					"INT",
					{
						"default": 3,
						"min": 1,
						"max": 32,
						"step": 1
					}
				],
				"downscale_factor": [
					"FLOAT",
					{
						"default": 2,
						"min": 0.1,
						"max": 9,
						"step": 0.001
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_percent": [
					"FLOAT",
					{
						"default": 0.35,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"downscale_after_skip": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"downscale_method": [
					[
						"bicubic",
						"nearest-exact",
						"bilinear",
						"area",
						"bislerp"
					]
				],
				"upscale_method": [
					[
						"bicubic",
						"nearest-exact",
						"bilinear",
						"area",
						"bislerp"
					]
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					],
					{
						"default": "Preview"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"optional": {
				"model": [
					"MODEL"
				]
			},
			"hidden": {
				"tile_size": "INT",
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID",
				"embeddingsList": [
					[
						"badhandv4.pt",
						"easynegative.safetensors",
						"negative_hand-neg.pt",
						"ng_deepnegative_v1_75t.pt",
						"pureerosface_v1.pt",
						"ulzzang-6500-v1.1.bin"
					]
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"pipe",
			"image"
		],
		"name": "easy kSamplerDownscaleUnet",
		"display_name": "EasyKsampler (Downscale Unet)",
		"description": "",
		"category": "EasyUse/Sampler",
		"output_node": true
	},
	"easy kSamplerSDTurbo": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					],
					{
						"default": "Preview"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"optional": {
				"model": [
					"MODEL"
				]
			},
			"hidden": {
				"tile_size": "INT",
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID",
				"embeddingsList": [
					[
						"badhandv4.pt",
						"easynegative.safetensors",
						"negative_hand-neg.pt",
						"ng_deepnegative_v1_75t.pt",
						"pureerosface_v1.pt",
						"ulzzang-6500-v1.1.bin"
					]
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"pipe",
			"image"
		],
		"name": "easy kSamplerSDTurbo",
		"display_name": "EasyKSampler (SDTurbo)",
		"description": "",
		"category": "EasyUse/Sampler",
		"output_node": true
	},
	"easy fullCascadeKSampler": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"encode_vae_name": [
					[
						"None",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"decode_vae_name": [
					[
						"None",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 4,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					],
					{
						"default": "euler_ancestral"
					}
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					],
					{
						"default": "simple"
					}
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					]
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1125899906842624
					}
				]
			},
			"optional": {
				"image_to_latent_c": [
					"IMAGE"
				],
				"latent_c": [
					"LATENT"
				],
				"model_c": [
					"MODEL"
				]
			},
			"hidden": {
				"tile_size": "INT",
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID",
				"embeddingsList": [
					[
						"badhandv4.pt",
						"easynegative.safetensors",
						"negative_hand-neg.pt",
						"ng_deepnegative_v1_75t.pt",
						"pureerosface_v1.pt",
						"ulzzang-6500-v1.1.bin"
					]
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model_b",
			"latent_b"
		],
		"name": "easy fullCascadeKSampler",
		"display_name": "EasyCascadeKsampler (Full)",
		"description": "",
		"category": "EasyUse/Sampler",
		"output_node": true
	},
	"easy cascadeKSampler": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					],
					{
						"default": "Preview"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"optional": {
				"model_c": [
					"MODEL"
				]
			},
			"hidden": {
				"tile_size": "INT",
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID",
				"embeddingsList": [
					[
						"badhandv4.pt",
						"easynegative.safetensors",
						"negative_hand-neg.pt",
						"ng_deepnegative_v1_75t.pt",
						"pureerosface_v1.pt",
						"ulzzang-6500-v1.1.bin"
					]
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"pipe",
			"image"
		],
		"name": "easy cascadeKSampler",
		"display_name": "EasyCascadeKsampler",
		"description": "",
		"category": "EasyUse/Sampler",
		"output_node": true
	},
	"easy unSampler": {
		"input": {
			"required": {
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"end_at_step": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"normalize": [
					[
						"disable",
						"enable"
					]
				]
			},
			"optional": {
				"pipe": [
					"PIPE_LINE"
				],
				"optional_model": [
					"MODEL"
				],
				"optional_positive": [
					"CONDITIONING"
				],
				"optional_negative": [
					"CONDITIONING"
				],
				"optional_latent": [
					"LATENT"
				]
			}
		},
		"output": [
			"PIPE_LINE",
			"LATENT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"pipe",
			"latent"
		],
		"name": "easy unSampler",
		"display_name": "EasyUnSampler",
		"description": "",
		"category": "EasyUse/Sampler",
		"output_node": false
	},
	"easy hiresFix": {
		"input": {
			"required": {
				"model_name": [
					[
						"RealESRGAN_x4plus.pth",
						"RealESRGAN_x4plus_anime_6B.pth"
					]
				],
				"rescale_after_model": [
					[
						false,
						true
					],
					{
						"default": true
					}
				],
				"rescale_method": [
					[
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic",
						"lanczos",
						"bislerp"
					]
				],
				"rescale": [
					[
						"by percentage",
						"to Width/Height",
						"to longer side - maintain aspect"
					]
				],
				"percent": [
					"INT",
					{
						"default": 50,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"width": [
					"INT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"longer_side": [
					"INT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"crop": [
					[
						"disabled",
						"center"
					]
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					],
					{
						"default": "Preview"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"optional": {
				"pipe": [
					"PIPE_LINE"
				],
				"image": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"IMAGE",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"image",
			"latent"
		],
		"name": "easy hiresFix",
		"display_name": "HiresFix",
		"description": "",
		"category": "EasyUse/Fix",
		"output_node": true
	},
	"easy preDetailerFix": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 256,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "bbox",
						"label_off": "crop_region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 768,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"noise_mask": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"force_inpaint": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 16384,
						"step": 1,
						"default": 10
					}
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"cycle": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10,
						"step": 1
					}
				]
			},
			"optional": {
				"bbox_segm_pipe": [
					"PIPE_LINE"
				],
				"sam_pipe": [
					"PIPE_LINE"
				],
				"optional_image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy preDetailerFix",
		"display_name": "PreDetailerFix",
		"description": "",
		"category": "EasyUse/Fix",
		"output_node": false
	},
	"easy ultralyticsDetectorPipe": {
		"input": {
			"required": {
				"model_name": [
					[
						"bbox/face_yolov8m.pt",
						"bbox/hand_yolov8s.pt",
						"segm/person_yolov8m-seg.pt"
					]
				],
				"bbox_threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"bbox_dilation": [
					"INT",
					{
						"default": 10,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"bbox_crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 10,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"bbox_segm_pipe"
		],
		"name": "easy ultralyticsDetectorPipe",
		"display_name": "UltralyticsDetector (Pipe)",
		"description": "",
		"category": "EasyUse/Fix",
		"output_node": false
	},
	"easy samLoaderPipe": {
		"input": {
			"required": {
				"model_name": [
					[
						"sam_vit_b_01ec64.pth"
					]
				],
				"device_mode": [
					[
						"AUTO",
						"Prefer GPU",
						"CPU"
					],
					{
						"default": "AUTO"
					}
				],
				"sam_detection_hint": [
					[
						"center-1",
						"horizontal-2",
						"vertical-2",
						"rect-4",
						"diamond-4",
						"mask-area",
						"mask-points",
						"mask-point-bbox",
						"none"
					]
				],
				"sam_dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"sam_threshold": [
					"FLOAT",
					{
						"default": 0.93,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"sam_bbox_expansion": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"sam_mask_hint_threshold": [
					"FLOAT",
					{
						"default": 0.7,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"sam_mask_hint_use_negative": [
					[
						"False",
						"Small",
						"Outter"
					]
				]
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"sam_pipe"
		],
		"name": "easy samLoaderPipe",
		"display_name": "SAMLoader (Pipe)",
		"description": "",
		"category": "EasyUse/Fix",
		"output_node": false
	},
	"easy detailerFix": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save",
						"Sender",
						"Sender/Save"
					],
					{
						"default": "Preview"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"optional": {
				"model": [
					"MODEL"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"pipe",
			"image"
		],
		"name": "easy detailerFix",
		"display_name": "DetailerFix",
		"description": "",
		"category": "EasyUse/Fix",
		"output_node": true
	},
	"easy pipeIn": {
		"input": {
			"required": {},
			"optional": {
				"pipe": [
					"PIPE_LINE"
				],
				"model": [
					"MODEL"
				],
				"pos": [
					"CONDITIONING"
				],
				"neg": [
					"CONDITIONING"
				],
				"latent": [
					"LATENT"
				],
				"vae": [
					"VAE"
				],
				"clip": [
					"CLIP"
				],
				"image": [
					"IMAGE"
				],
				"xyPlot": [
					"XYPLOT"
				]
			},
			"hidden": {
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy pipeIn",
		"display_name": "Pipe In",
		"description": "",
		"category": "EasyUse/Pipe",
		"output_node": false
	},
	"easy pipeOut": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				]
			},
			"hidden": {
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"CONDITIONING",
			"CONDITIONING",
			"LATENT",
			"VAE",
			"CLIP",
			"IMAGE",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model",
			"pos",
			"neg",
			"latent",
			"vae",
			"clip",
			"image",
			"seed"
		],
		"name": "easy pipeOut",
		"display_name": "Pipe Out",
		"description": "",
		"category": "EasyUse/Pipe",
		"output_node": false
	},
	"easy pipeEdit": {
		"input": {
			"required": {
				"clip_skip": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": 0,
						"step": 1
					}
				],
				"optional_positive": [
					"STRING",
					{
						"default": "",
						"multiline": true
					}
				],
				"positive_token_normalization": [
					[
						"none",
						"mean",
						"length",
						"length+mean"
					]
				],
				"positive_weight_interpretation": [
					[
						"comfy",
						"A1111",
						"comfy++",
						"compel",
						"fixed attention"
					]
				],
				"optional_negative": [
					"STRING",
					{
						"default": "",
						"multiline": true
					}
				],
				"negative_token_normalization": [
					[
						"none",
						"mean",
						"length",
						"length+mean"
					]
				],
				"negative_weight_interpretation": [
					[
						"comfy",
						"A1111",
						"comfy++",
						"compel",
						"fixed attention"
					]
				],
				"a1111_prompt_style": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"conditioning_mode": [
					[
						"replace",
						"concat",
						"combine",
						"average",
						"timestep"
					],
					{
						"default": "replace"
					}
				],
				"average_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"old_cond_start": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"old_cond_end": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"new_cond_start": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"new_cond_end": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			},
			"optional": {
				"pipe": [
					"PIPE_LINE"
				],
				"model": [
					"MODEL"
				],
				"pos": [
					"CONDITIONING"
				],
				"neg": [
					"CONDITIONING"
				],
				"latent": [
					"LATENT"
				],
				"vae": [
					"VAE"
				],
				"clip": [
					"CLIP"
				],
				"image": [
					"IMAGE"
				]
			},
			"hidden": {
				"my_unique_id": "UNIQUE_ID",
				"prompt": "PROMPT"
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"CONDITIONING",
			"CONDITIONING",
			"LATENT",
			"VAE",
			"CLIP",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model",
			"pos",
			"neg",
			"latent",
			"vae",
			"clip",
			"image"
		],
		"name": "easy pipeEdit",
		"display_name": "Pipe Edit",
		"description": "",
		"category": "EasyUse/Pipe",
		"output_node": false
	},
	"easy pipeToBasicPipe": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				]
			},
			"hidden": {
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"BASIC_PIPE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"basic_pipe"
		],
		"name": "easy pipeToBasicPipe",
		"display_name": "Pipe -> BasicPipe",
		"description": "",
		"category": "EasyUse/Pipe",
		"output_node": false
	},
	"easy pipeBatchIndex": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"batch_index": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 63
					}
				],
				"length": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 64
					}
				]
			},
			"hidden": {
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy pipeBatchIndex",
		"display_name": "Pipe Batch Index",
		"description": "",
		"category": "EasyUse/Pipe",
		"output_node": false
	},
	"easy XYPlot": {
		"input": {
			"required": {
				"grid_spacing": [
					"INT",
					{
						"min": 0,
						"max": 500,
						"step": 5,
						"default": 0
					}
				],
				"output_individuals": [
					[
						"False",
						"True"
					],
					{
						"default": "False"
					}
				],
				"flip_xy": [
					[
						"False",
						"True"
					],
					{
						"default": "False"
					}
				],
				"x_axis": [
					[
						"None",
						"---------------------",
						"preSampling: steps",
						"preSampling: cfg",
						"preSampling: sampler_name",
						"preSampling: scheduler",
						"preSampling: denoise",
						"preSampling: seed",
						"---------------------",
						"loader: ckpt_name",
						"loader: vae_name",
						"loader: clip_skip",
						"loader: lora_name",
						"loader: lora_model_strength",
						"loader: lora_clip_strength",
						"loader: positive",
						"loader: negative"
					],
					{
						"default": "None"
					}
				],
				"x_values": [
					"STRING",
					{
						"default": "",
						"multiline": true,
						"placeholder": "insert values seperated by \"; \""
					}
				],
				"y_axis": [
					[
						"None",
						"---------------------",
						"preSampling: steps",
						"preSampling: cfg",
						"preSampling: sampler_name",
						"preSampling: scheduler",
						"preSampling: denoise",
						"preSampling: seed",
						"---------------------",
						"loader: ckpt_name",
						"loader: vae_name",
						"loader: clip_skip",
						"loader: lora_name",
						"loader: lora_model_strength",
						"loader: lora_clip_strength",
						"loader: positive",
						"loader: negative"
					],
					{
						"default": "None"
					}
				],
				"y_values": [
					"STRING",
					{
						"default": "",
						"multiline": true,
						"placeholder": "insert values seperated by \"; \""
					}
				]
			},
			"optional": {
				"pipe": [
					"PIPE_LINE"
				]
			},
			"hidden": {
				"plot_dict": [
					{
						"steps": {
							"min": 1,
							"max": 100,
							"step": 1
						},
						"cfg": {
							"min": 0,
							"max": 100,
							"step": 1
						},
						"sampler_name": [
							"euler",
							"euler_ancestral",
							"heun",
							"heunpp2",
							"dpm_2",
							"dpm_2_ancestral",
							"lms",
							"dpm_fast",
							"dpm_adaptive",
							"dpmpp_2s_ancestral",
							"dpmpp_sde",
							"dpmpp_sde_gpu",
							"dpmpp_2m",
							"dpmpp_2m_sde",
							"dpmpp_2m_sde_gpu",
							"dpmpp_3m_sde",
							"dpmpp_3m_sde_gpu",
							"ddpm",
							"lcm",
							"ddim",
							"uni_pc",
							"uni_pc_bh2"
						],
						"scheduler": [
							"normal",
							"karras",
							"exponential",
							"sgm_uniform",
							"simple",
							"ddim_uniform"
						],
						"denoise": {
							"min": 0,
							"max": 1,
							"step": 0.01
						},
						"seed": {
							"min": 0,
							"max": 1125899906842624
						},
						"ckpt_name": [
							"3Guofeng3_v32Light.safetensors",
							"AWPortrait_v1.4.safetensors",
							"AnythingV5Ink_v32Ink.safetensors",
							"CounterfeitV25_25.safetensors",
							"V08_V08.safetensors",
							"abyssorangemix2_Hard.safetensors",
							"abyssorangemix3AOM3_aom3a1b.safetensors",
							"abyssorangemix3AOM3_aom3a2.safetensors",
							"abyssorangemix3AOM3_aom3a3.safetensors",
							"animagine-xl-2.0.safetensors",
							"anygenV37_anygenv37.ckpt",
							"anygenz5.6.vae.pt",
							"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
							"awportrait_v13.safetensors",
							"beautifulRealistic_v60.safetensors",
							"cetusMix_Codaedition.safetensors",
							"chilloutmix_NiPrunedFp32Fix.safetensors",
							"coloringPage_v10.safetensors",
							"counterfeitxl_v10.safetensors",
							"cuteyukimixAdorable_neochapter2.safetensors",
							"cuteyukimixSpecializedAnd_echodimension.safetensors",
							"dosmix_.safetensors",
							"dreamshaperXL10_alpha2Xl10.safetensors",
							"dreamshaper_6BakedVae.safetensors",
							"etherBluMix_etherBluMix5.safetensors",
							"etherRealMix_etherRealMix3.safetensors",
							"ghostmix_v20Bakedvae.safetensors",
							"hassakuHentaiModel_hassakuv1.safetensors",
							"henmixReal_v10.safetensors",
							"juggernautXL_v8Rundiffusion.safetensors",
							"kohakuXLDelta_rev1.safetensors",
							"lyriel_v13.safetensors",
							"majicmixRealistic_v6.safetensors",
							"matrixHentaiPlusXL_v10.safetensors",
							"meinahentai_v2.safetensors",
							"meinahentai_v3.safetensors",
							"meinamix_meinaV7.safetensors",
							"meinapastel_v6Pastel.safetensors",
							"netaArtXL_v10.safetensors",
							"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
							"perfectWorld_v2Baked.safetensors",
							"perfectWorld_v4Baked.safetensors",
							"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
							"realisticVisionV20_v20.safetensors",
							"realvisxlV40_v40Bakedvae.safetensors",
							"sd-v1-5-pruned-noema-fp16.safetensors",
							"sd3_medium_incl_clips_t5xxlfp8.safetensors",
							"sd_xl_base_1.0.safetensors",
							"sd_xl_base_1.0_inpainting_0.1.safetensors",
							"sd_xl_refiner_1.0.safetensors",
							"sdxl_lightning_4step_unet.safetensors",
							"spiritforeseermix_spiritforeseerO.safetensors",
							"uberRealisticPornMerge_urpmv13.safetensors",
							"v1-5-pruned-emaonly.safetensors"
						],
						"vae_name": [
							"Baked-VAE",
							"Anything-V3.0.vae.safetensors",
							"kl-f8-anime2.ckpt",
							"sdxl_vae.safetensors",
							"vae-ft-mse-840000-ema-pruned.safetensors"
						],
						"clip_skip": {
							"min": -24,
							"max": -1,
							"step": 1
						},
						"lora_name": [
							"None",
							"Anya01V20.safetensors",
							"BloodlineLong-07.safetensors",
							"BloodlineLong-08.safetensors",
							"BloodlineLong-09.safetensors",
							"BloodlineLong-10.safetensors",
							"BloodlineLong-11.safetensors",
							"BloodlineLong-12.safetensors",
							"ConceptBetterCenterOpening_v1.safetensors",
							"ConceptDeliveryInBox_deliveryv106.safetensors",
							"CrotchlessPantsV1A10.safetensors",
							"Ink scenery.safetensors",
							"Kit_YGO.safetensors",
							"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
							"LuotianyiKoushiki_v1.safetensors",
							"Neurosama.safetensors",
							"NippleLinkedPiercing_30.safetensors",
							"OppaiChallengeV1.safetensors",
							"Pussy_Spread_v01.safetensors",
							"Saya-removing bra.safetensors",
							"Saya-spread pussy(fingers).safetensors",
							"SiriusBlackBikiniV1.safetensors",
							"Stardust_v20.safetensors",
							"SubmissivePoseV2-000008.safetensors",
							"V11ForegroundPlant_V11.safetensors",
							"VsingerTianyi_tianyi.safetensors",
							"animeTarotCardArtStyleLora_v31 (1).safetensors",
							"animeoutlineV4_16.safetensors",
							"atdanStyleLora_lk.safetensors",
							"bl3uprint.safetensors",
							"bondageSuspension_v11.safetensors",
							"breastCurtains_v10.safetensors",
							"chilloutmixss_xss10.safetensors",
							"conceptNippleTagAnd_v10.safetensors",
							"covering_breasts_v0.1.safetensors",
							"cuteDollGen2_beta1.safetensors",
							"cuteGirlMix4_v10.safetensors",
							"darkMagicianGirlLora_1.safetensors",
							"dilationTapeLora-05.safetensors",
							"dungeon_v2.0.safetensors",
							"elegantHanfuRuqun_v10.safetensors",
							"femaleMasturbation_v1.safetensors",
							"finenude_v0_2a.safetensors",
							"foldedPose_v1.safetensors",
							"funtoys_v1.safetensors",
							"gachaSplashLORA_gachaSplash30.safetensors",
							"gachaSplashLORA_gachaSplashFarShot.safetensors",
							"grabbingOwnAss_v1Pruned.safetensors",
							"handpull-12.safetensors",
							"infirmary_v0.1.safetensors",
							"innievag.safetensors",
							"ip-adapter-faceid-plus_sd15_lora.safetensors",
							"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
							"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
							"ip-adapter-faceid_sd15_lora.safetensors",
							"ip-adapter-faceid_sdxl_lora.safetensors",
							"japaneseDollLikeness_v10.safetensors",
							"kitchen_apron.safetensors",
							"koreandolllikenessV20_v20.safetensors",
							"lactation_v11.safetensors",
							"laundryDragonmaidLoraYuGi_v01.safetensors",
							"lcm-lora-sdv1-5.safetensors",
							"lcm-lora-sdxl.safetensors",
							"lcm_lora_sd15.safetensors",
							"lcm_lora_sdxl.safetensors",
							"lessUnderwear_v10.safetensors",
							"less_clothesConv2D2.5e-5_BF16.safetensors",
							"liloi.safetensors",
							"mLegsPoseLora800_v10.safetensors",
							"maplestoryStyle_v30.safetensors",
							"misakaMikotoACertain_misakaV1.safetensors",
							"nipplePiercing_v20.safetensors",
							"nippleRibbon_3.safetensors",
							"npm-v11t-000005.safetensors",
							"objectMasturbation-v11.safetensors",
							"pose  pet play.safetensors",
							"pussy_juiceConv2D2.5e-5_BF16.safetensors",
							"realSpreadPussy_sppSpreadpussyWV1.safetensors",
							"restroom_v0.2a.safetensors",
							"reverseTranslucent_v10.safetensors",
							"russianDollLikeness_v3.safetensors",
							"sagiriIzumiEroManga_v10.safetensors",
							"shibari_V20.safetensors",
							"skyStrikerAceRayeYuGiOh_v1.safetensors",
							"split_lora32V1.safetensors",
							"spreadPussy_v11.safetensors",
							"ssssGRIDMANTakarada_trV1.safetensors",
							"synth3.safetensors",
							"thighvibe.safetensors",
							"toiletGirl.safetensors",
							"unalignedDocking-000040.safetensors",
							"vibrator_v10.safetensors",
							"virginDestroyer_v10.safetensors",
							"vision_pro_v2.safetensors",
							"vsingerYuezhengLing_v1.safetensors",
							"雪糕-xuegao4.0.safetensors"
						],
						"lora_model_strength": {
							"min": -4,
							"max": 4,
							"step": 0.01
						},
						"lora_clip_strength": {
							"min": -4,
							"max": 4,
							"step": 0.01
						},
						"positive": [],
						"negative": []
					}
				]
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy XYPlot",
		"display_name": "XY Plot",
		"description": "",
		"category": "EasyUse/Pipe",
		"output_node": false
	},
	"easy XYPlotAdvanced": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"grid_spacing": [
					"INT",
					{
						"min": 0,
						"max": 500,
						"step": 5,
						"default": 0
					}
				],
				"output_individuals": [
					[
						"False",
						"True"
					],
					{
						"default": "False"
					}
				],
				"flip_xy": [
					[
						"False",
						"True"
					],
					{
						"default": "False"
					}
				]
			},
			"optional": {
				"X": [
					"X_Y"
				],
				"Y": [
					"X_Y"
				]
			},
			"hidden": {
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "easy XYPlotAdvanced",
		"display_name": "XY Plot Advanced",
		"description": "",
		"category": "EasyUse/Pipe",
		"output_node": false
	},
	"easy XYInputs: Seeds++ Batch": {
		"input": {
			"required": {
				"batch_count": [
					"INT",
					{
						"default": 3,
						"min": 1,
						"max": 50
					}
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: Seeds++ Batch",
		"display_name": "XY Inputs: Seeds++ Batch //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: Steps": {
		"input": {
			"required": {
				"target_parameter": [
					[
						"steps",
						"start_at_step",
						"end_at_step"
					]
				],
				"batch_count": [
					"INT",
					{
						"default": 3,
						"min": 0,
						"max": 50
					}
				],
				"first_step": [
					"INT",
					{
						"default": 10,
						"min": 1,
						"max": 10000
					}
				],
				"last_step": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"first_start_step": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 10000
					}
				],
				"last_start_step": [
					"INT",
					{
						"default": 10,
						"min": 0,
						"max": 10000
					}
				],
				"first_end_step": [
					"INT",
					{
						"default": 10,
						"min": 0,
						"max": 10000
					}
				],
				"last_end_step": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 10000
					}
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: Steps",
		"display_name": "XY Inputs: Steps //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: CFG Scale": {
		"input": {
			"required": {
				"batch_count": [
					"INT",
					{
						"default": 3,
						"min": 0,
						"max": 50
					}
				],
				"first_cfg": [
					"FLOAT",
					{
						"default": 7,
						"min": 0,
						"max": 100
					}
				],
				"last_cfg": [
					"FLOAT",
					{
						"default": 9,
						"min": 0,
						"max": 100
					}
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: CFG Scale",
		"display_name": "XY Inputs: CFG Scale //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: Sampler/Scheduler": {
		"input": {
			"required": {
				"target_parameter": [
					[
						"sampler",
						"scheduler",
						"sampler & scheduler"
					]
				],
				"input_count": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 30,
						"step": 1
					}
				],
				"sampler_1": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_1": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_2": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_2": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_3": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_3": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_4": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_4": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_5": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_5": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_6": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_6": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_7": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_7": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_8": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_8": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_9": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_9": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_10": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_10": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_11": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_11": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_12": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_12": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_13": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_13": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_14": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_14": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_15": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_15": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_16": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_16": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_17": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_17": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_18": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_18": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_19": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_19": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_20": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_20": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_21": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_21": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_22": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_22": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_23": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_23": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_24": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_24": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_25": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_25": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_26": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_26": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_27": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_27": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_28": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_28": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_29": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_29": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sampler_30": [
					[
						"None",
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler_30": [
					[
						"None",
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: Sampler/Scheduler",
		"display_name": "XY Inputs: Sampler/Scheduler //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: Denoise": {
		"input": {
			"required": {
				"batch_count": [
					"INT",
					{
						"default": 3,
						"min": 0,
						"max": 50
					}
				],
				"first_denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.1
					}
				],
				"last_denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: Denoise",
		"display_name": "XY Inputs: Denoise //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: Checkpoint": {
		"input": {
			"required": {
				"input_mode": [
					[
						"Ckpt Names",
						"Ckpt Names+ClipSkip",
						"Ckpt Names+ClipSkip+VAE"
					]
				],
				"ckpt_count": [
					"INT",
					{
						"default": 3,
						"min": 0,
						"max": 10,
						"step": 1
					}
				],
				"ckpt_name_1": [
					[
						"None",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"clip_skip_1": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				],
				"vae_name_1": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"ckpt_name_2": [
					[
						"None",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"clip_skip_2": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				],
				"vae_name_2": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"ckpt_name_3": [
					[
						"None",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"clip_skip_3": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				],
				"vae_name_3": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"ckpt_name_4": [
					[
						"None",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"clip_skip_4": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				],
				"vae_name_4": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"ckpt_name_5": [
					[
						"None",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"clip_skip_5": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				],
				"vae_name_5": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"ckpt_name_6": [
					[
						"None",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"clip_skip_6": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				],
				"vae_name_6": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"ckpt_name_7": [
					[
						"None",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"clip_skip_7": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				],
				"vae_name_7": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"ckpt_name_8": [
					[
						"None",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"clip_skip_8": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				],
				"vae_name_8": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"ckpt_name_9": [
					[
						"None",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"clip_skip_9": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				],
				"vae_name_9": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				],
				"ckpt_name_10": [
					[
						"None",
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"clip_skip_10": [
					"INT",
					{
						"default": -1,
						"min": -24,
						"max": -1,
						"step": 1
					}
				],
				"vae_name_10": [
					[
						"Baked VAE",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					]
				]
			},
			"optional": {
				"optional_lora_stack": [
					"LORA_STACK"
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: Checkpoint",
		"display_name": "XY Inputs: Checkpoint //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: Lora": {
		"input": {
			"required": {
				"input_mode": [
					[
						"Lora Names",
						"Lora Names+Weights"
					]
				],
				"lora_count": [
					"INT",
					{
						"default": 3,
						"min": 0,
						"max": 10,
						"step": 1
					}
				],
				"model_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_name_1": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"model_str_1": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_str_1": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_name_2": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"model_str_2": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_str_2": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_name_3": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"model_str_3": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_str_3": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_name_4": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"model_str_4": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_str_4": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_name_5": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"model_str_5": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_str_5": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_name_6": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"model_str_6": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_str_6": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_name_7": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"model_str_7": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_str_7": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_name_8": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"model_str_8": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_str_8": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_name_9": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"model_str_9": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_str_9": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"lora_name_10": [
					[
						"None",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"model_str_10": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				],
				"clip_str_10": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.01
					}
				]
			},
			"optional": {
				"optional_lora_stack": [
					"LORA_STACK"
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: Lora",
		"display_name": "XY Inputs: Lora //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: ModelMergeBlocks": {
		"input": {
			"required": {
				"ckpt_name_1": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"ckpt_name_2": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"vae_use": [
					[
						"Use Model 1",
						"Use Model 2",
						"Anything-V3.0.vae.safetensors",
						"kl-f8-anime2.ckpt",
						"sdxl_vae.safetensors",
						"vae-ft-mse-840000-ema-pruned.safetensors"
					],
					{
						"default": "Use Model 1"
					}
				],
				"preset": [
					[
						"Preset",
						"MMB-ALL:1,1,1",
						"MMB-IN:1,0,0",
						"MMB-MID:0,1,0",
						"MMB-OUT:0,0,1",
						"MMB-INMID:1,1,0",
						"MMB-INOUT:1,0,1",
						"MMB-MIDOUT:0,1,1",
						"MMB-NONE:0,0,0",
						"@MMBN-FULL-TEST:27"
					],
					{
						"default": "preset"
					}
				],
				"values": [
					"STRING",
					{
						"default": "1,0,0; \n0,1,0; \n0,0,1; \n1,1,0; \n1,0,1; \n0,1,1; ",
						"multiline": true,
						"placeholder": "Support 2 methods:\n\n1.input, middle, out in same line and insert values seperated by \"; \"\n\n2.model merge block number seperated by \", \" in same line and insert values seperated by \"; \""
					}
				]
			},
			"hidden": {
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: ModelMergeBlocks",
		"display_name": "XY Inputs: ModelMergeBlocks //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: PromptSR": {
		"input": {
			"required": {
				"target_prompt": [
					[
						"positive",
						"negative"
					]
				],
				"search_txt": [
					"STRING",
					{
						"default": "",
						"multiline": false
					}
				],
				"replace_all_text": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"replace_count": [
					"INT",
					{
						"default": 3,
						"min": 1,
						"max": 29
					}
				],
				"replace_1": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_1"
					}
				],
				"replace_2": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_2"
					}
				],
				"replace_3": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_3"
					}
				],
				"replace_4": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_4"
					}
				],
				"replace_5": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_5"
					}
				],
				"replace_6": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_6"
					}
				],
				"replace_7": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_7"
					}
				],
				"replace_8": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_8"
					}
				],
				"replace_9": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_9"
					}
				],
				"replace_10": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_10"
					}
				],
				"replace_11": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_11"
					}
				],
				"replace_12": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_12"
					}
				],
				"replace_13": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_13"
					}
				],
				"replace_14": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_14"
					}
				],
				"replace_15": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_15"
					}
				],
				"replace_16": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_16"
					}
				],
				"replace_17": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_17"
					}
				],
				"replace_18": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_18"
					}
				],
				"replace_19": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_19"
					}
				],
				"replace_20": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_20"
					}
				],
				"replace_21": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_21"
					}
				],
				"replace_22": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_22"
					}
				],
				"replace_23": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_23"
					}
				],
				"replace_24": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_24"
					}
				],
				"replace_25": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_25"
					}
				],
				"replace_26": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_26"
					}
				],
				"replace_27": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_27"
					}
				],
				"replace_28": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_28"
					}
				],
				"replace_29": [
					"STRING",
					{
						"default": "",
						"multiline": false,
						"placeholder": "replace_29"
					}
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: PromptSR",
		"display_name": "XY Inputs: PromptSR //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: ControlNet": {
		"input": {
			"required": {
				"control_net_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				],
				"image": [
					"IMAGE"
				],
				"target_parameter": [
					[
						"strength",
						"start_percent",
						"end_percent"
					]
				],
				"batch_count": [
					"INT",
					{
						"default": 3,
						"min": 1,
						"max": 30
					}
				],
				"first_strength": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"last_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"first_start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"last_start_percent": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"first_end_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"last_end_percent": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"end_percent": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: ControlNet",
		"display_name": "XY Inputs: Controlnet //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: PositiveCond": {
		"input": {
			"optional": {
				"positive_1": [
					"CONDITIONING"
				],
				"positive_2": [
					"CONDITIONING"
				],
				"positive_3": [
					"CONDITIONING"
				],
				"positive_4": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: PositiveCond",
		"display_name": "XY Inputs: PosCond //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: PositiveCondList": {
		"input": {
			"required": {
				"positive": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: PositiveCondList",
		"display_name": "XY Inputs: PosCondList //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: NegativeCond": {
		"input": {
			"optional": {
				"negative_1": "CONDITIONING",
				"negative_2": "CONDITIONING",
				"negative_3": "CONDITIONING",
				"negative_4": "CONDITIONING"
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: NegativeCond",
		"display_name": "XY Inputs: NegCond //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy XYInputs: NegativeCondList": {
		"input": {
			"required": {
				"negative": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"X_Y"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"X or Y"
		],
		"name": "easy XYInputs: NegativeCondList",
		"display_name": "XY Inputs: NegCondList //EasyUse",
		"description": "",
		"category": "EasyUse/XY Inputs",
		"output_node": false
	},
	"easy showSpentTime": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"spent_time": [
					"INFO",
					{
						"default": "推理完成后将显示推理时间",
						"forceInput": false
					}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "easy showSpentTime",
		"display_name": "Show Spent Time",
		"description": "",
		"category": "EasyUse/Util",
		"output_node": true
	},
	"easy showLoaderSettingsNames": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"names": [
					"INFO",
					{
						"default": "",
						"forceInput": false
					}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [
			"STRING",
			"STRING",
			"STRING"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"ckpt_name",
			"vae_name",
			"lora_name"
		],
		"name": "easy showLoaderSettingsNames",
		"display_name": "Show Loader Settings Names",
		"description": "",
		"category": "EasyUse/Util",
		"output_node": true
	},
	"dynamicThresholdingFull": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"mimic_scale": [
					"FLOAT",
					{
						"default": 7,
						"min": 0,
						"max": 100,
						"step": 0.5
					}
				],
				"threshold_percentile": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"mimic_mode": [
					[
						"Constant",
						"Linear Down",
						"Cosine Down",
						"Half Cosine Down",
						"Linear Up",
						"Cosine Up",
						"Half Cosine Up",
						"Power Up",
						"Power Down",
						"Linear Repeating",
						"Cosine Repeating",
						"Sawtooth"
					]
				],
				"mimic_scale_min": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.5
					}
				],
				"cfg_mode": [
					[
						"Constant",
						"Linear Down",
						"Cosine Down",
						"Half Cosine Down",
						"Linear Up",
						"Cosine Up",
						"Half Cosine Up",
						"Power Up",
						"Power Down",
						"Linear Repeating",
						"Cosine Repeating",
						"Sawtooth"
					]
				],
				"cfg_scale_min": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.5
					}
				],
				"sched_val": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.01
					}
				],
				"separate_feature_channels": [
					[
						"enable",
						"disable"
					]
				],
				"scaling_startpoint": [
					[
						"MEAN",
						"ZERO"
					]
				],
				"variability_measure": [
					[
						"AD",
						"STD"
					]
				],
				"interpolate_phi": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "dynamicThresholdingFull",
		"display_name": "DynamicThresholdingFull",
		"description": "",
		"category": "EasyUse/PreSampling",
		"output_node": false
	},
	"easy fooocusInpaintLoader": {
		"input": {
			"required": {
				"head": [
					[
						"fooocus_inpaint_head"
					]
				],
				"patch": [
					[
						"inpaint_v26 (1.32GB)",
						"inpaint_v25 (2.58GB)",
						"inpaint (1.32GB)"
					]
				]
			}
		},
		"output": [
			"INPAINT_PATCH"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"patch"
		],
		"name": "easy fooocusInpaintLoader",
		"display_name": "Load Fooocus Inpaint",
		"description": "",
		"category": "EasyUse/__for_testing",
		"output_node": false
	},
	"easy instantIDApply": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"image": [
					"IMAGE"
				],
				"instantid_file": [
					[]
				],
				"insightface": [
					[
						"CPU",
						"CUDA",
						"ROCM"
					]
				],
				"control_net_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"kohya_controllllite_xl_blur.safetensors",
						"kohya_controllllite_xl_blur_anime.safetensors",
						"kohya_controllllite_xl_canny.safetensors",
						"kohya_controllllite_xl_openpose_anime.safetensors",
						"kohya_controllllite_xl_openpose_anime_v2.safetensors",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				],
				"cn_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"cn_soft_weights": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"weight": [
					"FLOAT",
					{
						"default": 0.8,
						"min": 0,
						"max": 5,
						"step": 0.01
					}
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"noise": [
					"FLOAT",
					{
						"default": 0.35,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				]
			},
			"optional": {
				"image_kps": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				],
				"control_net": [
					"CONTROL_NET"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model",
			"positive",
			"negative"
		],
		"name": "easy instantIDApply",
		"display_name": "Easy Apply InstantID",
		"description": "",
		"category": "EasyUse/__for_testing",
		"output_node": true
	},
	"easy instantIDApplyADV": {
		"input": {
			"required": {
				"pipe": [
					"PIPE_LINE"
				],
				"image": [
					"IMAGE"
				],
				"instantid_file": [
					[]
				],
				"insightface": [
					[
						"CPU",
						"CUDA",
						"ROCM"
					]
				],
				"control_net_name": [
					[
						"Katarag_lineartXL-fp16.safetensors",
						"Kataragi_inpaintXL-fp16.safetensors",
						"Kataragi_inpaintXL-lora128.safetensors",
						"Kataragi_lineartXL-lora128.safetensors",
						"control-lora-canny-rank256.safetensors",
						"control-lora-depth-rank128.safetensors",
						"control-lora-depth-rank256.safetensors",
						"control-lora-recolor-rank128.safetensors",
						"control-lora-recolor-rank256.safetensors",
						"control-lora-sketch-rank128-metadata.safetensors",
						"control-lora-sketch-rank256.safetensors",
						"control_instant_id_sdxl.safetensors",
						"control_lora_rank128_v11p_sd15_canny_fp16.safetensors",
						"control_lora_rank128_v11p_sd15_openpose_fp16.safetensors",
						"control_openpose-fp16.safetensors",
						"control_sd15_animal_openpose.pth",
						"control_sd15_animal_openpose_fp16.pth",
						"control_sd15_depth_anything.safetensors",
						"control_sd15_inpaint_depth_hand_fp16.safetensors",
						"control_v11e_sd15_ip2p.pth",
						"control_v11e_sd15_ip2p_fp16.safetensors",
						"control_v11e_sd15_shuffle.pth",
						"control_v11f1e_sd15_tile.pth",
						"control_v11f1p_sd15_depth.pth",
						"control_v11p_sd15_canny.pth",
						"control_v11p_sd15_inpaint.pth",
						"control_v11p_sd15_lineart.pth",
						"control_v11p_sd15_mlsd.pth",
						"control_v11p_sd15_normalbae.pth",
						"control_v11p_sd15_openpose.pth",
						"control_v11p_sd15_scribble.pth",
						"control_v11p_sd15_seg.pth",
						"control_v11p_sd15_softedge.pth",
						"control_v11p_sd15s2_lineart_anime.pth",
						"control_v11u_sd15_tile.pth",
						"controlnet++_canny_sd15.safetensors",
						"controlnet++_canny_sd15_fp16.safetensors",
						"controlnet++_depth_sd15.safetensors",
						"controlnet++_depth_sd15_fp16.safetensors",
						"controlnet++_hed_softedge_sd15.bin",
						"controlnet++_hed_softedge_sd15_fp16.safetensors",
						"controlnet++_lineart_sd15.bin",
						"controlnet++_lineart_sd15_fp16.safetensors",
						"controlnet++_seg_sd15.safetensors",
						"controlnet++_seg_sd15_fp16.safetensors",
						"controlnetXL_line2colorV2-lora.safetensors",
						"depth_loose_controlnet.safetensors",
						"diffusers_xl_canny_small.safetensors",
						"diffusers_xl_recolor_testXL-lora128.safetensors",
						"diffusion_pytorch_model.fp16.safetensors",
						"ip-adapter-faceid-plus_sd15.bin",
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid-portrait_sd15.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-faceid_sdxl.bin",
						"ip-adapter-full-face_sd15.safetensors",
						"ip-adapter-plus-face_sd15.bin",
						"ip-adapter-plus-face_sd15.safetensors",
						"ip-adapter-plus-face_sdxl_vit-h.bin",
						"ip-adapter-plus-face_sdxl_vit-h.safetensors",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.bin",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_instant_id_sdxl.bin",
						"ip-adapter_plus_composition_sd15.safetensors",
						"ip-adapter_plus_composition_sdxl.safetensors",
						"ip-adapter_pulid_sdxl_fp16.safetensors",
						"ip-adapter_sd15.bin",
						"ip-adapter_sd15_light.bin",
						"ip-adapter_sd15_plus.pth",
						"ip-adapter_sd15_vit-G.bin",
						"ip-adapter_sdxl.bin",
						"ip-adapter_sdxl_vit-h.bin",
						"ip-adapter_xl.pth",
						"kohya_controllllite_xl_blur.safetensors",
						"kohya_controllllite_xl_blur_anime.safetensors",
						"kohya_controllllite_xl_canny.safetensors",
						"kohya_controllllite_xl_openpose_anime.safetensors",
						"kohya_controllllite_xl_openpose_anime_v2.safetensors",
						"mistoLine_softedge_sdxl_fp16.safetensors",
						"photomaker-v1.bin",
						"sai_xl_canny_128lora.safetensors",
						"t2i-adapter_xl_canny.safetensors",
						"t2iadapter_canny_sd15v2.pth",
						"t2iadapter_color_sd14v1.pth",
						"t2iadapter_depth_sd15v2.pth",
						"t2iadapter_style_sd14v1.pth",
						"ttplanetSDXLControlnet_v20Fp16_tile.safetensors"
					]
				],
				"cn_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"cn_soft_weights": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"weight": [
					"FLOAT",
					{
						"default": 0.8,
						"min": 0,
						"max": 5,
						"step": 0.01
					}
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"noise": [
					"FLOAT",
					{
						"default": 0.35,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				]
			},
			"optional": {
				"image_kps": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				],
				"control_net": [
					"CONTROL_NET"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"my_unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"PIPE_LINE",
			"MODEL",
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"pipe",
			"model",
			"positive",
			"negative"
		],
		"name": "easy instantIDApplyADV",
		"display_name": "Easy Apply InstantID (Advanced)",
		"description": "",
		"category": "EasyUse/__for_testing",
		"output_node": true
	},
	"easy imageInsetCrop": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"measurement": [
					[
						"Pixels",
						"Percentage"
					]
				],
				"left": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"right": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"top": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"bottom": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "easy imageInsetCrop",
		"display_name": "ImageInsetCrop",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": false
	},
	"easy imageSize": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"width_int",
			"height_int"
		],
		"name": "easy imageSize",
		"display_name": "ImageSize",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": true
	},
	"easy imageSizeBySide": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"side": [
					[
						"Longest",
						"Shortest"
					]
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"resolution"
		],
		"name": "easy imageSizeBySide",
		"display_name": "ImageSize (Side)",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": true
	},
	"easy imageSizeByLongerSide": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"resolution"
		],
		"name": "easy imageSizeByLongerSide",
		"display_name": "ImageSize (LongerSide)",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": true
	},
	"easy imagePixelPerfect": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"resize_mode": [
					[
						"Just Resize",
						"Crop and Resize",
						"Resize and Fill"
					],
					{
						"default": "Just Resize"
					}
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"resolution"
		],
		"name": "easy imagePixelPerfect",
		"display_name": "ImagePixelPerfect",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": true
	},
	"easy imageScaleDown": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"crop": [
					[
						"disabled",
						"center"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "easy imageScaleDown",
		"display_name": "Image Scale Down",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": false
	},
	"easy imageScaleDownBy": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"scale_by": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.01,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "easy imageScaleDownBy",
		"display_name": "Image Scale Down By",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": false
	},
	"easy imageScaleDownToSize": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"size": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "max",
						"label_off": "min"
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "easy imageScaleDownToSize",
		"display_name": "Image Scale Down To Size",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": false
	},
	"easy imageToMask": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"channel": [
					[
						"red",
						"green",
						"blue"
					]
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "easy imageToMask",
		"display_name": "ImageToMask",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": false
	},
	"easy imageSplitList": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE",
			"IMAGE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"images",
			"images",
			"images"
		],
		"name": "easy imageSplitList",
		"display_name": "imageSplitList",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": false
	},
	"easy imageSave": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				],
				"only_preview": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "easy imageSave",
		"display_name": "SaveImage (Simple)",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": true
	},
	"easy imageRemBg": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"rem_mode": [
					[
						"RMBG-1.4"
					]
				],
				"image_output": [
					[
						"Hide",
						"Preview",
						"Save",
						"Hide/Save"
					],
					{
						"default": "Preview"
					}
				],
				"save_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"image",
			"mask"
		],
		"name": "easy imageRemBg",
		"display_name": "Image Remove Bg",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": true
	},
	"easy joinImageBatch": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"mode": [
					[
						"horizontal",
						"vertical"
					],
					{
						"default": "horizontal"
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"image"
		],
		"name": "easy joinImageBatch",
		"display_name": "JoinImageBatch",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": false
	},
	"easy poseEditor": {
		"input": {
			"required": {
				"image": [
					[
						"ComfyUI_temp_cfdai_00001_.png",
						"ComfyUI_temp_cfdai_00002_.png",
						"ComfyUI_temp_cfdai_00003_.png",
						"ComfyUI_temp_cfdai_00004_.png",
						"ComfyUI_temp_cfdai_00005_.png",
						"ComfyUI_temp_cfdai_00006_.png",
						"ComfyUI_temp_cfdai_00007_.png",
						"ComfyUI_temp_cfdai_00008_.png",
						"ComfyUI_temp_cfdai_00009_.png",
						"ComfyUI_temp_cfdai_00010_.png",
						"ComfyUI_temp_cfdai_00011_.png"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "easy poseEditor",
		"display_name": "PoseEditor",
		"description": "",
		"category": "EasyUse/Image",
		"output_node": false
	},
	"easy string": {
		"input": {
			"required": {
				"value": [
					"STRING",
					{
						"default": ""
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"string"
		],
		"name": "easy string",
		"display_name": "String",
		"description": "",
		"category": "EasyUse/Logic/Type",
		"output_node": false
	},
	"easy int": {
		"input": {
			"required": {
				"value": [
					"INT",
					{
						"default": 0
					}
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"int"
		],
		"name": "easy int",
		"display_name": "Int",
		"description": "",
		"category": "EasyUse/Logic/Type",
		"output_node": false
	},
	"easy rangeInt": {
		"input": {
			"required": {
				"range_mode": [
					[
						"step",
						"num_steps"
					],
					{
						"default": "step"
					}
				],
				"start": [
					"INT",
					{
						"default": 0,
						"min": -4096,
						"max": 4096,
						"step": 1
					}
				],
				"stop": [
					"INT",
					{
						"default": 0,
						"min": -4096,
						"max": 4096,
						"step": 1
					}
				],
				"step": [
					"INT",
					{
						"default": 0,
						"min": -4096,
						"max": 4096,
						"step": 1
					}
				],
				"num_steps": [
					"INT",
					{
						"default": 0,
						"min": -4096,
						"max": 4096,
						"step": 1
					}
				],
				"end_mode": [
					[
						"Inclusive",
						"Exclusive"
					],
					{
						"default": "Inclusive"
					}
				]
			}
		},
		"output": [
			"INT",
			"INT"
		],
		"output_is_list": [
			true,
			true
		],
		"output_name": [
			"range",
			"range_sizes"
		],
		"name": "easy rangeInt",
		"display_name": "Range(Int)",
		"description": "",
		"category": "EasyUse/Logic/Type",
		"output_node": false
	},
	"easy float": {
		"input": {
			"required": {
				"value": [
					"FLOAT",
					{
						"default": 0,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"FLOAT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"float"
		],
		"name": "easy float",
		"display_name": "Float",
		"description": "",
		"category": "EasyUse/Logic/Type",
		"output_node": false
	},
	"easy rangeFloat": {
		"input": {
			"required": {
				"range_mode": [
					[
						"step",
						"num_steps"
					],
					{
						"default": "step"
					}
				],
				"start": [
					"FLOAT",
					{
						"default": 0,
						"min": -4096,
						"max": 4096,
						"step": 0.1
					}
				],
				"stop": [
					"FLOAT",
					{
						"default": 0,
						"min": -4096,
						"max": 4096,
						"step": 0.1
					}
				],
				"step": [
					"FLOAT",
					{
						"default": 0,
						"min": -4096,
						"max": 4096,
						"step": 0.1
					}
				],
				"num_steps": [
					"INT",
					{
						"default": 0,
						"min": -4096,
						"max": 4096,
						"step": 1
					}
				],
				"end_mode": [
					[
						"Inclusive",
						"Exclusive"
					],
					{
						"default": "Inclusive"
					}
				]
			}
		},
		"output": [
			"FLOAT",
			"INT"
		],
		"output_is_list": [
			true,
			true
		],
		"output_name": [
			"range",
			"range_sizes"
		],
		"name": "easy rangeFloat",
		"display_name": "Range(Float)",
		"description": "",
		"category": "EasyUse/Logic/Type",
		"output_node": false
	},
	"easy boolean": {
		"input": {
			"required": {
				"value": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"BOOLEAN"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"boolean"
		],
		"name": "easy boolean",
		"display_name": "Boolean",
		"description": "",
		"category": "EasyUse/Logic/Type",
		"output_node": false
	},
	"easy compare": {
		"input": {
			"required": {
				"a": [
					"*",
					{
						"default": 0
					}
				],
				"b": [
					"*",
					{
						"default": 0
					}
				],
				"comparison": [
					[
						"a == b",
						"a != b",
						"a < b",
						"a > b",
						"a <= b",
						"a >= b"
					],
					{
						"default": "a == b"
					}
				]
			}
		},
		"output": [
			"BOOLEAN"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"boolean"
		],
		"name": "easy compare",
		"display_name": "Compare",
		"description": "",
		"category": "EasyUse/Logic/Math",
		"output_node": false
	},
	"easy imageSwitch": {
		"input": {
			"required": {
				"image_a": [
					"IMAGE"
				],
				"image_b": [
					"IMAGE"
				],
				"boolean": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "easy imageSwitch",
		"display_name": "Image Switch",
		"description": "",
		"category": "EasyUse/Logic/Switch",
		"output_node": false
	},
	"easy if": {
		"input": {
			"required": {
				"any": [
					"*"
				],
				"if": [
					"*"
				],
				"else": [
					"*"
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"?"
		],
		"name": "easy if",
		"display_name": "If",
		"description": "",
		"category": "EasyUse/Logic/Math",
		"output_node": false
	},
	"easy isSDXL": {
		"input": {
			"required": {},
			"optional": {
				"optional_pipe": [
					"PIPE_LINE"
				],
				"optional_clip": [
					"CLIP"
				]
			}
		},
		"output": [
			"BOOLEAN"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"boolean"
		],
		"name": "easy isSDXL",
		"display_name": "Is SDXL",
		"description": "",
		"category": "EasyUse/Logic",
		"output_node": false
	},
	"easy xyAny": {
		"input": {
			"required": {
				"X": [
					"*",
					{}
				],
				"Y": [
					"*",
					{}
				],
				"direction": [
					[
						"horizontal",
						"vertical"
					],
					{
						"default": "horizontal"
					}
				]
			}
		},
		"output": [
			"*",
			"*"
		],
		"output_is_list": [
			true,
			true
		],
		"output_name": [
			"X",
			"Y"
		],
		"name": "easy xyAny",
		"display_name": "XYAny",
		"description": "",
		"category": "EasyUse/Logic",
		"output_node": false
	},
	"easy convertAnything": {
		"input": {
			"required": {
				"anything": [
					"*"
				],
				"output_type": [
					[
						"string",
						"int",
						"float",
						"boolean"
					],
					{
						"default": "string"
					}
				]
			}
		},
		"output": [
			[
				"*"
			]
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"*"
		],
		"name": "easy convertAnything",
		"display_name": "Convert Any",
		"description": "",
		"category": "EasyUse/Logic",
		"output_node": true
	},
	"easy showAnything": {
		"input": {
			"required": {},
			"optional": {
				"anything": [
					"*",
					{}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "easy showAnything",
		"display_name": "Show Any",
		"description": "",
		"category": "EasyUse/Logic",
		"output_node": true
	},
	"easy showTensorShape": {
		"input": {
			"required": {
				"tensor": [
					"*"
				]
			},
			"optional": {},
			"hidden": {
				"unique_id": "UNIQUE_ID",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "easy showTensorShape",
		"display_name": "Show Tensor Shape",
		"description": "",
		"category": "EasyUse/Logic",
		"output_node": true
	},
	"easy cleanGpuUsed": {
		"input": {
			"required": {
				"anything": [
					"*",
					{}
				]
			},
			"optional": {},
			"hidden": {
				"unique_id": "UNIQUE_ID",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "easy cleanGpuUsed",
		"display_name": "Clean GPU Used",
		"description": "",
		"category": "EasyUse/Logic",
		"output_node": true
	},
	"HiDiffusionApply": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"aggressive_raunet": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"aggressive_step": [
					"INT",
					{
						"default": 8
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "HiDiffusionApply",
		"display_name": "HiDiffusion Apply",
		"description": "",
		"category": "load_model",
		"output_node": false
	},
	"ICLightAppply": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ic_model": [
					"MODEL"
				],
				"c_concat": [
					"LATENT"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ICLightAppply",
		"display_name": "ICLightAppply",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"ICLightApplyMaskGrey": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"alpha": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ICLightApplyMaskGrey",
		"display_name": "IC Light Apply Mask Grey",
		"description": "",
		"category": "mask/compositing",
		"output_node": false
	},
	"VAEEncodeArgMax": {
		"input": {
			"required": {
				"pixels": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "VAEEncodeArgMax",
		"display_name": "VAE Encode ArgMax",
		"description": "",
		"category": "latent",
		"output_node": false
	},
	"LoadAndApplyICLightUnet": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"model_path": [
					[
						"iclight_sd15_fbc_unet_ldm.safetensors",
						"iclight_sd15_fc_unet_ldm.safetensors",
						"merged_ic_light.safetensors"
					]
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "LoadAndApplyICLightUnet",
		"display_name": "Load And Apply IC-Light",
		"description": "\n  \nLoads and applies the diffusers SD1.5 IC-Light models available here:  \nhttps://huggingface.co/lllyasviel/ic-light/tree/main  \n  \nUsed with ICLightConditioning -node  \n",
		"category": "IC-Light",
		"output_node": false
	},
	"ICLightConditioning": {
		"input": {
			"required": {
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"vae": [
					"VAE"
				],
				"foreground": [
					"LATENT"
				],
				"multiplier": [
					"FLOAT",
					{
						"default": 0.18215,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			},
			"optional": {
				"opt_background": [
					"LATENT"
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"empty_latent"
		],
		"name": "ICLightConditioning",
		"display_name": "IC-Light Conditioning",
		"description": "\n  \nConditioning for the IC-Light model.  \nTo use the \"opt_background\" input, you also need to use the  \n\"fbc\" version of the IC-Light models.  \n  \n",
		"category": "IC-Light",
		"output_node": false
	},
	"LightSource": {
		"input": {
			"required": {
				"light_position": [
					[
						"Left Light",
						"Right Light",
						"Top Light",
						"Bottom Light",
						"Top Left Light",
						"Top Right Light",
						"Bottom Left Light",
						"Bottom Right Light"
					]
				],
				"multiplier": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100,
						"step": 0.001
					}
				],
				"start_color": [
					"STRING",
					{
						"default": "#FFFFFF"
					}
				],
				"end_color": [
					"STRING",
					{
						"default": "#000000"
					}
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				]
			},
			"optional": {
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				],
				"prev_image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "LightSource",
		"display_name": "Simple Light Source",
		"description": "\nGenerates a gradient image that can be used  \nas a simple light source.  The color can be  \nspecified in RGB or hex format.  \n",
		"category": "IC-Light",
		"output_node": false
	},
	"CalculateNormalsFromImages": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"sigma": [
					"FLOAT",
					{
						"default": 10,
						"min": 0.01,
						"max": 100,
						"step": 0.01
					}
				],
				"center_input_range": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"normal",
			"divided"
		],
		"name": "CalculateNormalsFromImages",
		"display_name": "Calculate Normals From Images",
		"description": "\nCalculates normal map from different directional exposures.  \nTakes in 4 images as a batch:  \nleft, right, bottom, top  \n\n",
		"category": "IC-Light",
		"output_node": false
	},
	"LoadHDRImage": {
		"input": {
			"required": {
				"image": [
					[
						"00000-2427730660.png",
						"00006-2966685768 (1).png",
						"00006-2966685768.png",
						"00023-3076193459.png",
						"00066-4225385850.png",
						"00138-648843619.png",
						"1 (1).webp",
						"1.webp",
						"15.png",
						"3.webp",
						"309219693-e7e2d80e-ffbe-4724-812a-5139a88027e3.png",
						"322326752-b89a2151-df43-4137-a297-deb70fbda27c.png",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe (1).jpg",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe (2).jpg",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe.jpg",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (1).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (2).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (3).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2.png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269 (1).png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269 (2).png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269.png",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (1).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (2).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (3).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (4).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (5).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238.jpeg",
						"360_F_244328590_RiyvTqK8DUKDX6GSHj3JVMjiuJnwhu0y.jpg",
						"4.jpg",
						"4.webp",
						"5.webp",
						"5b57323c40b09034008b45e7.webp",
						"8 (1).webp",
						"8.webp",
						"GNb-BZSbwAAHX4z.jpg",
						"IMG_1354.JPG",
						"IMG_1563.png",
						"Image_20230919232822.jpg",
						"RGBMask (1).png",
						"RGBMask.png",
						"blended.png",
						"chair.png",
						"demo2.png",
						"dog (1).png",
						"dog (2).png",
						"dog.png",
						"dog512.png",
						"example.png",
						"i3 (1).png",
						"i3.png",
						"iris.png",
						"mask.png",
						"old_man.png",
						"pngtree-science-and-technology-space-station-light-effect-background-image_2049440.jpg",
						"s-l1200 (1).jpg",
						"s-l1200.jpg",
						"tong(1) (1).png",
						"tong(1).png",
						"unnamed.jpg"
					],
					{
						"image_upload": false
					}
				],
				"exposures": [
					"STRING",
					{
						"default": "-2,-1,0,1,2"
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "LoadHDRImage",
		"display_name": "Load HDR Image",
		"description": "\nLoads a .hdr image from the input directory.  \nOutput is a batch of LDR images with the selected exposures.  \n\n",
		"category": "IC-Light",
		"output_node": false
	},
	"BackgroundScaler": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				],
				"scale": [
					"FLOAT",
					{
						"default": 0.5,
						"min": -10,
						"max": 10,
						"step": 0.001
					}
				],
				"invert": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "BackgroundScaler",
		"display_name": "Background Scaler",
		"description": "\nSets the masked area color in grayscale range.  \n",
		"category": "IC-Light",
		"output_node": false
	},
	"DetailTransfer": {
		"input": {
			"required": {
				"target": [
					"IMAGE"
				],
				"source": [
					"IMAGE"
				],
				"mode": [
					[
						"add",
						"multiply",
						"screen",
						"overlay",
						"soft_light",
						"hard_light",
						"color_dodge",
						"color_burn",
						"difference",
						"exclusion",
						"divide"
					],
					{
						"default": "add"
					}
				],
				"blur_sigma": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.1,
						"max": 100,
						"step": 0.01
					}
				],
				"blend_factor": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.001,
						"round": 0.001
					}
				]
			},
			"optional": {
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "DetailTransfer",
		"display_name": "Detail Transfer",
		"description": "",
		"category": "IC-Light",
		"output_node": false
	},
	"SAMLoader": {
		"input": {
			"required": {
				"model_name": [
					[
						"sam_vit_b_01ec64.pth",
						"ESAM"
					]
				],
				"device_mode": [
					[
						"AUTO",
						"Prefer GPU",
						"CPU"
					]
				]
			}
		},
		"output": [
			"SAM_MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SAM_MODEL"
		],
		"name": "SAMLoader",
		"display_name": "SAMLoader (Impact)",
		"description": "",
		"category": "ImpactPack",
		"output_node": false
	},
	"CLIPSegDetectorProvider": {
		"input": {
			"required": {
				"text": [
					"STRING",
					{
						"multiline": false
					}
				],
				"blur": [
					"FLOAT",
					{
						"min": 0,
						"max": 15,
						"step": 0.1,
						"default": 7
					}
				],
				"threshold": [
					"FLOAT",
					{
						"min": 0,
						"max": 1,
						"step": 0.05,
						"default": 0.4
					}
				],
				"dilation_factor": [
					"INT",
					{
						"min": 0,
						"max": 10,
						"step": 1,
						"default": 4
					}
				]
			}
		},
		"output": [
			"BBOX_DETECTOR"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"BBOX_DETECTOR"
		],
		"name": "CLIPSegDetectorProvider",
		"display_name": "CLIPSegDetectorProvider",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ONNXDetectorProvider": {
		"input": {
			"required": {
				"model_name": [
					[]
				]
			}
		},
		"output": [
			"BBOX_DETECTOR"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"BBOX_DETECTOR"
		],
		"name": "ONNXDetectorProvider",
		"display_name": "ONNXDetectorProvider",
		"description": "",
		"category": "ImpactPack",
		"output_node": false
	},
	"BitwiseAndMaskForEach": {
		"input": {
			"required": {
				"base_segs": [
					"SEGS"
				],
				"mask_segs": [
					"SEGS"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "BitwiseAndMaskForEach",
		"display_name": "Bitwise(SEGS & SEGS)",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"SubtractMaskForEach": {
		"input": {
			"required": {
				"base_segs": [
					"SEGS"
				],
				"mask_segs": [
					"SEGS"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "SubtractMaskForEach",
		"display_name": "Bitwise(SEGS - SEGS)",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"DetailerForEach": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"segs": [
					"SEGS"
				],
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 384,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "bbox",
						"label_off": "crop_region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"noise_mask": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"force_inpaint": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"cycle": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10,
						"step": 1
					}
				]
			},
			"optional": {
				"detailer_hook": [
					"DETAILER_HOOK"
				],
				"inpaint_model": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_mask_feather": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 100,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "DetailerForEach",
		"display_name": "Detailer (SEGS)",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"DetailerForEachDebug": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"segs": [
					"SEGS"
				],
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 384,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "bbox",
						"label_off": "crop_region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"noise_mask": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"force_inpaint": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"cycle": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10,
						"step": 1
					}
				]
			},
			"optional": {
				"detailer_hook": [
					"DETAILER_HOOK"
				],
				"inpaint_model": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_mask_feather": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 100,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"IMAGE",
			"IMAGE",
			"IMAGE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			true,
			true,
			true,
			true
		],
		"output_name": [
			"image",
			"cropped",
			"cropped_refined",
			"cropped_refined_alpha",
			"cnet_images"
		],
		"name": "DetailerForEachDebug",
		"display_name": "DetailerDebug (SEGS)",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"DetailerForEachPipe": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"segs": [
					"SEGS"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 384,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "bbox",
						"label_off": "crop_region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"noise_mask": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"force_inpaint": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"refiner_ratio": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1
					}
				],
				"cycle": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10,
						"step": 1
					}
				]
			},
			"optional": {
				"detailer_hook": [
					"DETAILER_HOOK"
				],
				"refiner_basic_pipe_opt": [
					"BASIC_PIPE"
				],
				"inpaint_model": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_mask_feather": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 100,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"SEGS",
			"BASIC_PIPE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false,
			false,
			true
		],
		"output_name": [
			"image",
			"segs",
			"basic_pipe",
			"cnet_images"
		],
		"name": "DetailerForEachPipe",
		"display_name": "Detailer (SEGS/pipe)",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"DetailerForEachDebugPipe": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"segs": [
					"SEGS"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 384,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "bbox",
						"label_off": "crop_region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"noise_mask": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"force_inpaint": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"refiner_ratio": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1
					}
				],
				"cycle": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10,
						"step": 1
					}
				]
			},
			"optional": {
				"detailer_hook": [
					"DETAILER_HOOK"
				],
				"refiner_basic_pipe_opt": [
					"BASIC_PIPE"
				],
				"inpaint_model": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_mask_feather": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 100,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"SEGS",
			"BASIC_PIPE",
			"IMAGE",
			"IMAGE",
			"IMAGE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false,
			false,
			true,
			true,
			true,
			true
		],
		"output_name": [
			"image",
			"segs",
			"basic_pipe",
			"cropped",
			"cropped_refined",
			"cropped_refined_alpha",
			"cnet_images"
		],
		"name": "DetailerForEachDebugPipe",
		"display_name": "DetailerDebug (SEGS/pipe)",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"DetailerForEachPipeForAnimateDiff": {
		"input": {
			"required": {
				"image_frames": [
					"IMAGE"
				],
				"segs": [
					"SEGS"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 384,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "bbox",
						"label_off": "crop_region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"refiner_ratio": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1
					}
				]
			},
			"optional": {
				"detailer_hook": [
					"DETAILER_HOOK"
				],
				"refiner_basic_pipe_opt": [
					"BASIC_PIPE"
				]
			}
		},
		"output": [
			"IMAGE",
			"SEGS",
			"BASIC_PIPE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false,
			false,
			true
		],
		"output_name": [
			"image",
			"segs",
			"basic_pipe",
			"cnet_images"
		],
		"name": "DetailerForEachPipeForAnimateDiff",
		"display_name": "Detailer For AnimateDiff (SEGS/pipe)",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"SAMDetectorCombined": {
		"input": {
			"required": {
				"sam_model": [
					"SAM_MODEL"
				],
				"segs": [
					"SEGS"
				],
				"image": [
					"IMAGE"
				],
				"detection_hint": [
					[
						"center-1",
						"horizontal-2",
						"vertical-2",
						"rect-4",
						"diamond-4",
						"mask-area",
						"mask-points",
						"mask-point-bbox",
						"none"
					]
				],
				"dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.93,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"bbox_expansion": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"mask_hint_threshold": [
					"FLOAT",
					{
						"default": 0.7,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"mask_hint_use_negative": [
					[
						"False",
						"Small",
						"Outter"
					]
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "SAMDetectorCombined",
		"display_name": "SAMDetector (combined)",
		"description": "",
		"category": "ImpactPack/Detector",
		"output_node": false
	},
	"SAMDetectorSegmented": {
		"input": {
			"required": {
				"sam_model": [
					"SAM_MODEL"
				],
				"segs": [
					"SEGS"
				],
				"image": [
					"IMAGE"
				],
				"detection_hint": [
					[
						"center-1",
						"horizontal-2",
						"vertical-2",
						"rect-4",
						"diamond-4",
						"mask-area",
						"mask-points",
						"mask-point-bbox",
						"none"
					]
				],
				"dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.93,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"bbox_expansion": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"mask_hint_threshold": [
					"FLOAT",
					{
						"default": 0.7,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"mask_hint_use_negative": [
					[
						"False",
						"Small",
						"Outter"
					]
				]
			}
		},
		"output": [
			"MASK",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"combined_mask",
			"batch_masks"
		],
		"name": "SAMDetectorSegmented",
		"display_name": "SAMDetector (segmented)",
		"description": "",
		"category": "ImpactPack/Detector",
		"output_node": false
	},
	"FaceDetailer": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 384,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "bbox",
						"label_off": "crop_region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"noise_mask": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"force_inpaint": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"bbox_threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"bbox_dilation": [
					"INT",
					{
						"default": 10,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"bbox_crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 10,
						"step": 0.1
					}
				],
				"sam_detection_hint": [
					[
						"center-1",
						"horizontal-2",
						"vertical-2",
						"rect-4",
						"diamond-4",
						"mask-area",
						"mask-points",
						"mask-point-bbox",
						"none"
					]
				],
				"sam_dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"sam_threshold": [
					"FLOAT",
					{
						"default": 0.93,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"sam_bbox_expansion": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"sam_mask_hint_threshold": [
					"FLOAT",
					{
						"default": 0.7,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"sam_mask_hint_use_negative": [
					[
						"False",
						"Small",
						"Outter"
					]
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 8192,
						"step": 1,
						"default": 10
					}
				],
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"cycle": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10,
						"step": 1
					}
				]
			},
			"optional": {
				"sam_model_opt": [
					"SAM_MODEL"
				],
				"segm_detector_opt": [
					"SEGM_DETECTOR"
				],
				"detailer_hook": [
					"DETAILER_HOOK"
				],
				"inpaint_model": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_mask_feather": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 100,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"IMAGE",
			"IMAGE",
			"MASK",
			"DETAILER_PIPE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			true,
			true,
			false,
			false,
			true
		],
		"output_name": [
			"image",
			"cropped_refined",
			"cropped_enhanced_alpha",
			"mask",
			"detailer_pipe",
			"cnet_images"
		],
		"name": "FaceDetailer",
		"display_name": "FaceDetailer",
		"description": "",
		"category": "ImpactPack/Simple",
		"output_node": false
	},
	"FaceDetailerPipe": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"detailer_pipe": [
					"DETAILER_PIPE"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 384,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "bbox",
						"label_off": "crop_region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"noise_mask": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"force_inpaint": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"bbox_threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"bbox_dilation": [
					"INT",
					{
						"default": 10,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"bbox_crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 10,
						"step": 0.1
					}
				],
				"sam_detection_hint": [
					[
						"center-1",
						"horizontal-2",
						"vertical-2",
						"rect-4",
						"diamond-4",
						"mask-area",
						"mask-points",
						"mask-point-bbox",
						"none"
					]
				],
				"sam_dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"sam_threshold": [
					"FLOAT",
					{
						"default": 0.93,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"sam_bbox_expansion": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"sam_mask_hint_threshold": [
					"FLOAT",
					{
						"default": 0.7,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"sam_mask_hint_use_negative": [
					[
						"False",
						"Small",
						"Outter"
					]
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 8192,
						"step": 1,
						"default": 10
					}
				],
				"refiner_ratio": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1
					}
				],
				"cycle": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10,
						"step": 1
					}
				]
			},
			"optional": {
				"inpaint_model": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_mask_feather": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 100,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"IMAGE",
			"IMAGE",
			"MASK",
			"DETAILER_PIPE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			true,
			true,
			false,
			false,
			true
		],
		"output_name": [
			"image",
			"cropped_refined",
			"cropped_enhanced_alpha",
			"mask",
			"detailer_pipe",
			"cnet_images"
		],
		"name": "FaceDetailerPipe",
		"display_name": "FaceDetailer (pipe)",
		"description": "",
		"category": "ImpactPack/Simple",
		"output_node": false
	},
	"MaskDetailerPipe": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				],
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 384,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "mask bbox",
						"label_off": "crop region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 1024,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"mask_mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "masked only",
						"label_off": "whole"
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 10,
						"step": 0.1
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 8192,
						"step": 1,
						"default": 10
					}
				],
				"refiner_ratio": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 100
					}
				],
				"cycle": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10,
						"step": 1
					}
				]
			},
			"optional": {
				"refiner_basic_pipe_opt": [
					"BASIC_PIPE"
				],
				"detailer_hook": [
					"DETAILER_HOOK"
				],
				"inpaint_model": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_mask_feather": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 100,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"IMAGE",
			"IMAGE",
			"BASIC_PIPE",
			"BASIC_PIPE"
		],
		"output_is_list": [
			false,
			true,
			true,
			false,
			false
		],
		"output_name": [
			"image",
			"cropped_refined",
			"cropped_enhanced_alpha",
			"basic_pipe",
			"refiner_basic_pipe_opt"
		],
		"name": "MaskDetailerPipe",
		"display_name": "MaskDetailer (pipe)",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"ToDetailerPipe": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"Select to add LoRA": [
					[
						"Select the LoRA to add to the text",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"Select to add Wildcard": [
					[
						"Select the Wildcard to add to the text"
					]
				]
			},
			"optional": {
				"sam_model_opt": [
					"SAM_MODEL"
				],
				"segm_detector_opt": [
					"SEGM_DETECTOR"
				],
				"detailer_hook": [
					"DETAILER_HOOK"
				]
			}
		},
		"output": [
			"DETAILER_PIPE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"detailer_pipe"
		],
		"name": "ToDetailerPipe",
		"display_name": "ToDetailerPipe",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"ToDetailerPipeSDXL": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"refiner_model": [
					"MODEL"
				],
				"refiner_clip": [
					"CLIP"
				],
				"refiner_positive": [
					"CONDITIONING"
				],
				"refiner_negative": [
					"CONDITIONING"
				],
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"Select to add LoRA": [
					[
						"Select the LoRA to add to the text",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"Select to add Wildcard": [
					[
						"Select the Wildcard to add to the text"
					]
				]
			},
			"optional": {
				"sam_model_opt": [
					"SAM_MODEL"
				],
				"segm_detector_opt": [
					"SEGM_DETECTOR"
				],
				"detailer_hook": [
					"DETAILER_HOOK"
				]
			}
		},
		"output": [
			"DETAILER_PIPE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"detailer_pipe"
		],
		"name": "ToDetailerPipeSDXL",
		"display_name": "ToDetailerPipeSDXL",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"FromDetailerPipe": {
		"input": {
			"required": {
				"detailer_pipe": [
					"DETAILER_PIPE"
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP",
			"VAE",
			"CONDITIONING",
			"CONDITIONING",
			"BBOX_DETECTOR",
			"SAM_MODEL",
			"SEGM_DETECTOR",
			"DETAILER_HOOK"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"model",
			"clip",
			"vae",
			"positive",
			"negative",
			"bbox_detector",
			"sam_model_opt",
			"segm_detector_opt",
			"detailer_hook"
		],
		"name": "FromDetailerPipe",
		"display_name": "FromDetailerPipe",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"FromDetailerPipe_v2": {
		"input": {
			"required": {
				"detailer_pipe": [
					"DETAILER_PIPE"
				]
			}
		},
		"output": [
			"DETAILER_PIPE",
			"MODEL",
			"CLIP",
			"VAE",
			"CONDITIONING",
			"CONDITIONING",
			"BBOX_DETECTOR",
			"SAM_MODEL",
			"SEGM_DETECTOR",
			"DETAILER_HOOK"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"detailer_pipe",
			"model",
			"clip",
			"vae",
			"positive",
			"negative",
			"bbox_detector",
			"sam_model_opt",
			"segm_detector_opt",
			"detailer_hook"
		],
		"name": "FromDetailerPipe_v2",
		"display_name": "FromDetailerPipe_v2",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"FromDetailerPipeSDXL": {
		"input": {
			"required": {
				"detailer_pipe": [
					"DETAILER_PIPE"
				]
			}
		},
		"output": [
			"DETAILER_PIPE",
			"MODEL",
			"CLIP",
			"VAE",
			"CONDITIONING",
			"CONDITIONING",
			"BBOX_DETECTOR",
			"SAM_MODEL",
			"SEGM_DETECTOR",
			"DETAILER_HOOK",
			"MODEL",
			"CLIP",
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"detailer_pipe",
			"model",
			"clip",
			"vae",
			"positive",
			"negative",
			"bbox_detector",
			"sam_model_opt",
			"segm_detector_opt",
			"detailer_hook",
			"refiner_model",
			"refiner_clip",
			"refiner_positive",
			"refiner_negative"
		],
		"name": "FromDetailerPipeSDXL",
		"display_name": "FromDetailer (SDXL/pipe)",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"ToBasicPipe": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"BASIC_PIPE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"basic_pipe"
		],
		"name": "ToBasicPipe",
		"display_name": "ToBasicPipe",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"FromBasicPipe": {
		"input": {
			"required": {
				"basic_pipe": [
					"BASIC_PIPE"
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP",
			"VAE",
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"model",
			"clip",
			"vae",
			"positive",
			"negative"
		],
		"name": "FromBasicPipe",
		"display_name": "FromBasicPipe",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"FromBasicPipe_v2": {
		"input": {
			"required": {
				"basic_pipe": [
					"BASIC_PIPE"
				]
			}
		},
		"output": [
			"BASIC_PIPE",
			"MODEL",
			"CLIP",
			"VAE",
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"basic_pipe",
			"model",
			"clip",
			"vae",
			"positive",
			"negative"
		],
		"name": "FromBasicPipe_v2",
		"display_name": "FromBasicPipe_v2",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"BasicPipeToDetailerPipe": {
		"input": {
			"required": {
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"Select to add LoRA": [
					[
						"Select the LoRA to add to the text",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"Select to add Wildcard": [
					[
						"Select the Wildcard to add to the text"
					]
				]
			},
			"optional": {
				"sam_model_opt": [
					"SAM_MODEL"
				],
				"segm_detector_opt": [
					"SEGM_DETECTOR"
				],
				"detailer_hook": [
					"DETAILER_HOOK"
				]
			}
		},
		"output": [
			"DETAILER_PIPE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"detailer_pipe"
		],
		"name": "BasicPipeToDetailerPipe",
		"display_name": "BasicPipe -> DetailerPipe",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"BasicPipeToDetailerPipeSDXL": {
		"input": {
			"required": {
				"base_basic_pipe": [
					"BASIC_PIPE"
				],
				"refiner_basic_pipe": [
					"BASIC_PIPE"
				],
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"Select to add LoRA": [
					[
						"Select the LoRA to add to the text",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"Select to add Wildcard": [
					[
						"Select the Wildcard to add to the text"
					]
				]
			},
			"optional": {
				"sam_model_opt": [
					"SAM_MODEL"
				],
				"segm_detector_opt": [
					"SEGM_DETECTOR"
				],
				"detailer_hook": [
					"DETAILER_HOOK"
				]
			}
		},
		"output": [
			"DETAILER_PIPE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"detailer_pipe"
		],
		"name": "BasicPipeToDetailerPipeSDXL",
		"display_name": "BasicPipe -> DetailerPipe (SDXL)",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"DetailerPipeToBasicPipe": {
		"input": {
			"required": {
				"detailer_pipe": [
					"DETAILER_PIPE"
				]
			}
		},
		"output": [
			"BASIC_PIPE",
			"BASIC_PIPE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"base_basic_pipe",
			"refiner_basic_pipe"
		],
		"name": "DetailerPipeToBasicPipe",
		"display_name": "DetailerPipe -> BasicPipe",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"EditBasicPipe": {
		"input": {
			"required": {
				"basic_pipe": [
					"BASIC_PIPE"
				]
			},
			"optional": {
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"BASIC_PIPE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"basic_pipe"
		],
		"name": "EditBasicPipe",
		"display_name": "Edit BasicPipe",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"EditDetailerPipe": {
		"input": {
			"required": {
				"detailer_pipe": [
					"DETAILER_PIPE"
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"Select to add LoRA": [
					[
						"Select the LoRA to add to the text",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"Select to add Wildcard": [
					[
						"Select the Wildcard to add to the text"
					]
				]
			},
			"optional": {
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"sam_model": [
					"SAM_MODEL"
				],
				"segm_detector": [
					"SEGM_DETECTOR"
				],
				"detailer_hook": [
					"DETAILER_HOOK"
				]
			}
		},
		"output": [
			"DETAILER_PIPE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"detailer_pipe"
		],
		"name": "EditDetailerPipe",
		"display_name": "Edit DetailerPipe",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"EditDetailerPipeSDXL": {
		"input": {
			"required": {
				"detailer_pipe": [
					"DETAILER_PIPE"
				],
				"wildcard": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"Select to add LoRA": [
					[
						"Select the LoRA to add to the text",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"Select to add Wildcard": [
					[
						"Select the Wildcard to add to the text"
					]
				]
			},
			"optional": {
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"refiner_model": [
					"MODEL"
				],
				"refiner_clip": [
					"CLIP"
				],
				"refiner_positive": [
					"CONDITIONING"
				],
				"refiner_negative": [
					"CONDITIONING"
				],
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"sam_model": [
					"SAM_MODEL"
				],
				"segm_detector": [
					"SEGM_DETECTOR"
				],
				"detailer_hook": [
					"DETAILER_HOOK"
				]
			}
		},
		"output": [
			"DETAILER_PIPE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"detailer_pipe"
		],
		"name": "EditDetailerPipeSDXL",
		"display_name": "Edit DetailerPipe (SDXL)",
		"description": "",
		"category": "ImpactPack/Pipe",
		"output_node": false
	},
	"LatentPixelScale": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"scale_method": [
					[
						"nearest-exact",
						"bilinear",
						"lanczos",
						"area"
					]
				],
				"scale_factor": [
					"FLOAT",
					{
						"default": 1.5,
						"min": 0.1,
						"max": 10000,
						"step": 0.1
					}
				],
				"vae": [
					"VAE"
				],
				"use_tiled_vae": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				]
			},
			"optional": {
				"upscale_model_opt": [
					"UPSCALE_MODEL"
				]
			}
		},
		"output": [
			"LATENT",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"LATENT",
			"IMAGE"
		],
		"name": "LatentPixelScale",
		"display_name": "Latent Scale (on Pixel Space)",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"PixelKSampleUpscalerProvider": {
		"input": {
			"required": {
				"scale_method": [
					[
						"nearest-exact",
						"bilinear",
						"lanczos",
						"area"
					]
				],
				"model": [
					"MODEL"
				],
				"vae": [
					"VAE"
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"use_tiled_vae": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"tile_size": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 4096,
						"step": 64
					}
				]
			},
			"optional": {
				"upscale_model_opt": [
					"UPSCALE_MODEL"
				],
				"pk_hook_opt": [
					"PK_HOOK"
				]
			}
		},
		"output": [
			"UPSCALER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"UPSCALER"
		],
		"name": "PixelKSampleUpscalerProvider",
		"display_name": "PixelKSampleUpscalerProvider",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"PixelKSampleUpscalerProviderPipe": {
		"input": {
			"required": {
				"scale_method": [
					[
						"nearest-exact",
						"bilinear",
						"lanczos",
						"area"
					]
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"use_tiled_vae": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"tile_size": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 4096,
						"step": 64
					}
				]
			},
			"optional": {
				"upscale_model_opt": [
					"UPSCALE_MODEL"
				],
				"pk_hook_opt": [
					"PK_HOOK"
				]
			}
		},
		"output": [
			"UPSCALER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"UPSCALER"
		],
		"name": "PixelKSampleUpscalerProviderPipe",
		"display_name": "PixelKSampleUpscalerProviderPipe",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"IterativeLatentUpscale": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"upscale_factor": [
					"FLOAT",
					{
						"default": 1.5,
						"min": 1,
						"max": 10000,
						"step": 0.1
					}
				],
				"steps": [
					"INT",
					{
						"default": 3,
						"min": 1,
						"max": 10000,
						"step": 1
					}
				],
				"temp_prefix": [
					"STRING",
					{
						"default": ""
					}
				],
				"upscaler": [
					"UPSCALER"
				],
				"step_mode": [
					[
						"simple",
						"geometric"
					],
					{
						"default": "simple"
					}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"LATENT",
			"VAE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"latent",
			"vae"
		],
		"name": "IterativeLatentUpscale",
		"display_name": "Iterative Upscale (Latent/on Pixel Space)",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"IterativeImageUpscale": {
		"input": {
			"required": {
				"pixels": [
					"IMAGE"
				],
				"upscale_factor": [
					"FLOAT",
					{
						"default": 1.5,
						"min": 1,
						"max": 10000,
						"step": 0.1
					}
				],
				"steps": [
					"INT",
					{
						"default": 3,
						"min": 1,
						"max": 10000,
						"step": 1
					}
				],
				"temp_prefix": [
					"STRING",
					{
						"default": ""
					}
				],
				"upscaler": [
					"UPSCALER"
				],
				"vae": [
					"VAE"
				],
				"step_mode": [
					[
						"simple",
						"geometric"
					],
					{
						"default": "simple"
					}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"image"
		],
		"name": "IterativeImageUpscale",
		"display_name": "Iterative Upscale (Image)",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"PixelTiledKSampleUpscalerProvider": {
		"input": {
			"required": {
				"scale_method": [
					[
						"nearest-exact",
						"bilinear",
						"lanczos",
						"area"
					]
				],
				"model": [
					"MODEL"
				],
				"vae": [
					"VAE"
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"tile_width": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 8192,
						"step": 64
					}
				],
				"tile_height": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 8192,
						"step": 64
					}
				],
				"tiling_strategy": [
					[
						"random",
						"padded",
						"simple"
					]
				]
			},
			"optional": {
				"upscale_model_opt": [
					"UPSCALE_MODEL"
				],
				"pk_hook_opt": [
					"PK_HOOK"
				]
			}
		},
		"output": [
			"UPSCALER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"UPSCALER"
		],
		"name": "PixelTiledKSampleUpscalerProvider",
		"display_name": "PixelTiledKSampleUpscalerProvider",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"PixelTiledKSampleUpscalerProviderPipe": {
		"input": {
			"required": {
				"scale_method": [
					[
						"nearest-exact",
						"bilinear",
						"lanczos",
						"area"
					]
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"tile_width": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 8192,
						"step": 64
					}
				],
				"tile_height": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 8192,
						"step": 64
					}
				],
				"tiling_strategy": [
					[
						"random",
						"padded",
						"simple"
					]
				],
				"basic_pipe": [
					"BASIC_PIPE"
				]
			},
			"optional": {
				"upscale_model_opt": [
					"UPSCALE_MODEL"
				],
				"pk_hook_opt": [
					"PK_HOOK"
				]
			}
		},
		"output": [
			"UPSCALER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"UPSCALER"
		],
		"name": "PixelTiledKSampleUpscalerProviderPipe",
		"display_name": "PixelTiledKSampleUpscalerProviderPipe",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"TwoSamplersForMaskUpscalerProvider": {
		"input": {
			"required": {
				"scale_method": [
					[
						"nearest-exact",
						"bilinear",
						"lanczos",
						"area"
					]
				],
				"full_sample_schedule": [
					[
						"none",
						"interleave1",
						"interleave2",
						"interleave3",
						"last1",
						"last2",
						"interleave1+last1",
						"interleave2+last1",
						"interleave3+last1"
					]
				],
				"use_tiled_vae": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"base_sampler": [
					"KSAMPLER"
				],
				"mask_sampler": [
					"KSAMPLER"
				],
				"mask": [
					"MASK"
				],
				"vae": [
					"VAE"
				],
				"tile_size": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 4096,
						"step": 64
					}
				]
			},
			"optional": {
				"full_sampler_opt": [
					"KSAMPLER"
				],
				"upscale_model_opt": [
					"UPSCALE_MODEL"
				],
				"pk_hook_base_opt": [
					"PK_HOOK"
				],
				"pk_hook_mask_opt": [
					"PK_HOOK"
				],
				"pk_hook_full_opt": [
					"PK_HOOK"
				]
			}
		},
		"output": [
			"UPSCALER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"UPSCALER"
		],
		"name": "TwoSamplersForMaskUpscalerProvider",
		"display_name": "TwoSamplersForMask Upscaler Provider",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"TwoSamplersForMaskUpscalerProviderPipe": {
		"input": {
			"required": {
				"scale_method": [
					[
						"nearest-exact",
						"bilinear",
						"lanczos",
						"area"
					]
				],
				"full_sample_schedule": [
					[
						"none",
						"interleave1",
						"interleave2",
						"interleave3",
						"last1",
						"last2",
						"interleave1+last1",
						"interleave2+last1",
						"interleave3+last1"
					]
				],
				"use_tiled_vae": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"base_sampler": [
					"KSAMPLER"
				],
				"mask_sampler": [
					"KSAMPLER"
				],
				"mask": [
					"MASK"
				],
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"tile_size": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 4096,
						"step": 64
					}
				]
			},
			"optional": {
				"full_sampler_opt": [
					"KSAMPLER"
				],
				"upscale_model_opt": [
					"UPSCALE_MODEL"
				],
				"pk_hook_base_opt": [
					"PK_HOOK"
				],
				"pk_hook_mask_opt": [
					"PK_HOOK"
				],
				"pk_hook_full_opt": [
					"PK_HOOK"
				]
			}
		},
		"output": [
			"UPSCALER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"UPSCALER"
		],
		"name": "TwoSamplersForMaskUpscalerProviderPipe",
		"display_name": "TwoSamplersForMask Upscaler Provider (pipe)",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"PixelKSampleHookCombine": {
		"input": {
			"required": {
				"hook1": [
					"PK_HOOK"
				],
				"hook2": [
					"PK_HOOK"
				]
			}
		},
		"output": [
			"PK_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"PK_HOOK"
		],
		"name": "PixelKSampleHookCombine",
		"display_name": "PixelKSampleHookCombine",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"DenoiseScheduleHookProvider": {
		"input": {
			"required": {
				"schedule_for_iteration": [
					[
						"simple"
					]
				],
				"target_denoise": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"PK_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"PK_HOOK"
		],
		"name": "DenoiseScheduleHookProvider",
		"display_name": "DenoiseScheduleHookProvider",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"StepsScheduleHookProvider": {
		"input": {
			"required": {
				"schedule_for_iteration": [
					[
						"simple"
					]
				],
				"target_steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				]
			}
		},
		"output": [
			"PK_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"PK_HOOK"
		],
		"name": "StepsScheduleHookProvider",
		"display_name": "StepsScheduleHookProvider",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"CfgScheduleHookProvider": {
		"input": {
			"required": {
				"schedule_for_iteration": [
					[
						"simple"
					]
				],
				"target_cfg": [
					"FLOAT",
					{
						"default": 3,
						"min": 0,
						"max": 100
					}
				]
			}
		},
		"output": [
			"PK_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"PK_HOOK"
		],
		"name": "CfgScheduleHookProvider",
		"display_name": "CfgScheduleHookProvider",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"NoiseInjectionHookProvider": {
		"input": {
			"required": {
				"schedule_for_iteration": [
					[
						"simple"
					]
				],
				"source": [
					[
						"CPU",
						"GPU"
					]
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"start_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 200,
						"step": 0.01
					}
				],
				"end_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 200,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"PK_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"PK_HOOK"
		],
		"name": "NoiseInjectionHookProvider",
		"display_name": "NoiseInjectionHookProvider",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"UnsamplerHookProvider": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"steps": [
					"INT",
					{
						"default": 25,
						"min": 1,
						"max": 10000
					}
				],
				"start_end_at_step": [
					"INT",
					{
						"default": 21,
						"min": 0,
						"max": 10000
					}
				],
				"end_end_at_step": [
					"INT",
					{
						"default": 24,
						"min": 0,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"normalize": [
					[
						"disable",
						"enable"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"schedule_for_iteration": [
					[
						"simple"
					]
				]
			}
		},
		"output": [
			"PK_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"PK_HOOK"
		],
		"name": "UnsamplerHookProvider",
		"display_name": "UnsamplerHookProvider",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"CoreMLDetailerHookProvider": {
		"input": {
			"required": {
				"mode": [
					[
						"512x512",
						"768x768",
						"512x768",
						"768x512"
					]
				]
			}
		},
		"output": [
			"DETAILER_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"DETAILER_HOOK"
		],
		"name": "CoreMLDetailerHookProvider",
		"display_name": "CoreMLDetailerHookProvider",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"PreviewDetailerHookProvider": {
		"input": {
			"required": {
				"quality": [
					"INT",
					{
						"default": 95,
						"min": 20,
						"max": 100
					}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"DETAILER_HOOK",
			"UPSCALER_HOOK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"DETAILER_HOOK",
			"UPSCALER_HOOK"
		],
		"name": "PreviewDetailerHookProvider",
		"display_name": "PreviewDetailerHookProvider",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"DetailerHookCombine": {
		"input": {
			"required": {
				"hook1": [
					"DETAILER_HOOK"
				],
				"hook2": [
					"DETAILER_HOOK"
				]
			}
		},
		"output": [
			"DETAILER_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"DETAILER_HOOK"
		],
		"name": "DetailerHookCombine",
		"display_name": "DetailerHookCombine",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"NoiseInjectionDetailerHookProvider": {
		"input": {
			"required": {
				"schedule_for_cycle": [
					[
						"skip_start",
						"from_start"
					]
				],
				"source": [
					[
						"CPU",
						"GPU"
					]
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"start_strength": [
					"FLOAT",
					{
						"default": 2,
						"min": 0,
						"max": 200,
						"step": 0.01
					}
				],
				"end_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 200,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"DETAILER_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"DETAILER_HOOK"
		],
		"name": "NoiseInjectionDetailerHookProvider",
		"display_name": "NoiseInjectionDetailerHookProvider",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"UnsamplerDetailerHookProvider": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"steps": [
					"INT",
					{
						"default": 25,
						"min": 1,
						"max": 10000
					}
				],
				"start_end_at_step": [
					"INT",
					{
						"default": 21,
						"min": 0,
						"max": 10000
					}
				],
				"end_end_at_step": [
					"INT",
					{
						"default": 24,
						"min": 0,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"normalize": [
					[
						"disable",
						"enable"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"schedule_for_cycle": [
					[
						"skip_start",
						"from_start"
					]
				]
			}
		},
		"output": [
			"DETAILER_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"DETAILER_HOOK"
		],
		"name": "UnsamplerDetailerHookProvider",
		"display_name": "UnsamplerDetailerHookProvider",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"DenoiseSchedulerDetailerHookProvider": {
		"input": {
			"required": {
				"schedule_for_cycle": [
					[
						"simple"
					]
				],
				"target_denoise": [
					"FLOAT",
					{
						"default": 0.3,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"DETAILER_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"DETAILER_HOOK"
		],
		"name": "DenoiseSchedulerDetailerHookProvider",
		"display_name": "DenoiseSchedulerDetailerHookProvider",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"SEGSOrderedFilterDetailerHookProvider": {
		"input": {
			"required": {
				"target": [
					[
						"area(=w*h)",
						"width",
						"height",
						"x1",
						"y1",
						"x2",
						"y2"
					]
				],
				"order": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "descending",
						"label_off": "ascending"
					}
				],
				"take_start": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"take_count": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				]
			}
		},
		"output": [
			"DETAILER_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"DETAILER_HOOK"
		],
		"name": "SEGSOrderedFilterDetailerHookProvider",
		"display_name": "SEGSOrderedFilterDetailerHookProvider",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"SEGSRangeFilterDetailerHookProvider": {
		"input": {
			"required": {
				"target": [
					[
						"area(=w*h)",
						"width",
						"height",
						"x1",
						"y1",
						"x2",
						"y2",
						"length_percent"
					]
				],
				"mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "inside",
						"label_off": "outside"
					}
				],
				"min_value": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"max_value": [
					"INT",
					{
						"default": 67108864,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				]
			}
		},
		"output": [
			"DETAILER_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"DETAILER_HOOK"
		],
		"name": "SEGSRangeFilterDetailerHookProvider",
		"display_name": "SEGSRangeFilterDetailerHookProvider",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"SEGSLabelFilterDetailerHookProvider": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"preset": [
					[
						"all",
						"hand",
						"face",
						"mouth",
						"eyes",
						"eyebrows",
						"pupils",
						"left_eyebrow",
						"left_eye",
						"left_pupil",
						"right_eyebrow",
						"right_eye",
						"right_pupil",
						"short_sleeved_shirt",
						"long_sleeved_shirt",
						"short_sleeved_outwear",
						"long_sleeved_outwear",
						"vest",
						"sling",
						"shorts",
						"trousers",
						"skirt",
						"short_sleeved_dress",
						"long_sleeved_dress",
						"vest_dress",
						"sling_dress",
						"person",
						"bicycle",
						"car",
						"motorcycle",
						"airplane",
						"bus",
						"train",
						"truck",
						"boat",
						"traffic light",
						"fire hydrant",
						"stop sign",
						"parking meter",
						"bench",
						"bird",
						"cat",
						"dog",
						"horse",
						"sheep",
						"cow",
						"elephant",
						"bear",
						"zebra",
						"giraffe",
						"backpack",
						"umbrella",
						"handbag",
						"tie",
						"suitcase",
						"frisbee",
						"skis",
						"snowboard",
						"sports ball",
						"kite",
						"baseball bat",
						"baseball glove",
						"skateboard",
						"surfboard",
						"tennis racket",
						"bottle",
						"wine glass",
						"cup",
						"fork",
						"knife",
						"spoon",
						"bowl",
						"banana",
						"apple",
						"sandwich",
						"orange",
						"broccoli",
						"carrot",
						"hot dog",
						"pizza",
						"donut",
						"cake",
						"chair",
						"couch",
						"potted plant",
						"bed",
						"dining table",
						"toilet",
						"tv",
						"laptop",
						"mouse",
						"remote",
						"keyboard",
						"cell phone",
						"microwave",
						"oven",
						"toaster",
						"sink",
						"refrigerator",
						"book",
						"clock",
						"vase",
						"scissors",
						"teddy bear",
						"hair drier",
						"toothbrush"
					]
				],
				"labels": [
					"STRING",
					{
						"multiline": true,
						"placeholder": "List the types of segments to be allowed, separated by commas"
					}
				]
			}
		},
		"output": [
			"DETAILER_HOOK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"DETAILER_HOOK"
		],
		"name": "SEGSLabelFilterDetailerHookProvider",
		"display_name": "SEGSLabelFilterDetailerHookProvider",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"BitwiseAndMask": {
		"input": {
			"required": {
				"mask1": [
					"MASK"
				],
				"mask2": [
					"MASK"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "BitwiseAndMask",
		"display_name": "Bitwise(MASK & MASK)",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"SubtractMask": {
		"input": {
			"required": {
				"mask1": [
					"MASK"
				],
				"mask2": [
					"MASK"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "SubtractMask",
		"display_name": "Bitwise(MASK - MASK)",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"AddMask": {
		"input": {
			"required": {
				"mask1": [
					"MASK"
				],
				"mask2": [
					"MASK"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "AddMask",
		"display_name": "Bitwise(MASK + MASK)",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"ImpactSegsAndMask": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactSegsAndMask",
		"display_name": "Bitwise(SEGS & MASK)",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"ImpactSegsAndMaskForEach": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"masks": [
					"MASK"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactSegsAndMaskForEach",
		"display_name": "Bitwise(SEGS & MASKS ForEach)",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"EmptySegs": {
		"input": {
			"required": {}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "EmptySegs",
		"display_name": "EmptySegs",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"MediaPipeFaceMeshToSEGS": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 100,
						"step": 0.1
					}
				],
				"bbox_fill": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"crop_min_size": [
					"INT",
					{
						"min": 10,
						"max": 16384,
						"step": 1,
						"default": 50
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 16384,
						"step": 1,
						"default": 1
					}
				],
				"dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"face": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "Enabled",
						"label_off": "Disabled"
					}
				],
				"mouth": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "Enabled",
						"label_off": "Disabled"
					}
				],
				"left_eyebrow": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "Enabled",
						"label_off": "Disabled"
					}
				],
				"left_eye": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "Enabled",
						"label_off": "Disabled"
					}
				],
				"left_pupil": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "Enabled",
						"label_off": "Disabled"
					}
				],
				"right_eyebrow": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "Enabled",
						"label_off": "Disabled"
					}
				],
				"right_eye": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "Enabled",
						"label_off": "Disabled"
					}
				],
				"right_pupil": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "Enabled",
						"label_off": "Disabled"
					}
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "MediaPipeFaceMeshToSEGS",
		"display_name": "MediaPipe FaceMesh to SEGS",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"MaskToSEGS": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"combined": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "True",
						"label_off": "False"
					}
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 100,
						"step": 0.1
					}
				],
				"bbox_fill": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 16384,
						"step": 1,
						"default": 10
					}
				],
				"contour_fill": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "MaskToSEGS",
		"display_name": "MASK to SEGS",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"MaskToSEGS_for_AnimateDiff": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"combined": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "True",
						"label_off": "False"
					}
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 100,
						"step": 0.1
					}
				],
				"bbox_fill": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 16384,
						"step": 1,
						"default": 10
					}
				],
				"contour_fill": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "MaskToSEGS_for_AnimateDiff",
		"display_name": "MASK to SEGS for AnimateDiff",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"ToBinaryMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"threshold": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 255
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "ToBinaryMask",
		"display_name": "ToBinaryMask",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"MasksToMaskList": {
		"input": {
			"required": {
				"masks": [
					"MASK"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"MASK"
		],
		"name": "MasksToMaskList",
		"display_name": "Masks to Mask List",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"MaskListToMaskBatch": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "MaskListToMaskBatch",
		"display_name": "Mask List to Masks",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"ImageListToImageBatch": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageListToImageBatch",
		"display_name": "Image List to Image Batch",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"SetDefaultImageForSEGS": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"image": [
					"IMAGE"
				],
				"override": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "SetDefaultImageForSEGS",
		"display_name": "Set Default Image for SEGS",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"RemoveImageFromSEGS": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "RemoveImageFromSEGS",
		"display_name": "Remove Image from SEGS",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"BboxDetectorSEGS": {
		"input": {
			"required": {
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"image": [
					"IMAGE"
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"dilation": [
					"INT",
					{
						"default": 10,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 100,
						"step": 0.1
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 8192,
						"step": 1,
						"default": 10
					}
				],
				"labels": [
					"STRING",
					{
						"multiline": true,
						"default": "all",
						"placeholder": "List the types of segments to be allowed, separated by commas"
					}
				]
			},
			"optional": {
				"detailer_hook": [
					"DETAILER_HOOK"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "BboxDetectorSEGS",
		"display_name": "BBOX Detector (SEGS)",
		"description": "",
		"category": "ImpactPack/Detector",
		"output_node": false
	},
	"SegmDetectorSEGS": {
		"input": {
			"required": {
				"segm_detector": [
					"SEGM_DETECTOR"
				],
				"image": [
					"IMAGE"
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"dilation": [
					"INT",
					{
						"default": 10,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 100,
						"step": 0.1
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 8192,
						"step": 1,
						"default": 10
					}
				],
				"labels": [
					"STRING",
					{
						"multiline": true,
						"default": "all",
						"placeholder": "List the types of segments to be allowed, separated by commas"
					}
				]
			},
			"optional": {
				"detailer_hook": [
					"DETAILER_HOOK"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "SegmDetectorSEGS",
		"display_name": "SEGM Detector (SEGS)",
		"description": "",
		"category": "ImpactPack/Detector",
		"output_node": false
	},
	"ONNXDetectorSEGS": {
		"input": {
			"required": {
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"image": [
					"IMAGE"
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"dilation": [
					"INT",
					{
						"default": 10,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 100,
						"step": 0.1
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 8192,
						"step": 1,
						"default": 10
					}
				],
				"labels": [
					"STRING",
					{
						"multiline": true,
						"default": "all",
						"placeholder": "List the types of segments to be allowed, separated by commas"
					}
				]
			},
			"optional": {
				"detailer_hook": [
					"DETAILER_HOOK"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ONNXDetectorSEGS",
		"display_name": "ONNX Detector (SEGS/legacy) - use BBOXDetector",
		"description": "",
		"category": "ImpactPack/Detector",
		"output_node": false
	},
	"ImpactSimpleDetectorSEGS_for_AD": {
		"input": {
			"required": {
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"image_frames": [
					"IMAGE"
				],
				"bbox_threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"bbox_dilation": [
					"INT",
					{
						"default": 0,
						"min": -255,
						"max": 255,
						"step": 1
					}
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 100,
						"step": 0.1
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 8192,
						"step": 1,
						"default": 10
					}
				],
				"sub_threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"sub_dilation": [
					"INT",
					{
						"default": 0,
						"min": -255,
						"max": 255,
						"step": 1
					}
				],
				"sub_bbox_expansion": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"sam_mask_hint_threshold": [
					"FLOAT",
					{
						"default": 0.7,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			},
			"optional": {
				"masking_mode": [
					[
						"Pivot SEGS",
						"Combine neighboring frames",
						"Don't combine"
					]
				],
				"segs_pivot": [
					[
						"Combined mask",
						"1st frame mask"
					]
				],
				"sam_model_opt": [
					"SAM_MODEL"
				],
				"segm_detector_opt": [
					"SEGM_DETECTOR"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactSimpleDetectorSEGS_for_AD",
		"display_name": "Simple Detector for AnimateDiff (SEGS)",
		"description": "",
		"category": "ImpactPack/Detector",
		"output_node": false
	},
	"ImpactSimpleDetectorSEGS": {
		"input": {
			"required": {
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"image": [
					"IMAGE"
				],
				"bbox_threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"bbox_dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 100,
						"step": 0.1
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 8192,
						"step": 1,
						"default": 10
					}
				],
				"sub_threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"sub_dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"sub_bbox_expansion": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"sam_mask_hint_threshold": [
					"FLOAT",
					{
						"default": 0.7,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			},
			"optional": {
				"post_dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"sam_model_opt": [
					"SAM_MODEL"
				],
				"segm_detector_opt": [
					"SEGM_DETECTOR"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactSimpleDetectorSEGS",
		"display_name": "Simple Detector (SEGS)",
		"description": "",
		"category": "ImpactPack/Detector",
		"output_node": false
	},
	"ImpactSimpleDetectorSEGSPipe": {
		"input": {
			"required": {
				"detailer_pipe": [
					"DETAILER_PIPE"
				],
				"image": [
					"IMAGE"
				],
				"bbox_threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"bbox_dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 100,
						"step": 0.1
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 8192,
						"step": 1,
						"default": 10
					}
				],
				"sub_threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"sub_dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"sub_bbox_expansion": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1000,
						"step": 1
					}
				],
				"sam_mask_hint_threshold": [
					"FLOAT",
					{
						"default": 0.7,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			},
			"optional": {
				"post_dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactSimpleDetectorSEGSPipe",
		"display_name": "Simple Detector (SEGS/pipe)",
		"description": "",
		"category": "ImpactPack/Detector",
		"output_node": false
	},
	"ImpactControlNetApplySEGS": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"control_net": [
					"CONTROL_NET"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			},
			"optional": {
				"segs_preprocessor": [
					"SEGS_PREPROCESSOR"
				],
				"control_image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactControlNetApplySEGS",
		"display_name": "ControlNetApply (SEGS)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactControlNetApplyAdvancedSEGS": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"control_net": [
					"CONTROL_NET"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"start_percent": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_percent": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			},
			"optional": {
				"segs_preprocessor": [
					"SEGS_PREPROCESSOR"
				],
				"control_image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactControlNetApplyAdvancedSEGS",
		"display_name": "ControlNetApplyAdvanced (SEGS)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactControlNetClearSEGS": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactControlNetClearSEGS",
		"display_name": "ImpactControlNetClearSEGS",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactIPAdapterApplySEGS": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"ipadapter_pipe": [
					"IPADAPTER_PIPE"
				],
				"weight": [
					"FLOAT",
					{
						"default": 0.7,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"noise": [
					"FLOAT",
					{
						"default": 0.4,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"weight_type": [
					[
						"original",
						"linear",
						"channel penalty"
					],
					{
						"default": "channel penalty"
					}
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 0.9,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"unfold_batch": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"faceid_v2": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"weight_v2": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"context_crop_factor": [
					"FLOAT",
					{
						"default": 1.2,
						"min": 1,
						"max": 100,
						"step": 0.1
					}
				],
				"reference_image": [
					"IMAGE"
				]
			},
			"optional": {
				"combine_embeds": [
					[
						"concat",
						"add",
						"subtract",
						"average",
						"norm average"
					]
				],
				"neg_image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactIPAdapterApplySEGS",
		"display_name": "IPAdapterApply (SEGS)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactDecomposeSEGS": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				]
			}
		},
		"output": [
			"SEGS_HEADER",
			"SEG_ELT"
		],
		"output_is_list": [
			false,
			true
		],
		"output_name": [
			"SEGS_HEADER",
			"SEG_ELT"
		],
		"name": "ImpactDecomposeSEGS",
		"display_name": "Decompose (SEGS)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactAssembleSEGS": {
		"input": {
			"required": {
				"seg_header": [
					"SEGS_HEADER"
				],
				"seg_elt": [
					"SEG_ELT"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactAssembleSEGS",
		"display_name": "Assemble (SEGS)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactFrom_SEG_ELT": {
		"input": {
			"required": {
				"seg_elt": [
					"SEG_ELT"
				]
			}
		},
		"output": [
			"SEG_ELT",
			"IMAGE",
			"MASK",
			"SEG_ELT_crop_region",
			"SEG_ELT_bbox",
			"SEG_ELT_control_net_wrapper",
			"FLOAT",
			"STRING"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"seg_elt",
			"cropped_image",
			"cropped_mask",
			"crop_region",
			"bbox",
			"control_net_wrapper",
			"confidence",
			"label"
		],
		"name": "ImpactFrom_SEG_ELT",
		"display_name": "From SEG_ELT",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactEdit_SEG_ELT": {
		"input": {
			"required": {
				"seg_elt": [
					"SEG_ELT"
				]
			},
			"optional": {
				"cropped_image_opt": [
					"IMAGE"
				],
				"cropped_mask_opt": [
					"MASK"
				],
				"crop_region_opt": [
					"SEG_ELT_crop_region"
				],
				"bbox_opt": [
					"SEG_ELT_bbox"
				],
				"control_net_wrapper_opt": [
					"SEG_ELT_control_net_wrapper"
				],
				"confidence_opt": [
					"FLOAT",
					{
						"min": 0,
						"max": 1,
						"step": 0.1,
						"forceInput": true
					}
				],
				"label_opt": [
					"STRING",
					{
						"multiline": false,
						"forceInput": true
					}
				]
			}
		},
		"output": [
			"SEG_ELT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEG_ELT"
		],
		"name": "ImpactEdit_SEG_ELT",
		"display_name": "Edit SEG_ELT",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactDilate_Mask_SEG_ELT": {
		"input": {
			"required": {
				"seg_elt": [
					"SEG_ELT"
				],
				"dilation": [
					"INT",
					{
						"default": 10,
						"min": -512,
						"max": 512,
						"step": 1
					}
				]
			}
		},
		"output": [
			"SEG_ELT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEG_ELT"
		],
		"name": "ImpactDilate_Mask_SEG_ELT",
		"display_name": "Dilate Mask (SEG_ELT)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactDilateMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"dilation": [
					"INT",
					{
						"default": 10,
						"min": -512,
						"max": 512,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "ImpactDilateMask",
		"display_name": "Dilate Mask",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactGaussianBlurMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"kernel_size": [
					"INT",
					{
						"default": 10,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"sigma": [
					"FLOAT",
					{
						"default": 10,
						"min": 0.1,
						"max": 100,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "ImpactGaussianBlurMask",
		"display_name": "Gaussian Blur Mask",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactDilateMaskInSEGS": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"dilation": [
					"INT",
					{
						"default": 10,
						"min": -512,
						"max": 512,
						"step": 1
					}
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactDilateMaskInSEGS",
		"display_name": "Dilate Mask (SEGS)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactGaussianBlurMaskInSEGS": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"kernel_size": [
					"INT",
					{
						"default": 10,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"sigma": [
					"FLOAT",
					{
						"default": 10,
						"min": 0.1,
						"max": 100,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactGaussianBlurMaskInSEGS",
		"display_name": "Gaussian Blur Mask (SEGS)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactScaleBy_BBOX_SEG_ELT": {
		"input": {
			"required": {
				"seg": [
					"SEG_ELT"
				],
				"scale_by": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.01,
						"max": 8,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"SEG_ELT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEG_ELT"
		],
		"name": "ImpactScaleBy_BBOX_SEG_ELT",
		"display_name": "ScaleBy BBOX (SEG_ELT)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactFrom_SEG_ELT_bbox": {
		"input": {
			"required": {
				"bbox": [
					"SEG_ELT_bbox"
				]
			}
		},
		"output": [
			"INT",
			"INT",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"left",
			"top",
			"right",
			"bottom"
		],
		"name": "ImpactFrom_SEG_ELT_bbox",
		"display_name": "From SEG_ELT bbox",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactFrom_SEG_ELT_crop_region": {
		"input": {
			"required": {
				"crop_region": [
					"SEG_ELT_crop_region"
				]
			}
		},
		"output": [
			"INT",
			"INT",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"left",
			"top",
			"right",
			"bottom"
		],
		"name": "ImpactFrom_SEG_ELT_crop_region",
		"display_name": "From SEG_ELT crop_region",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"BboxDetectorCombined_v2": {
		"input": {
			"required": {
				"bbox_detector": [
					"BBOX_DETECTOR"
				],
				"image": [
					"IMAGE"
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"dilation": [
					"INT",
					{
						"default": 4,
						"min": -512,
						"max": 512,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "BboxDetectorCombined_v2",
		"display_name": "BBOX Detector (combined)",
		"description": "",
		"category": "ImpactPack/Detector",
		"output_node": false
	},
	"SegmDetectorCombined_v2": {
		"input": {
			"required": {
				"segm_detector": [
					"SEGM_DETECTOR"
				],
				"image": [
					"IMAGE"
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"dilation": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "SegmDetectorCombined_v2",
		"display_name": "SEGM Detector (combined)",
		"description": "",
		"category": "ImpactPack/Detector",
		"output_node": false
	},
	"SegsToCombinedMask": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "SegsToCombinedMask",
		"display_name": "SEGS to MASK (combined)",
		"description": "",
		"category": "ImpactPack/Operation",
		"output_node": false
	},
	"KSamplerProvider": {
		"input": {
			"required": {
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"basic_pipe": [
					"BASIC_PIPE"
				]
			}
		},
		"output": [
			"KSAMPLER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"KSAMPLER"
		],
		"name": "KSamplerProvider",
		"display_name": "KSamplerProvider",
		"description": "",
		"category": "ImpactPack/Sampler",
		"output_node": false
	},
	"TwoSamplersForMask": {
		"input": {
			"required": {
				"latent_image": [
					"LATENT"
				],
				"base_sampler": [
					"KSAMPLER"
				],
				"mask_sampler": [
					"KSAMPLER"
				],
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "TwoSamplersForMask",
		"display_name": "TwoSamplersForMask",
		"description": "",
		"category": "ImpactPack/Sampler",
		"output_node": false
	},
	"TiledKSamplerProvider": {
		"input": {
			"required": {
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"tile_width": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 16384,
						"step": 64
					}
				],
				"tile_height": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 16384,
						"step": 64
					}
				],
				"tiling_strategy": [
					[
						"random",
						"padded",
						"simple"
					]
				],
				"basic_pipe": [
					"BASIC_PIPE"
				]
			}
		},
		"output": [
			"KSAMPLER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"KSAMPLER"
		],
		"name": "TiledKSamplerProvider",
		"display_name": "TiledKSamplerProvider",
		"description": "",
		"category": "ImpactPack/Sampler",
		"output_node": false
	},
	"KSamplerAdvancedProvider": {
		"input": {
			"required": {
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"sigma_factor": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"basic_pipe": [
					"BASIC_PIPE"
				]
			},
			"optional": {
				"sampler_opt": [
					"SAMPLER"
				]
			}
		},
		"output": [
			"KSAMPLER_ADVANCED"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"KSAMPLER_ADVANCED"
		],
		"name": "KSamplerAdvancedProvider",
		"display_name": "KSamplerAdvancedProvider",
		"description": "",
		"category": "ImpactPack/Sampler",
		"output_node": false
	},
	"TwoAdvancedSamplersForMask": {
		"input": {
			"required": {
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"samples": [
					"LATENT"
				],
				"base_sampler": [
					"KSAMPLER_ADVANCED"
				],
				"mask_sampler": [
					"KSAMPLER_ADVANCED"
				],
				"mask": [
					"MASK"
				],
				"overlap_factor": [
					"INT",
					{
						"default": 10,
						"min": 0,
						"max": 10000
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "TwoAdvancedSamplersForMask",
		"display_name": "TwoAdvancedSamplersForMask",
		"description": "",
		"category": "ImpactPack/Sampler",
		"output_node": false
	},
	"PreviewBridge": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"image": [
					"STRING",
					{
						"default": ""
					}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "PreviewBridge",
		"display_name": "Preview Bridge (Image)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": true
	},
	"PreviewBridgeLatent": {
		"input": {
			"required": {
				"latent": [
					"LATENT"
				],
				"image": [
					"STRING",
					{
						"default": ""
					}
				],
				"preview_method": [
					[
						"Latent2RGB-SDXL",
						"Latent2RGB-SD15",
						"TAESDXL",
						"TAESD15"
					]
				]
			},
			"optional": {
				"vae_opt": [
					"VAE"
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"LATENT",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"LATENT",
			"MASK"
		],
		"name": "PreviewBridgeLatent",
		"display_name": "Preview Bridge (Latent)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": true
	},
	"ImageSender": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "ImgSender"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "ImageSender",
		"display_name": "Image Sender",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": true
	},
	"ImageReceiver": {
		"input": {
			"required": {
				"image": [
					[
						"00000-2427730660.png",
						"00006-2966685768 (1).png",
						"00006-2966685768.png",
						"00023-3076193459.png",
						"00066-4225385850.png",
						"00138-648843619.png",
						"1 (1).webp",
						"1.webp",
						"15.png",
						"3.webp",
						"309219693-e7e2d80e-ffbe-4724-812a-5139a88027e3.png",
						"322326752-b89a2151-df43-4137-a297-deb70fbda27c.png",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe (1).jpg",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe (2).jpg",
						"329565424-b2b6fad2-3042-4df8-bc4d-4408a625d0fe.jpg",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (1).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (2).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2 (3).png",
						"329863292-e01cd66a-c4a4-41cd-972f-8806cce383d2.png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269 (1).png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269 (2).png",
						"329863297-1e8d67a9-dddb-47b2-89db-bf800298b269.png",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (1).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (2).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (3).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (4).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238 (5).jpeg",
						"35877b78-8568-4242-8d87-9c9f3f69c238.jpeg",
						"360_F_244328590_RiyvTqK8DUKDX6GSHj3JVMjiuJnwhu0y.jpg",
						"4.jpg",
						"4.webp",
						"5.webp",
						"5b57323c40b09034008b45e7.webp",
						"8 (1).webp",
						"8.webp",
						"GNb-BZSbwAAHX4z.jpg",
						"IMG_1354.JPG",
						"IMG_1563.png",
						"Image_20230919232822.jpg",
						"RGBMask (1).png",
						"RGBMask.png",
						"blended.png",
						"chair.png",
						"demo2.png",
						"dog (1).png",
						"dog (2).png",
						"dog.png",
						"dog512.png",
						"example.png",
						"i3 (1).png",
						"i3.png",
						"iris.png",
						"mask.png",
						"old_man.png",
						"pngtree-science-and-technology-space-station-light-effect-background-image_2049440.jpg",
						"s-l1200 (1).jpg",
						"s-l1200.jpg",
						"tong(1) (1).png",
						"tong(1).png",
						"unnamed.jpg"
					]
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"save_to_workflow": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"image_data": [
					"STRING",
					{
						"multiline": false
					}
				],
				"trigger_always": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enable",
						"label_off": "disable"
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "ImageReceiver",
		"display_name": "Image Receiver",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"LatentSender": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "latents/LatentSender"
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"preview_method": [
					[
						"Latent2RGB-SDXL",
						"Latent2RGB-SD15",
						"TAESDXL",
						"TAESD15"
					]
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "LatentSender",
		"display_name": "LatentSender",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": true
	},
	"LatentReceiver": {
		"input": {
			"required": {
				"latent": [
					[]
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"trigger_always": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enable",
						"label_off": "disable"
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "LatentReceiver",
		"display_name": "LatentReceiver",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImageMaskSwitch": {
		"input": {
			"required": {
				"select": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4,
						"step": 1
					}
				],
				"images1": [
					"IMAGE"
				]
			},
			"optional": {
				"mask1_opt": [
					"MASK"
				],
				"images2_opt": [
					"IMAGE"
				],
				"mask2_opt": [
					"MASK"
				],
				"images3_opt": [
					"IMAGE"
				],
				"mask3_opt": [
					"MASK"
				],
				"images4_opt": [
					"IMAGE"
				],
				"mask4_opt": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "ImageMaskSwitch",
		"display_name": "Switch (images, mask)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": true
	},
	"LatentSwitch": {
		"input": {
			"required": {
				"select": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 999999,
						"step": 1
					}
				],
				"sel_mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "select_on_prompt",
						"label_off": "select_on_execution",
						"forceInput": false
					}
				]
			},
			"optional": {
				"input1": [
					"*"
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [
			"*",
			"STRING",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"selected_value",
			"selected_label",
			"selected_index"
		],
		"name": "LatentSwitch",
		"display_name": "Switch (latent/legacy)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"SEGSSwitch": {
		"input": {
			"required": {
				"select": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 999999,
						"step": 1
					}
				],
				"sel_mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "select_on_prompt",
						"label_off": "select_on_execution",
						"forceInput": false
					}
				]
			},
			"optional": {
				"input1": [
					"*"
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [
			"*",
			"STRING",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"selected_value",
			"selected_label",
			"selected_index"
		],
		"name": "SEGSSwitch",
		"display_name": "Switch (SEGS/legacy)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactSwitch": {
		"input": {
			"required": {
				"select": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 999999,
						"step": 1
					}
				],
				"sel_mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "select_on_prompt",
						"label_off": "select_on_execution",
						"forceInput": false
					}
				]
			},
			"optional": {
				"input1": [
					"*"
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [
			"*",
			"STRING",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"selected_value",
			"selected_label",
			"selected_index"
		],
		"name": "ImpactSwitch",
		"display_name": "Switch (Any)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactInversedSwitch": {
		"input": {
			"required": {
				"select": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 999999,
						"step": 1
					}
				],
				"input": [
					"*"
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"*"
		],
		"name": "ImpactInversedSwitch",
		"display_name": "Inversed Switch (Any)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactWildcardProcessor": {
		"input": {
			"required": {
				"wildcard_text": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"populated_text": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "Populate",
						"label_off": "Fixed"
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"Select to add Wildcard": [
					[
						"Select the Wildcard to add to the text"
					]
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "ImpactWildcardProcessor",
		"display_name": "ImpactWildcardProcessor",
		"description": "",
		"category": "ImpactPack/Prompt",
		"output_node": false
	},
	"ImpactWildcardEncode": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"wildcard_text": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"populated_text": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false
					}
				],
				"mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "Populate",
						"label_off": "Fixed"
					}
				],
				"Select to add LoRA": [
					[
						"Select the LoRA to add to the text",
						"Anya01V20.safetensors",
						"BloodlineLong-07.safetensors",
						"BloodlineLong-08.safetensors",
						"BloodlineLong-09.safetensors",
						"BloodlineLong-10.safetensors",
						"BloodlineLong-11.safetensors",
						"BloodlineLong-12.safetensors",
						"ConceptBetterCenterOpening_v1.safetensors",
						"ConceptDeliveryInBox_deliveryv106.safetensors",
						"CrotchlessPantsV1A10.safetensors",
						"Ink scenery.safetensors",
						"Kit_YGO.safetensors",
						"LogoRedmondV2-Logo-LogoRedmAF.safetensors",
						"LuotianyiKoushiki_v1.safetensors",
						"Neurosama.safetensors",
						"NippleLinkedPiercing_30.safetensors",
						"OppaiChallengeV1.safetensors",
						"Pussy_Spread_v01.safetensors",
						"Saya-removing bra.safetensors",
						"Saya-spread pussy(fingers).safetensors",
						"SiriusBlackBikiniV1.safetensors",
						"Stardust_v20.safetensors",
						"SubmissivePoseV2-000008.safetensors",
						"V11ForegroundPlant_V11.safetensors",
						"VsingerTianyi_tianyi.safetensors",
						"animeTarotCardArtStyleLora_v31 (1).safetensors",
						"animeoutlineV4_16.safetensors",
						"atdanStyleLora_lk.safetensors",
						"bl3uprint.safetensors",
						"bondageSuspension_v11.safetensors",
						"breastCurtains_v10.safetensors",
						"chilloutmixss_xss10.safetensors",
						"conceptNippleTagAnd_v10.safetensors",
						"covering_breasts_v0.1.safetensors",
						"cuteDollGen2_beta1.safetensors",
						"cuteGirlMix4_v10.safetensors",
						"darkMagicianGirlLora_1.safetensors",
						"dilationTapeLora-05.safetensors",
						"dungeon_v2.0.safetensors",
						"elegantHanfuRuqun_v10.safetensors",
						"femaleMasturbation_v1.safetensors",
						"finenude_v0_2a.safetensors",
						"foldedPose_v1.safetensors",
						"funtoys_v1.safetensors",
						"gachaSplashLORA_gachaSplash30.safetensors",
						"gachaSplashLORA_gachaSplashFarShot.safetensors",
						"grabbingOwnAss_v1Pruned.safetensors",
						"handpull-12.safetensors",
						"infirmary_v0.1.safetensors",
						"innievag.safetensors",
						"ip-adapter-faceid-plus_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sd15_lora.safetensors",
						"ip-adapter-faceid-plusv2_sdxl_lora.safetensors",
						"ip-adapter-faceid_sd15_lora.safetensors",
						"ip-adapter-faceid_sdxl_lora.safetensors",
						"japaneseDollLikeness_v10.safetensors",
						"kitchen_apron.safetensors",
						"koreandolllikenessV20_v20.safetensors",
						"lactation_v11.safetensors",
						"laundryDragonmaidLoraYuGi_v01.safetensors",
						"lcm-lora-sdv1-5.safetensors",
						"lcm-lora-sdxl.safetensors",
						"lcm_lora_sd15.safetensors",
						"lcm_lora_sdxl.safetensors",
						"lessUnderwear_v10.safetensors",
						"less_clothesConv2D2.5e-5_BF16.safetensors",
						"liloi.safetensors",
						"mLegsPoseLora800_v10.safetensors",
						"maplestoryStyle_v30.safetensors",
						"misakaMikotoACertain_misakaV1.safetensors",
						"nipplePiercing_v20.safetensors",
						"nippleRibbon_3.safetensors",
						"npm-v11t-000005.safetensors",
						"objectMasturbation-v11.safetensors",
						"pose  pet play.safetensors",
						"pussy_juiceConv2D2.5e-5_BF16.safetensors",
						"realSpreadPussy_sppSpreadpussyWV1.safetensors",
						"restroom_v0.2a.safetensors",
						"reverseTranslucent_v10.safetensors",
						"russianDollLikeness_v3.safetensors",
						"sagiriIzumiEroManga_v10.safetensors",
						"shibari_V20.safetensors",
						"skyStrikerAceRayeYuGiOh_v1.safetensors",
						"split_lora32V1.safetensors",
						"spreadPussy_v11.safetensors",
						"ssssGRIDMANTakarada_trV1.safetensors",
						"synth3.safetensors",
						"thighvibe.safetensors",
						"toiletGirl.safetensors",
						"unalignedDocking-000040.safetensors",
						"vibrator_v10.safetensors",
						"virginDestroyer_v10.safetensors",
						"vision_pro_v2.safetensors",
						"vsingerYuezhengLing_v1.safetensors",
						"雪糕-xuegao4.0.safetensors"
					]
				],
				"Select to add Wildcard": [
					[
						"Select the Wildcard to add to the text"
					]
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				]
			}
		},
		"output": [
			"MODEL",
			"CLIP",
			"CONDITIONING",
			"STRING"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"model",
			"clip",
			"conditioning",
			"populated_text"
		],
		"name": "ImpactWildcardEncode",
		"display_name": "ImpactWildcardEncode",
		"description": "",
		"category": "ImpactPack/Prompt",
		"output_node": false
	},
	"SEGSUpscaler": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"segs": [
					"SEGS"
				],
				"model": [
					"MODEL"
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"rescale_factor": [
					"FLOAT",
					{
						"default": 2,
						"min": 0.01,
						"max": 100,
						"step": 0.01
					}
				],
				"resampling_method": [
					[
						"lanczos",
						"nearest",
						"bilinear",
						"bicubic"
					]
				],
				"supersample": [
					[
						"true",
						"false"
					]
				],
				"rounding_modulus": [
					"INT",
					{
						"default": 8,
						"min": 8,
						"max": 1024,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"inpaint_model": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_mask_feather": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 100,
						"step": 1
					}
				]
			},
			"optional": {
				"upscale_model_opt": [
					"UPSCALE_MODEL"
				],
				"upscaler_hook_opt": [
					"UPSCALER_HOOK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "SEGSUpscaler",
		"display_name": "Upscaler (SEGS)",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"SEGSUpscalerPipe": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"segs": [
					"SEGS"
				],
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"rescale_factor": [
					"FLOAT",
					{
						"default": 2,
						"min": 0.01,
						"max": 100,
						"step": 0.01
					}
				],
				"resampling_method": [
					[
						"lanczos",
						"nearest",
						"bilinear",
						"bicubic"
					]
				],
				"supersample": [
					[
						"true",
						"false"
					]
				],
				"rounding_modulus": [
					"INT",
					{
						"default": 8,
						"min": 8,
						"max": 1024,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"inpaint_model": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_mask_feather": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 100,
						"step": 1
					}
				]
			},
			"optional": {
				"upscale_model_opt": [
					"UPSCALE_MODEL"
				],
				"upscaler_hook_opt": [
					"UPSCALER_HOOK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "SEGSUpscalerPipe",
		"display_name": "Upscaler (SEGS/pipe)",
		"description": "",
		"category": "ImpactPack/Upscale",
		"output_node": false
	},
	"SEGSDetailer": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"segs": [
					"SEGS"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 256,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "bbox",
						"label_off": "crop_region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 768,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"noise_mask": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"force_inpaint": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"refiner_ratio": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 100
					}
				],
				"cycle": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10,
						"step": 1
					}
				]
			},
			"optional": {
				"refiner_basic_pipe_opt": [
					"BASIC_PIPE"
				],
				"inpaint_model": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_mask_feather": [
					"INT",
					{
						"default": 20,
						"min": 0,
						"max": 100,
						"step": 1
					}
				]
			}
		},
		"output": [
			"SEGS",
			"IMAGE"
		],
		"output_is_list": [
			false,
			true
		],
		"output_name": [
			"segs",
			"cnet_images"
		],
		"name": "SEGSDetailer",
		"display_name": "SEGSDetailer",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"SEGSPaste": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"segs": [
					"SEGS"
				],
				"feather": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"alpha": [
					"INT",
					{
						"default": 255,
						"min": 0,
						"max": 255,
						"step": 1
					}
				]
			},
			"optional": {
				"ref_image_opt": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "SEGSPaste",
		"display_name": "SEGSPaste",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"SEGSPreview": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"alpha_mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enable",
						"label_off": "disable"
					}
				],
				"min_alpha": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			},
			"optional": {
				"fallback_image_opt": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"IMAGE"
		],
		"name": "SEGSPreview",
		"display_name": "SEGSPreview",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": true
	},
	"SEGSPreviewCNet": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"IMAGE"
		],
		"name": "SEGSPreviewCNet",
		"display_name": "SEGSPreview (CNET Image)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": true
	},
	"SEGSToImageList": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				]
			},
			"optional": {
				"fallback_image_opt": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"IMAGE"
		],
		"name": "SEGSToImageList",
		"display_name": "SEGSToImageList",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactSEGSToMaskList": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"MASK"
		],
		"name": "ImpactSEGSToMaskList",
		"display_name": "SEGS to Mask List",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactSEGSToMaskBatch": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "ImpactSEGSToMaskBatch",
		"display_name": "SEGS to Mask Batch",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactSEGSConcat": {
		"input": {
			"required": {
				"segs1": [
					"SEGS"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactSEGSConcat",
		"display_name": "SEGS Concat",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactSEGSPicker": {
		"input": {
			"required": {
				"picks": [
					"STRING",
					{
						"multiline": true,
						"dynamicPrompts": false,
						"pysssss.autocomplete": false
					}
				],
				"segs": [
					"SEGS"
				]
			},
			"optional": {
				"fallback_image_opt": [
					"IMAGE"
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactSEGSPicker",
		"display_name": "Picker (SEGS)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": true
	},
	"ImpactMakeTileSEGS": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"bbox_size": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 4096,
						"step": 8
					}
				],
				"crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 10,
						"step": 0.1
					}
				],
				"min_overlap": [
					"INT",
					{
						"default": 5,
						"min": 0,
						"max": 512,
						"step": 1
					}
				],
				"filter_segs_dilation": [
					"INT",
					{
						"default": 20,
						"min": -255,
						"max": 255,
						"step": 1
					}
				],
				"mask_irregularity": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"irregular_mask_mode": [
					[
						"Reuse fast",
						"Reuse quality",
						"All random fast",
						"All random quality"
					]
				]
			},
			"optional": {
				"filter_in_segs_opt": [
					"SEGS"
				],
				"filter_out_segs_opt": [
					"SEGS"
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactMakeTileSEGS",
		"display_name": "Make Tile SEGS",
		"description": "",
		"category": "ImpactPack/__for_testing",
		"output_node": false
	},
	"SEGSDetailerForAnimateDiff": {
		"input": {
			"required": {
				"image_frames": [
					"IMAGE"
				],
				"segs": [
					"SEGS"
				],
				"guide_size": [
					"FLOAT",
					{
						"default": 256,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"guide_size_for": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "bbox",
						"label_off": "crop_region"
					}
				],
				"max_size": [
					"FLOAT",
					{
						"default": 768,
						"min": 64,
						"max": 16384,
						"step": 8
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.0001,
						"max": 1,
						"step": 0.01
					}
				],
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"refiner_ratio": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1
					}
				]
			},
			"optional": {
				"refiner_basic_pipe_opt": [
					"BASIC_PIPE"
				]
			}
		},
		"output": [
			"SEGS",
			"IMAGE"
		],
		"output_is_list": [
			false,
			true
		],
		"output_name": [
			"segs",
			"cnet_images"
		],
		"name": "SEGSDetailerForAnimateDiff",
		"display_name": "SEGSDetailer For AnimateDiff (SEGS/pipe)",
		"description": "",
		"category": "ImpactPack/Detailer",
		"output_node": false
	},
	"ImpactKSamplerBasicPipe": {
		"input": {
			"required": {
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"latent_image": [
					"LATENT"
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"BASIC_PIPE",
			"LATENT",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"BASIC_PIPE",
			"LATENT",
			"VAE"
		],
		"name": "ImpactKSamplerBasicPipe",
		"display_name": "KSampler (pipe)",
		"description": "",
		"category": "sampling",
		"output_node": false
	},
	"ImpactKSamplerAdvancedBasicPipe": {
		"input": {
			"required": {
				"basic_pipe": [
					"BASIC_PIPE"
				],
				"add_noise": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enable",
						"label_off": "disable"
					}
				],
				"noise_seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"latent_image": [
					"LATENT"
				],
				"start_at_step": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 10000
					}
				],
				"end_at_step": [
					"INT",
					{
						"default": 10000,
						"min": 0,
						"max": 10000
					}
				],
				"return_with_leftover_noise": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enable",
						"label_off": "disable"
					}
				]
			}
		},
		"output": [
			"BASIC_PIPE",
			"LATENT",
			"VAE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"BASIC_PIPE",
			"LATENT",
			"VAE"
		],
		"name": "ImpactKSamplerAdvancedBasicPipe",
		"display_name": "KSampler (Advanced/pipe)",
		"description": "",
		"category": "sampling",
		"output_node": false
	},
	"ReencodeLatent": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"tile_mode": [
					[
						"None",
						"Both",
						"Decode(input) only",
						"Encode(output) only"
					]
				],
				"input_vae": [
					"VAE"
				],
				"output_vae": [
					"VAE"
				],
				"tile_size": [
					"INT",
					{
						"default": 512,
						"min": 320,
						"max": 4096,
						"step": 64
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "ReencodeLatent",
		"display_name": "Reencode Latent",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ReencodeLatentPipe": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"tile_mode": [
					[
						"None",
						"Both",
						"Decode(input) only",
						"Encode(output) only"
					]
				],
				"input_basic_pipe": [
					"BASIC_PIPE"
				],
				"output_basic_pipe": [
					"BASIC_PIPE"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "ReencodeLatentPipe",
		"display_name": "Reencode Latent (pipe)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactImageBatchToImageList": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImpactImageBatchToImageList",
		"display_name": "Image batch to Image List",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactMakeImageList": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			true
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImpactMakeImageList",
		"display_name": "Make Image List",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactMakeImageBatch": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImpactMakeImageBatch",
		"display_name": "Make Image Batch",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"RegionalSampler": {
		"input": {
			"required": {
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"seed_2nd": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"seed_2nd_mode": [
					[
						"ignore",
						"fixed",
						"seed+seed_2nd",
						"seed-seed_2nd",
						"increment",
						"decrement",
						"randomize"
					]
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"base_only_steps": [
					"INT",
					{
						"default": 2,
						"min": 0,
						"max": 10000
					}
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"samples": [
					"LATENT"
				],
				"base_sampler": [
					"KSAMPLER_ADVANCED"
				],
				"regional_prompts": [
					"REGIONAL_PROMPTS"
				],
				"overlap_factor": [
					"INT",
					{
						"default": 10,
						"min": 0,
						"max": 10000
					}
				],
				"restore_latent": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"additional_mode": [
					[
						"DISABLE",
						"ratio additional",
						"ratio between"
					],
					{
						"default": "ratio between"
					}
				],
				"additional_sampler": [
					[
						"AUTO",
						"euler",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_fast",
						"dpmpp_2m",
						"ddpm"
					]
				],
				"additional_sigma_ratio": [
					"FLOAT",
					{
						"default": 0.3,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "RegionalSampler",
		"display_name": "RegionalSampler",
		"description": "",
		"category": "ImpactPack/Regional",
		"output_node": false
	},
	"RegionalSamplerAdvanced": {
		"input": {
			"required": {
				"add_noise": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"noise_seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"start_at_step": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 10000
					}
				],
				"end_at_step": [
					"INT",
					{
						"default": 10000,
						"min": 0,
						"max": 10000
					}
				],
				"overlap_factor": [
					"INT",
					{
						"default": 10,
						"min": 0,
						"max": 10000
					}
				],
				"restore_latent": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"return_with_leftover_noise": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"latent_image": [
					"LATENT"
				],
				"base_sampler": [
					"KSAMPLER_ADVANCED"
				],
				"regional_prompts": [
					"REGIONAL_PROMPTS"
				],
				"additional_mode": [
					[
						"DISABLE",
						"ratio additional",
						"ratio between"
					],
					{
						"default": "ratio between"
					}
				],
				"additional_sampler": [
					[
						"AUTO",
						"euler",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_fast",
						"dpmpp_2m",
						"ddpm"
					]
				],
				"additional_sigma_ratio": [
					"FLOAT",
					{
						"default": 0.3,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "RegionalSamplerAdvanced",
		"display_name": "RegionalSamplerAdvanced",
		"description": "",
		"category": "ImpactPack/Regional",
		"output_node": false
	},
	"CombineRegionalPrompts": {
		"input": {
			"required": {
				"regional_prompts1": [
					"REGIONAL_PROMPTS"
				]
			}
		},
		"output": [
			"REGIONAL_PROMPTS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"REGIONAL_PROMPTS"
		],
		"name": "CombineRegionalPrompts",
		"display_name": "CombineRegionalPrompts",
		"description": "",
		"category": "ImpactPack/Regional",
		"output_node": false
	},
	"RegionalPrompt": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"advanced_sampler": [
					"KSAMPLER_ADVANCED"
				]
			}
		},
		"output": [
			"REGIONAL_PROMPTS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"REGIONAL_PROMPTS"
		],
		"name": "RegionalPrompt",
		"display_name": "RegionalPrompt",
		"description": "",
		"category": "ImpactPack/Regional",
		"output_node": false
	},
	"ImpactCombineConditionings": {
		"input": {
			"required": {
				"conditioning1": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ImpactCombineConditionings",
		"display_name": "Combine Conditionings",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactConcatConditionings": {
		"input": {
			"required": {
				"conditioning1": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ImpactConcatConditionings",
		"display_name": "Concat Conditionings",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactSEGSLabelAssign": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"labels": [
					"STRING",
					{
						"multiline": true,
						"placeholder": "List the label to be assigned in order of segs, separated by commas"
					}
				]
			}
		},
		"output": [
			"SEGS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SEGS"
		],
		"name": "ImpactSEGSLabelAssign",
		"display_name": "SEGS Assign (label)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactSEGSLabelFilter": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"preset": [
					[
						"all",
						"hand",
						"face",
						"mouth",
						"eyes",
						"eyebrows",
						"pupils",
						"left_eyebrow",
						"left_eye",
						"left_pupil",
						"right_eyebrow",
						"right_eye",
						"right_pupil",
						"short_sleeved_shirt",
						"long_sleeved_shirt",
						"short_sleeved_outwear",
						"long_sleeved_outwear",
						"vest",
						"sling",
						"shorts",
						"trousers",
						"skirt",
						"short_sleeved_dress",
						"long_sleeved_dress",
						"vest_dress",
						"sling_dress",
						"person",
						"bicycle",
						"car",
						"motorcycle",
						"airplane",
						"bus",
						"train",
						"truck",
						"boat",
						"traffic light",
						"fire hydrant",
						"stop sign",
						"parking meter",
						"bench",
						"bird",
						"cat",
						"dog",
						"horse",
						"sheep",
						"cow",
						"elephant",
						"bear",
						"zebra",
						"giraffe",
						"backpack",
						"umbrella",
						"handbag",
						"tie",
						"suitcase",
						"frisbee",
						"skis",
						"snowboard",
						"sports ball",
						"kite",
						"baseball bat",
						"baseball glove",
						"skateboard",
						"surfboard",
						"tennis racket",
						"bottle",
						"wine glass",
						"cup",
						"fork",
						"knife",
						"spoon",
						"bowl",
						"banana",
						"apple",
						"sandwich",
						"orange",
						"broccoli",
						"carrot",
						"hot dog",
						"pizza",
						"donut",
						"cake",
						"chair",
						"couch",
						"potted plant",
						"bed",
						"dining table",
						"toilet",
						"tv",
						"laptop",
						"mouse",
						"remote",
						"keyboard",
						"cell phone",
						"microwave",
						"oven",
						"toaster",
						"sink",
						"refrigerator",
						"book",
						"clock",
						"vase",
						"scissors",
						"teddy bear",
						"hair drier",
						"toothbrush"
					]
				],
				"labels": [
					"STRING",
					{
						"multiline": true,
						"placeholder": "List the types of segments to be allowed, separated by commas"
					}
				]
			}
		},
		"output": [
			"SEGS",
			"SEGS"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"filtered_SEGS",
			"remained_SEGS"
		],
		"name": "ImpactSEGSLabelFilter",
		"display_name": "SEGS Filter (label)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactSEGSRangeFilter": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"target": [
					[
						"area(=w*h)",
						"width",
						"height",
						"x1",
						"y1",
						"x2",
						"y2",
						"length_percent"
					]
				],
				"mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "inside",
						"label_off": "outside"
					}
				],
				"min_value": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"max_value": [
					"INT",
					{
						"default": 67108864,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				]
			}
		},
		"output": [
			"SEGS",
			"SEGS"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"filtered_SEGS",
			"remained_SEGS"
		],
		"name": "ImpactSEGSRangeFilter",
		"display_name": "SEGS Filter (range)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactSEGSOrderedFilter": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				],
				"target": [
					[
						"area(=w*h)",
						"width",
						"height",
						"x1",
						"y1",
						"x2",
						"y2"
					]
				],
				"order": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "descending",
						"label_off": "ascending"
					}
				],
				"take_start": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				],
				"take_count": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				]
			}
		},
		"output": [
			"SEGS",
			"SEGS"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"filtered_SEGS",
			"remained_SEGS"
		],
		"name": "ImpactSEGSOrderedFilter",
		"display_name": "SEGS Filter (ordered)",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactCompare": {
		"input": {
			"required": {
				"cmp": [
					[
						"a = b",
						"a <> b",
						"a > b",
						"a < b",
						"a >= b",
						"a <= b",
						"tt",
						"ff"
					]
				],
				"a": [
					"*"
				],
				"b": [
					"*"
				]
			}
		},
		"output": [
			"BOOLEAN"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"BOOLEAN"
		],
		"name": "ImpactCompare",
		"display_name": "ImpactCompare",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactConditionalBranch": {
		"input": {
			"required": {
				"cond": [
					"BOOLEAN"
				],
				"tt_value": [
					"*"
				],
				"ff_value": [
					"*"
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"*"
		],
		"name": "ImpactConditionalBranch",
		"display_name": "ImpactConditionalBranch",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactConditionalBranchSelMode": {
		"input": {
			"required": {
				"cond": [
					"BOOLEAN"
				],
				"sel_mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "select_on_prompt",
						"label_off": "select_on_execution"
					}
				]
			},
			"optional": {
				"tt_value": [
					"*"
				],
				"ff_value": [
					"*"
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"*"
		],
		"name": "ImpactConditionalBranchSelMode",
		"display_name": "ImpactConditionalBranchSelMode",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactIfNone": {
		"input": {
			"required": {},
			"optional": {
				"signal": [
					"*"
				],
				"any_input": [
					"*"
				]
			}
		},
		"output": [
			"*",
			"BOOLEAN"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"signal_opt",
			"bool"
		],
		"name": "ImpactIfNone",
		"display_name": "ImpactIfNone",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactConvertDataType": {
		"input": {
			"required": {
				"value": [
					"*"
				]
			}
		},
		"output": [
			"STRING",
			"FLOAT",
			"INT",
			"BOOLEAN"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"STRING",
			"FLOAT",
			"INT",
			"BOOLEAN"
		],
		"name": "ImpactConvertDataType",
		"display_name": "ImpactConvertDataType",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactLogicalOperators": {
		"input": {
			"required": {
				"operator": [
					[
						"and",
						"or",
						"xor"
					]
				],
				"bool_a": [
					"BOOLEAN",
					{
						"forceInput": true
					}
				],
				"bool_b": [
					"BOOLEAN",
					{
						"forceInput": true
					}
				]
			}
		},
		"output": [
			"BOOLEAN"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"BOOLEAN"
		],
		"name": "ImpactLogicalOperators",
		"display_name": "ImpactLogicalOperators",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactInt": {
		"input": {
			"required": {
				"value": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"INT"
		],
		"name": "ImpactInt",
		"display_name": "ImpactInt",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactFloat": {
		"input": {
			"required": {
				"value": [
					"FLOAT",
					{
						"default": 1,
						"min": -3.402823466e+38,
						"max": 3.402823466e+38
					}
				]
			}
		},
		"output": [
			"FLOAT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"FLOAT"
		],
		"name": "ImpactFloat",
		"display_name": "ImpactFloat",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactValueSender": {
		"input": {
			"required": {
				"value": [
					"*"
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				]
			},
			"optional": {
				"signal_opt": [
					"*"
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"signal"
		],
		"name": "ImpactValueSender",
		"display_name": "ImpactValueSender",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": true
	},
	"ImpactValueReceiver": {
		"input": {
			"required": {
				"typ": [
					[
						"STRING",
						"INT",
						"FLOAT",
						"BOOLEAN"
					]
				],
				"value": [
					"STRING",
					{
						"default": ""
					}
				],
				"link_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9223372036854776000,
						"step": 1
					}
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"*"
		],
		"name": "ImpactValueReceiver",
		"display_name": "ImpactValueReceiver",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactImageInfo": {
		"input": {
			"required": {
				"value": [
					"IMAGE"
				]
			}
		},
		"output": [
			"INT",
			"INT",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"batch",
			"height",
			"width",
			"channel"
		],
		"name": "ImpactImageInfo",
		"display_name": "ImpactImageInfo",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": false
	},
	"ImpactLatentInfo": {
		"input": {
			"required": {
				"value": [
					"LATENT"
				]
			}
		},
		"output": [
			"INT",
			"INT",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"batch",
			"height",
			"width",
			"channel"
		],
		"name": "ImpactLatentInfo",
		"display_name": "ImpactLatentInfo",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": false
	},
	"ImpactMinMax": {
		"input": {
			"required": {
				"mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "max",
						"label_off": "min"
					}
				],
				"a": [
					"*"
				],
				"b": [
					"*"
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"INT"
		],
		"name": "ImpactMinMax",
		"display_name": "ImpactMinMax",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": false
	},
	"ImpactNeg": {
		"input": {
			"required": {
				"value": [
					"BOOLEAN",
					{
						"forceInput": true
					}
				]
			}
		},
		"output": [
			"BOOLEAN"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"BOOLEAN"
		],
		"name": "ImpactNeg",
		"display_name": "ImpactNeg",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactConditionalStopIteration": {
		"input": {
			"required": {
				"cond": [
					"BOOLEAN",
					{
						"forceInput": true
					}
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "ImpactConditionalStopIteration",
		"display_name": "ImpactConditionalStopIteration",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": true
	},
	"ImpactStringSelector": {
		"input": {
			"required": {
				"strings": [
					"STRING",
					{
						"multiline": true
					}
				],
				"multiline": [
					"BOOLEAN",
					{
						"default": false,
						"label_on": "enabled",
						"label_off": "disabled"
					}
				],
				"select": [
					"INT",
					{
						"min": 0,
						"max": 9223372036854776000,
						"step": 1,
						"default": 0
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "ImpactStringSelector",
		"display_name": "String Selector",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"RemoveNoiseMask": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "RemoveNoiseMask",
		"display_name": "Remove Noise Mask",
		"description": "",
		"category": "ImpactPack/Util",
		"output_node": false
	},
	"ImpactLogger": {
		"input": {
			"required": {
				"data": [
					"*",
					""
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "ImpactLogger",
		"display_name": "ImpactLogger",
		"description": "",
		"category": "ImpactPack/Debug",
		"output_node": true
	},
	"ImpactDummyInput": {
		"input": {
			"required": {}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"*"
		],
		"name": "ImpactDummyInput",
		"display_name": "ImpactDummyInput",
		"description": "",
		"category": "ImpactPack/Debug",
		"output_node": false
	},
	"ImpactQueueTrigger": {
		"input": {
			"required": {
				"signal": [
					"*"
				],
				"mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "Trigger",
						"label_off": "Don't trigger"
					}
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"signal_opt"
		],
		"name": "ImpactQueueTrigger",
		"display_name": "Queue Trigger",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": true
	},
	"ImpactQueueTriggerCountdown": {
		"input": {
			"required": {
				"count": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"total": [
					"INT",
					{
						"default": 10,
						"min": 1,
						"max": 18446744073709552000
					}
				],
				"mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "Trigger",
						"label_off": "Don't trigger"
					}
				]
			},
			"optional": {
				"signal": [
					"*"
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"*",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"signal_opt",
			"count",
			"total"
		],
		"name": "ImpactQueueTriggerCountdown",
		"display_name": "Queue Trigger (Countdown)",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": true
	},
	"ImpactSetWidgetValue": {
		"input": {
			"required": {
				"signal": [
					"*"
				],
				"node_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"widget_name": [
					"STRING",
					{
						"multiline": false
					}
				]
			},
			"optional": {
				"boolean_value": [
					"BOOLEAN",
					{
						"forceInput": true
					}
				],
				"int_value": [
					"INT",
					{
						"forceInput": true
					}
				],
				"float_value": [
					"FLOAT",
					{
						"forceInput": true
					}
				],
				"string_value": [
					"STRING",
					{
						"forceInput": true
					}
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"signal_opt"
		],
		"name": "ImpactSetWidgetValue",
		"display_name": "Set Widget Value",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": true
	},
	"ImpactNodeSetMuteState": {
		"input": {
			"required": {
				"signal": [
					"*"
				],
				"node_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"set_state": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "active",
						"label_off": "mute"
					}
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"signal_opt"
		],
		"name": "ImpactNodeSetMuteState",
		"display_name": "Set Mute State",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": true
	},
	"ImpactControlBridge": {
		"input": {
			"required": {
				"value": [
					"*"
				],
				"mode": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "Active",
						"label_off": "Mute/Bypass"
					}
				],
				"behavior": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "Mute",
						"label_off": "Bypass"
					}
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID",
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"value"
		],
		"name": "ImpactControlBridge",
		"display_name": "Control Bridge",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": true
	},
	"ImpactIsNotEmptySEGS": {
		"input": {
			"required": {
				"segs": [
					"SEGS"
				]
			}
		},
		"output": [
			"BOOLEAN"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"BOOLEAN"
		],
		"name": "ImpactIsNotEmptySEGS",
		"display_name": "SEGS isn't Empty",
		"description": "",
		"category": "ImpactPack/Logic",
		"output_node": false
	},
	"ImpactSleep": {
		"input": {
			"required": {
				"signal": [
					"*"
				],
				"seconds": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 3600
					}
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"signal_opt"
		],
		"name": "ImpactSleep",
		"display_name": "Sleep",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": true
	},
	"ImpactRemoteBoolean": {
		"input": {
			"required": {
				"node_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"widget_name": [
					"STRING",
					{
						"multiline": false
					}
				],
				"value": [
					"BOOLEAN",
					{
						"default": true,
						"label_on": "True",
						"label_off": "False"
					}
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "ImpactRemoteBoolean",
		"display_name": "Remote Boolean (on prompt)",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": true
	},
	"ImpactRemoteInt": {
		"input": {
			"required": {
				"node_id": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"widget_name": [
					"STRING",
					{
						"multiline": false
					}
				],
				"value": [
					"INT",
					{
						"default": 0,
						"min": -18446744073709552000,
						"max": 18446744073709552000
					}
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "ImpactRemoteInt",
		"display_name": "Remote Int (on prompt)",
		"description": "",
		"category": "ImpactPack/Logic/_for_test",
		"output_node": true
	},
	"ImpactHFTransformersClassifierProvider": {
		"input": {
			"required": {
				"preset_repo_id": [
					[
						"rizvandwiki/gender-classification-2",
						"NTQAI/pedestrian_gender_recognition",
						"Leilab/gender_class",
						"ProjectPersonal/GenderClassifier",
						"crangana/trained-gender",
						"cledoux42/GenderNew_v002",
						"ivensamdh/genderage2",
						"Manual repo id"
					]
				],
				"manual_repo_id": [
					"STRING",
					{
						"multiline": false
					}
				],
				"device_mode": [
					[
						"AUTO",
						"Prefer GPU",
						"CPU"
					]
				]
			}
		},
		"output": [
			"TRANSFORMERS_CLASSIFIER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"TRANSFORMERS_CLASSIFIER"
		],
		"name": "ImpactHFTransformersClassifierProvider",
		"display_name": "HF Transformers Classifier Provider",
		"description": "",
		"category": "ImpactPack/HuggingFace",
		"output_node": false
	},
	"ImpactSEGSClassify": {
		"input": {
			"required": {
				"classifier": [
					"TRANSFORMERS_CLASSIFIER"
				],
				"segs": [
					"SEGS"
				],
				"preset_expr": [
					[
						"#Female > #Male",
						"#Female < #Male",
						"female > 0.5",
						"male > 0.5",
						"Age16to25 > 0.1",
						"Age50to69 > 0.1",
						"Manual expr"
					]
				],
				"manual_expr": [
					"STRING",
					{
						"multiline": false
					}
				]
			},
			"optional": {
				"ref_image_opt": [
					"IMAGE"
				]
			}
		},
		"output": [
			"SEGS",
			"SEGS"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"filtered_SEGS",
			"remained_SEGS"
		],
		"name": "ImpactSEGSClassify",
		"display_name": "SEGS Classify",
		"description": "",
		"category": "ImpactPack/HuggingFace",
		"output_node": false
	},
	"UltralyticsDetectorProvider": {
		"input": {
			"required": {
				"model_name": [
					[
						"bbox/face_yolov8m.pt",
						"bbox/hand_yolov8s.pt",
						"segm/person_yolov8m-seg.pt"
					]
				]
			}
		},
		"output": [
			"BBOX_DETECTOR",
			"SEGM_DETECTOR"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"BBOX_DETECTOR",
			"SEGM_DETECTOR"
		],
		"name": "UltralyticsDetectorProvider",
		"display_name": "UltralyticsDetectorProvider",
		"description": "",
		"category": "ImpactPack",
		"output_node": false
	},
	"InsightFaceLoader_Zho": {
		"input": {
			"required": {
				"provider": [
					[
						"CUDA",
						"CPU"
					]
				]
			}
		},
		"output": [
			"INSIGHTFACEMODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"INSIGHTFACEMODEL"
		],
		"name": "InsightFaceLoader_Zho",
		"display_name": "📷InsightFace Loader",
		"description": "",
		"category": "📷InstantID",
		"output_node": false
	},
	"IDControlNetLoader": {
		"input": {
			"required": {
				"controlnet_path": [
					"STRING",
					{
						"default": "enter your path"
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"controlnet"
		],
		"name": "IDControlNetLoader",
		"display_name": "📷ID ControlNet Loader",
		"description": "",
		"category": "📷InstantID",
		"output_node": false
	},
	"IDBaseModelLoader_fromhub": {
		"input": {
			"required": {
				"base_model_path": [
					"STRING",
					{
						"default": "wangqixun/YamerMIX_v8"
					}
				],
				"controlnet": [
					"MODEL"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "IDBaseModelLoader_fromhub",
		"display_name": "📷ID Base Model Loader from hub 🤗",
		"description": "",
		"category": "📷InstantID",
		"output_node": false
	},
	"IDBaseModelLoader_local": {
		"input": {
			"required": {
				"ckpt_name": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				],
				"controlnet": [
					"MODEL"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"pipe"
		],
		"name": "IDBaseModelLoader_local",
		"display_name": "📷ID Base Model Loader locally",
		"description": "",
		"category": "📷InstantID",
		"output_node": false
	},
	"Ipadapter_instantidLoader": {
		"input": {
			"required": {
				"Ipadapter_instantid_path": [
					"STRING",
					{
						"default": "enter your path"
					}
				],
				"filename": [
					"STRING",
					{
						"default": "ip-adapter.bin"
					}
				],
				"pipe": [
					"MODEL"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "Ipadapter_instantidLoader",
		"display_name": "📷Ipadapter_instantid Loader",
		"description": "",
		"category": "📷InstantID",
		"output_node": false
	},
	"ID_Prompt_Styler": {
		"input": {
			"required": {
				"prompt": [
					"STRING",
					{
						"default": "a woman, retro futurism, retro game",
						"multiline": true
					}
				],
				"negative_prompt": [
					"STRING",
					{
						"default": "(lowres, low quality, worst quality:1.2), (text:1.2), watermark, painting, drawing, illustration, glitch, deformed, mutated, cross-eyed, ugly",
						"multiline": true
					}
				],
				"style_name": [
					[
						"(No style)",
						"Watercolor",
						"Film Noir",
						"Neon",
						"Jungle",
						"Mars",
						"Vibrant Color",
						"Snow",
						"Line art"
					],
					{
						"default": "Neon"
					}
				]
			}
		},
		"output": [
			"STRING",
			"STRING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"positive_prompt",
			"negative_prompt"
		],
		"name": "ID_Prompt_Styler",
		"display_name": "📷ID Prompt_Styler",
		"description": "",
		"category": "📷InstantID",
		"output_node": false
	},
	"IDGenerationNode": {
		"input": {
			"required": {
				"face_image": [
					"IMAGE"
				],
				"pipe": [
					"MODEL"
				],
				"insightface": [
					"INSIGHTFACEMODEL"
				],
				"positive": [
					"STRING",
					{
						"multiline": true,
						"forceInput": true
					}
				],
				"negative": [
					"STRING",
					{
						"multiline": true,
						"forceInput": true
					}
				],
				"ip_adapter_scale": [
					"FLOAT",
					{
						"default": 0.8,
						"min": 0,
						"max": 1,
						"display": "slider"
					}
				],
				"controlnet_conditioning_scale": [
					"FLOAT",
					{
						"default": 0.8,
						"min": 0,
						"max": 1,
						"display": "slider"
					}
				],
				"steps": [
					"INT",
					{
						"default": 50,
						"min": 1,
						"max": 100,
						"step": 1,
						"display": "slider"
					}
				],
				"guidance_scale": [
					"FLOAT",
					{
						"default": 5,
						"min": 0,
						"max": 10,
						"display": "slider"
					}
				],
				"enhance_face_region": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				]
			},
			"optional": {
				"pose_image_optional": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "IDGenerationNode",
		"display_name": "📷InstantID Generation",
		"description": "",
		"category": "📷InstantID",
		"output_node": false
	},
	"INTConstant": {
		"input": {
			"required": {
				"value": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"value"
		],
		"name": "INTConstant",
		"display_name": "INT Constant",
		"description": "",
		"category": "KJNodes/constants",
		"output_node": false
	},
	"FloatConstant": {
		"input": {
			"required": {
				"value": [
					"FLOAT",
					{
						"default": 0,
						"min": -18446744073709552000,
						"max": 18446744073709552000,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"FLOAT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"value"
		],
		"name": "FloatConstant",
		"display_name": "Float Constant",
		"description": "",
		"category": "KJNodes/constants",
		"output_node": false
	},
	"StringConstant": {
		"input": {
			"required": {
				"string": [
					"STRING",
					{
						"default": "",
						"multiline": false
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "StringConstant",
		"display_name": "StringConstant",
		"description": "",
		"category": "KJNodes/constants",
		"output_node": false
	},
	"StringConstantMultiline": {
		"input": {
			"required": {
				"string": [
					"STRING",
					{
						"default": "",
						"multiline": true
					}
				],
				"strip_newlines": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "StringConstantMultiline",
		"display_name": "StringConstantMultiline",
		"description": "",
		"category": "KJNodes/constants",
		"output_node": false
	},
	"ConditioningMultiCombine": {
		"input": {
			"required": {
				"inputcount": [
					"INT",
					{
						"default": 2,
						"min": 2,
						"max": 20,
						"step": 1
					}
				],
				"conditioning_1": [
					"CONDITIONING"
				],
				"conditioning_2": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"CONDITIONING",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"combined",
			"inputcount"
		],
		"name": "ConditioningMultiCombine",
		"display_name": "Conditioning Multi Combine",
		"description": "\nCombines multiple conditioning nodes into one\n",
		"category": "KJNodes/masking/conditioning",
		"output_node": false
	},
	"ConditioningSetMaskAndCombine": {
		"input": {
			"required": {
				"positive_1": [
					"CONDITIONING"
				],
				"negative_1": [
					"CONDITIONING"
				],
				"positive_2": [
					"CONDITIONING"
				],
				"negative_2": [
					"CONDITIONING"
				],
				"mask_1": [
					"MASK"
				],
				"mask_2": [
					"MASK"
				],
				"mask_1_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"mask_2_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"set_cond_area": [
					[
						"default",
						"mask bounds"
					]
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"combined_positive",
			"combined_negative"
		],
		"name": "ConditioningSetMaskAndCombine",
		"display_name": "ConditioningSetMaskAndCombine",
		"description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n",
		"category": "KJNodes/masking/conditioning",
		"output_node": false
	},
	"ConditioningSetMaskAndCombine3": {
		"input": {
			"required": {
				"positive_1": [
					"CONDITIONING"
				],
				"negative_1": [
					"CONDITIONING"
				],
				"positive_2": [
					"CONDITIONING"
				],
				"negative_2": [
					"CONDITIONING"
				],
				"positive_3": [
					"CONDITIONING"
				],
				"negative_3": [
					"CONDITIONING"
				],
				"mask_1": [
					"MASK"
				],
				"mask_2": [
					"MASK"
				],
				"mask_3": [
					"MASK"
				],
				"mask_1_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"mask_2_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"mask_3_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"set_cond_area": [
					[
						"default",
						"mask bounds"
					]
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"combined_positive",
			"combined_negative"
		],
		"name": "ConditioningSetMaskAndCombine3",
		"display_name": "ConditioningSetMaskAndCombine3",
		"description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n",
		"category": "KJNodes/masking/conditioning",
		"output_node": false
	},
	"ConditioningSetMaskAndCombine4": {
		"input": {
			"required": {
				"positive_1": [
					"CONDITIONING"
				],
				"negative_1": [
					"CONDITIONING"
				],
				"positive_2": [
					"CONDITIONING"
				],
				"negative_2": [
					"CONDITIONING"
				],
				"positive_3": [
					"CONDITIONING"
				],
				"negative_3": [
					"CONDITIONING"
				],
				"positive_4": [
					"CONDITIONING"
				],
				"negative_4": [
					"CONDITIONING"
				],
				"mask_1": [
					"MASK"
				],
				"mask_2": [
					"MASK"
				],
				"mask_3": [
					"MASK"
				],
				"mask_4": [
					"MASK"
				],
				"mask_1_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"mask_2_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"mask_3_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"mask_4_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"set_cond_area": [
					[
						"default",
						"mask bounds"
					]
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"combined_positive",
			"combined_negative"
		],
		"name": "ConditioningSetMaskAndCombine4",
		"display_name": "ConditioningSetMaskAndCombine4",
		"description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n",
		"category": "KJNodes/masking/conditioning",
		"output_node": false
	},
	"ConditioningSetMaskAndCombine5": {
		"input": {
			"required": {
				"positive_1": [
					"CONDITIONING"
				],
				"negative_1": [
					"CONDITIONING"
				],
				"positive_2": [
					"CONDITIONING"
				],
				"negative_2": [
					"CONDITIONING"
				],
				"positive_3": [
					"CONDITIONING"
				],
				"negative_3": [
					"CONDITIONING"
				],
				"positive_4": [
					"CONDITIONING"
				],
				"negative_4": [
					"CONDITIONING"
				],
				"positive_5": [
					"CONDITIONING"
				],
				"negative_5": [
					"CONDITIONING"
				],
				"mask_1": [
					"MASK"
				],
				"mask_2": [
					"MASK"
				],
				"mask_3": [
					"MASK"
				],
				"mask_4": [
					"MASK"
				],
				"mask_5": [
					"MASK"
				],
				"mask_1_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"mask_2_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"mask_3_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"mask_4_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"mask_5_strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"set_cond_area": [
					[
						"default",
						"mask bounds"
					]
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"combined_positive",
			"combined_negative"
		],
		"name": "ConditioningSetMaskAndCombine5",
		"display_name": "ConditioningSetMaskAndCombine5",
		"description": "\nBundles multiple conditioning mask and combine nodes into one,functionality is identical to ComfyUI native nodes\n",
		"category": "KJNodes/masking/conditioning",
		"output_node": false
	},
	"CondPassThrough": {
		"input": {
			"required": {
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"positive",
			"negative"
		],
		"name": "CondPassThrough",
		"display_name": "CondPassThrough",
		"description": "\n    Simply passes through the positive and negative conditioning,\n    workaround for Set node not allowing bypassed inputs.\n",
		"category": "KJNodes/misc",
		"output_node": false
	},
	"BatchCLIPSeg": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"text": [
					"STRING",
					{
						"multiline": false
					}
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"binary_mask": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"combine_mask": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"use_cuda": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"Mask"
		],
		"name": "BatchCLIPSeg",
		"display_name": "BatchCLIPSeg",
		"description": "\nSegments an image or batch of images using CLIPSeg.\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"RoundMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "RoundMask",
		"display_name": "RoundMask",
		"description": "\nRounds the mask or batch of masks to a binary mask.  \n<img src=\"https://github.com/kijai/ComfyUI-KJNodes/assets/40791699/52c85202-f74e-4b96-9dac-c8bda5ddcc40\" width=\"300\" height=\"250\" alt=\"RoundMask example\">\n\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"ResizeMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 16384,
						"step": 8,
						"display": "number"
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 16384,
						"step": 8,
						"display": "number"
					}
				],
				"keep_proportions": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"MASK",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"mask",
			"width",
			"height"
		],
		"name": "ResizeMask",
		"display_name": "ResizeMask",
		"description": "\nResizes the mask or batch of masks to the specified width and height.\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"OffsetMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": -4096,
						"max": 16384,
						"step": 1,
						"display": "number"
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": -4096,
						"max": 16384,
						"step": 1,
						"display": "number"
					}
				],
				"angle": [
					"INT",
					{
						"default": 0,
						"min": -360,
						"max": 360,
						"step": 1,
						"display": "number"
					}
				],
				"duplication_factor": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 1000,
						"step": 1,
						"display": "number"
					}
				],
				"roll": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"incremental": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"padding_mode": [
					[
						"empty",
						"border",
						"reflection"
					],
					{
						"default": "empty"
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"mask"
		],
		"name": "OffsetMask",
		"display_name": "OffsetMask",
		"description": "\nOffsets the mask by the specified amount.  \n - mask: Input mask or mask batch\n - x: Horizontal offset\n - y: Vertical offset\n - angle: Angle in degrees\n - roll: roll edge wrapping\n - duplication_factor: Number of times to duplicate the mask to form a batch\n - border padding_mode: Padding mode for the mask\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"MaskBatchMulti": {
		"input": {
			"required": {
				"inputcount": [
					"INT",
					{
						"default": 2,
						"min": 2,
						"max": 1000,
						"step": 1
					}
				],
				"mask_1": [
					"MASK"
				],
				"mask_2": [
					"MASK"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"masks"
		],
		"name": "MaskBatchMulti",
		"display_name": "Mask Batch Multi",
		"description": "\nCreates an image batch from multiple masks.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"GrowMaskWithBlur": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"expand": [
					"INT",
					{
						"default": 0,
						"min": -16384,
						"max": 16384,
						"step": 1
					}
				],
				"incremental_expandrate": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.1
					}
				],
				"tapered_corners": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"flip_input": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"blur_radius": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.1
					}
				],
				"lerp_alpha": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"decay_factor": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			},
			"optional": {
				"fill_holes": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"MASK",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"mask",
			"mask_inverted"
		],
		"name": "GrowMaskWithBlur",
		"display_name": "GrowMaskWithBlur",
		"description": "\n# GrowMaskWithBlur\n- mask: Input mask or mask batch\n- expand: Expand or contract mask or mask batch by a given amount\n- incremental_expandrate: increase expand rate by a given amount per frame\n- tapered_corners: use tapered corners\n- flip_input: flip input mask\n- blur_radius: value higher than 0 will blur the mask\n- lerp_alpha: alpha value for interpolation between frames\n- decay_factor: decay value for interpolation between frames\n- fill_holes: fill holes in the mask (slow)",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"ColorToMask": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"invert": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"red": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"green": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"blue": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"threshold": [
					"INT",
					{
						"default": 10,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"per_batch": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "ColorToMask",
		"display_name": "ColorToMask",
		"description": "\nConverts chosen RGB value to a mask.  \nWith batch inputs, the **per_batch**  \ncontrols the number of images processed at once.\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"CreateGradientMask": {
		"input": {
			"required": {
				"invert": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"frames": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"width": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "CreateGradientMask",
		"display_name": "CreateGradientMask",
		"description": "",
		"category": "KJNodes/masking/generate",
		"output_node": false
	},
	"CreateTextMask": {
		"input": {
			"required": {
				"invert": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"frames": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				],
				"text_x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"text_y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"font_size": [
					"INT",
					{
						"default": 32,
						"min": 8,
						"max": 4096,
						"step": 1
					}
				],
				"font_color": [
					"STRING",
					{
						"default": "white"
					}
				],
				"text": [
					"STRING",
					{
						"default": "HELLO!",
						"multiline": true
					}
				],
				"font": [
					[]
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"start_rotation": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 359,
						"step": 1
					}
				],
				"end_rotation": [
					"INT",
					{
						"default": 0,
						"min": -359,
						"max": 359,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "CreateTextMask",
		"display_name": "CreateTextMask",
		"description": "\nCreates a text image and mask.  \nLooks for fonts from this folder:  \nComfyUI/custom_nodes/ComfyUI-KJNodes/fonts\n  \nIf start_rotation and/or end_rotation are different values,  \ncreates animation between them.\n",
		"category": "KJNodes/text",
		"output_node": false
	},
	"CreateAudioMask": {
		"input": {
			"required": {
				"invert": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"frames": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 255,
						"step": 1
					}
				],
				"scale": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 2,
						"step": 0.01
					}
				],
				"audio_path": [
					"STRING",
					{
						"default": "audio.wav"
					}
				],
				"width": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "CreateAudioMask",
		"display_name": "CreateAudioMask (Deprecated)",
		"description": "",
		"category": "KJNodes/deprecated",
		"output_node": false
	},
	"CreateFadeMask": {
		"input": {
			"required": {
				"invert": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"frames": [
					"INT",
					{
						"default": 2,
						"min": 2,
						"max": 255,
						"step": 1
					}
				],
				"width": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"interpolation": [
					[
						"linear",
						"ease_in",
						"ease_out",
						"ease_in_out"
					]
				],
				"start_level": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"midpoint_level": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"end_level": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"midpoint_frame": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "CreateFadeMask",
		"display_name": "CreateFadeMask (Deprecated)",
		"description": "",
		"category": "KJNodes/deprecated",
		"output_node": false
	},
	"CreateFadeMaskAdvanced": {
		"input": {
			"required": {
				"points_string": [
					"STRING",
					{
						"default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n",
						"multiline": true
					}
				],
				"invert": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"frames": [
					"INT",
					{
						"default": 16,
						"min": 2,
						"max": 255,
						"step": 1
					}
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				],
				"interpolation": [
					[
						"linear",
						"ease_in",
						"ease_out",
						"ease_in_out"
					]
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "CreateFadeMaskAdvanced",
		"display_name": "CreateFadeMaskAdvanced",
		"description": "\nCreate a batch of masks interpolated between given frames and values. \nUses same syntax as Fizz' BatchValueSchedule.\nFirst value is the frame index (not that this starts from 0, not 1) \nand the second value inside the brackets is the float value of the mask in range 0.0 - 1.0  \n\nFor example the default values:  \n0:(0.0)  \n7:(1.0)  \n15:(0.0)  \n  \nWould create a mask batch fo 16 frames, starting from black, \ninterpolating with the chosen curve to fully white at the 8th frame, \nand interpolating from that to fully black at the 16th frame.\n",
		"category": "KJNodes/masking/generate",
		"output_node": false
	},
	"CreateFluidMask": {
		"input": {
			"required": {
				"invert": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"frames": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"width": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"inflow_count": [
					"INT",
					{
						"default": 3,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"inflow_velocity": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"inflow_radius": [
					"INT",
					{
						"default": 8,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"inflow_padding": [
					"INT",
					{
						"default": 50,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"inflow_duration": [
					"INT",
					{
						"default": 60,
						"min": 0,
						"max": 255,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "CreateFluidMask",
		"display_name": "CreateFluidMask",
		"description": "",
		"category": "KJNodes/masking/generate",
		"output_node": false
	},
	"CreateShapeMask": {
		"input": {
			"required": {
				"shape": [
					[
						"circle",
						"square",
						"triangle"
					],
					{
						"default": "circle"
					}
				],
				"frames": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				],
				"location_x": [
					"INT",
					{
						"default": 256,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"location_y": [
					"INT",
					{
						"default": 256,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"grow": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"frame_width": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"frame_height": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"shape_width": [
					"INT",
					{
						"default": 128,
						"min": 8,
						"max": 4096,
						"step": 1
					}
				],
				"shape_height": [
					"INT",
					{
						"default": 128,
						"min": 8,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"mask",
			"mask_inverted"
		],
		"name": "CreateShapeMask",
		"display_name": "CreateShapeMask",
		"description": "\nCreates a mask or batch of masks with the specified shape.  \nLocations are center locations.  \nGrow value is the amount to grow the shape on each frame, creating animated masks.\n",
		"category": "KJNodes/masking/generate",
		"output_node": false
	},
	"CreateVoronoiMask": {
		"input": {
			"required": {
				"frames": [
					"INT",
					{
						"default": 16,
						"min": 2,
						"max": 4096,
						"step": 1
					}
				],
				"num_points": [
					"INT",
					{
						"default": 15,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				],
				"line_width": [
					"INT",
					{
						"default": 4,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				],
				"speed": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"frame_width": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"frame_height": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"mask",
			"mask_inverted"
		],
		"name": "CreateVoronoiMask",
		"display_name": "CreateVoronoiMask",
		"description": "",
		"category": "KJNodes/masking/generate",
		"output_node": false
	},
	"CreateMagicMask": {
		"input": {
			"required": {
				"frames": [
					"INT",
					{
						"default": 16,
						"min": 2,
						"max": 4096,
						"step": 1
					}
				],
				"depth": [
					"INT",
					{
						"default": 12,
						"min": 1,
						"max": 500,
						"step": 1
					}
				],
				"distortion": [
					"FLOAT",
					{
						"default": 1.5,
						"min": 0,
						"max": 100,
						"step": 0.01
					}
				],
				"seed": [
					"INT",
					{
						"default": 123,
						"min": 0,
						"max": 99999999,
						"step": 1
					}
				],
				"transitions": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 20,
						"step": 1
					}
				],
				"frame_width": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"frame_height": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"mask",
			"mask_inverted"
		],
		"name": "CreateMagicMask",
		"display_name": "CreateMagicMask",
		"description": "",
		"category": "KJNodes/masking/generate",
		"output_node": false
	},
	"RemapMaskRange": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"min": [
					"FLOAT",
					{
						"default": 0,
						"min": -10,
						"max": 1,
						"step": 0.01
					}
				],
				"max": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"mask"
		],
		"name": "RemapMaskRange",
		"display_name": "RemapMaskRange",
		"description": "\nSets new min and max values for the mask.\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"ImageBatchMulti": {
		"input": {
			"required": {
				"inputcount": [
					"INT",
					{
						"default": 2,
						"min": 2,
						"max": 1000,
						"step": 1
					}
				],
				"image_1": [
					"IMAGE"
				],
				"image_2": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"images"
		],
		"name": "ImageBatchMulti",
		"display_name": "Image Batch Multi",
		"description": "\nCreates an image batch from multiple images.  \nYou can set how many inputs the node has,  \nwith the **inputcount** and clicking update.\n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"ColorMatch": {
		"input": {
			"required": {
				"image_ref": [
					"IMAGE"
				],
				"image_target": [
					"IMAGE"
				],
				"method": [
					[
						"mkl",
						"hm",
						"reinhard",
						"mvgd",
						"hm-mvgd-hm",
						"hm-mkl-hm"
					],
					{
						"default": "mkl"
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"image"
		],
		"name": "ColorMatch",
		"display_name": "ColorMatch",
		"description": "\ncolor-matcher enables color transfer across images which comes in handy for automatic  \ncolor-grading of photographs, paintings and film sequences as well as light-field  \nand stopmotion corrections.  \n\nThe methods behind the mappings are based on the approach from Reinhard et al.,  \nthe Monge-Kantorovich Linearization (MKL) as proposed by Pitie et al. and our analytical solution  \nto a Multi-Variate Gaussian Distribution (MVGD) transfer in conjunction with classical histogram   \nmatching. As shown below our HM-MVGD-HM compound outperforms existing methods.   \nhttps://github.com/hahnec/color-matcher/\n\n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"CrossFadeImages": {
		"input": {
			"required": {
				"images_1": [
					"IMAGE"
				],
				"images_2": [
					"IMAGE"
				],
				"interpolation": [
					[
						"linear",
						"ease_in",
						"ease_out",
						"ease_in_out",
						"bounce",
						"elastic",
						"glitchy",
						"exponential_ease_out"
					]
				],
				"transition_start_index": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"transitioning_frames": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"start_level": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"end_level": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "CrossFadeImages",
		"display_name": "CrossFadeImages",
		"description": "",
		"category": "KJNodes/image",
		"output_node": false
	},
	"GetImageRangeFromBatch": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"start_index": [
					"INT",
					{
						"default": 0,
						"min": -1,
						"max": 4096,
						"step": 1
					}
				],
				"num_frames": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "GetImageRangeFromBatch",
		"display_name": "GetImageRangeFromBatch",
		"description": "\nCreates a new batch using images from the input,  \nbatch, starting from start_index.\n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"SaveImageWithAlpha": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "ComfyUI"
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "SaveImageWithAlpha",
		"display_name": "SaveImageWithAlpha",
		"description": "\nSaves an image and mask as .PNG with the mask as the alpha channel. \n",
		"category": "KJNodes/image",
		"output_node": true
	},
	"ReverseImageBatch": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ReverseImageBatch",
		"display_name": "ReverseImageBatch",
		"description": "\nReverses the order of the images in a batch.\n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"ImageGridComposite2x2": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				],
				"image2": [
					"IMAGE"
				],
				"image3": [
					"IMAGE"
				],
				"image4": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageGridComposite2x2",
		"display_name": "ImageGridComposite2x2",
		"description": "\nConcatenates the 4 input images into a 2x2 grid. \n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"ImageGridComposite3x3": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				],
				"image2": [
					"IMAGE"
				],
				"image3": [
					"IMAGE"
				],
				"image4": [
					"IMAGE"
				],
				"image5": [
					"IMAGE"
				],
				"image6": [
					"IMAGE"
				],
				"image7": [
					"IMAGE"
				],
				"image8": [
					"IMAGE"
				],
				"image9": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageGridComposite3x3",
		"display_name": "ImageGridComposite3x3",
		"description": "\nConcatenates the 9 input images into a 3x3 grid. \n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"ImageConcanate": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				],
				"image2": [
					"IMAGE"
				],
				"direction": [
					[
						"right",
						"down",
						"left",
						"up"
					],
					{
						"default": "right"
					}
				],
				"match_image_size": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageConcanate",
		"display_name": "ImageConcatenate",
		"description": "\nConcatenates the image2 to image1 in the specified direction.\n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"ImageBatchTestPattern": {
		"input": {
			"required": {
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 255,
						"step": 1
					}
				],
				"start_from": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"text_x": [
					"INT",
					{
						"default": 256,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"text_y": [
					"INT",
					{
						"default": 256,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"font": [
					[]
				],
				"font_size": [
					"INT",
					{
						"default": 255,
						"min": 8,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageBatchTestPattern",
		"display_name": "ImageBatchTestPattern",
		"description": "",
		"category": "KJNodes/text",
		"output_node": false
	},
	"ReplaceImagesInBatch": {
		"input": {
			"required": {
				"original_images": [
					"IMAGE"
				],
				"replacement_images": [
					"IMAGE"
				],
				"start_index": [
					"INT",
					{
						"default": 1,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ReplaceImagesInBatch",
		"display_name": "ReplaceImagesInBatch",
		"description": "\nReplaces the images in a batch, starting from the specified start index,  \nwith the replacement images.\n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"ImageGrabPIL": {
		"input": {
			"required": {
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"num_frames": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 255,
						"step": 1
					}
				],
				"delay": [
					"FLOAT",
					{
						"default": 0.1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"image"
		],
		"name": "ImageGrabPIL",
		"display_name": "ImageGrabPIL",
		"description": "\nCaptures an area specified by screen coordinates.  \nCan be used for realtime diffusion with autoqueue.\n",
		"category": "KJNodes/experimental",
		"output_node": false
	},
	"AddLabel": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"text_x": [
					"INT",
					{
						"default": 10,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"text_y": [
					"INT",
					{
						"default": 2,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 48,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"font_size": [
					"INT",
					{
						"default": 32,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"font_color": [
					"STRING",
					{
						"default": "white"
					}
				],
				"label_color": [
					"STRING",
					{
						"default": "black"
					}
				],
				"font": [
					[]
				],
				"text": [
					"STRING",
					{
						"default": "Text"
					}
				],
				"direction": [
					[
						"up",
						"down"
					],
					{
						"default": "up"
					}
				]
			},
			"optional": {
				"caption": [
					"STRING",
					{
						"default": "",
						"forceInput": true
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "AddLabel",
		"display_name": "AddLabel",
		"description": "\nCreates a new with the given text, and concatenates it to  \neither above or below the input image.  \nNote that this changes the input image's height!  \nFonts are loaded from this folder:  \nComfyUI/custom_nodes/ComfyUI-KJNodes/fonts\n",
		"category": "KJNodes/text",
		"output_node": false
	},
	"ImageUpscaleWithModelBatched": {
		"input": {
			"required": {
				"upscale_model": [
					"UPSCALE_MODEL"
				],
				"images": [
					"IMAGE"
				],
				"per_batch": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageUpscaleWithModelBatched",
		"display_name": "ImageUpscaleWithModelBatched",
		"description": "\nSame as ComfyUI native model upscaling node,  \nbut allows setting sub-batches for reduced VRAM usage.\n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"GetImagesFromBatchIndexed": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"indexes": [
					"STRING",
					{
						"default": "0, 1, 2",
						"multiline": true
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "GetImagesFromBatchIndexed",
		"display_name": "GetImagesFromBatchIndexed",
		"description": "\nSelects and returns the images at the specified indices as an image batch.\n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"InsertImagesToBatchIndexed": {
		"input": {
			"required": {
				"original_images": [
					"IMAGE"
				],
				"images_to_insert": [
					"IMAGE"
				],
				"indexes": [
					"STRING",
					{
						"default": "0, 1, 2",
						"multiline": true
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "InsertImagesToBatchIndexed",
		"display_name": "InsertImagesToBatchIndexed",
		"description": "\nInserts images at the specified indices into the original image batch.\n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"ImageBatchRepeatInterleaving": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"repeats": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageBatchRepeatInterleaving",
		"display_name": "ImageBatchRepeatInterleaving",
		"description": "\nRepeats each image in a batch by the specified number of times.  \nExample batch of 5 images: 0, 1 ,2, 3, 4  \nwith repeats 2 becomes batch of 10 images: 0, 0, 1, 1, 2, 2, 3, 3, 4, 4  \n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"ImageNormalize_Neg1_To_1": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageNormalize_Neg1_To_1",
		"display_name": "ImageNormalize_Neg1_To_1",
		"description": "\nNormalize the images to be in the range [-1, 1]  \n",
		"category": "KJNodes/misc",
		"output_node": false
	},
	"RemapImageRange": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"min": [
					"FLOAT",
					{
						"default": 0,
						"min": -10,
						"max": 1,
						"step": 0.01
					}
				],
				"max": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"clamp": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "RemapImageRange",
		"display_name": "RemapImageRange",
		"description": "\nRemaps the image values to the specified range. \n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"ImagePass": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImagePass",
		"display_name": "ImagePass",
		"description": "\nPasses the image through without modifying it.\n",
		"category": "KJNodes/misc",
		"output_node": false
	},
	"ImagePadForOutpaintMasked": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"left": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"top": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"right": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"bottom": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"feathering": [
					"INT",
					{
						"default": 40,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				]
			},
			"optional": {
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "ImagePadForOutpaintMasked",
		"display_name": "Pad Image For Outpaint Masked",
		"description": "",
		"category": "image",
		"output_node": false
	},
	"ImageAndMaskPreview": {
		"input": {
			"required": {
				"mask_opacity": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"mask_color": [
					"STRING",
					{
						"default": "255, 255, 255"
					}
				],
				"pass_through": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"image": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"composite"
		],
		"name": "ImageAndMaskPreview",
		"display_name": "Image & Mask Preview",
		"description": "\nPreview an image or a mask, when both inputs are used  \ncomposites the mask on top of the image.\nwith pass_through on the preview is disabled and the  \ncomposite is returned from the composite slot instead,  \nthis allows for the preview to be passed for video combine  \nnodes for example.\n",
		"category": "KJNodes",
		"output_node": true
	},
	"BatchCropFromMask": {
		"input": {
			"required": {
				"original_images": [
					"IMAGE"
				],
				"masks": [
					"MASK"
				],
				"crop_size_mult": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.001
					}
				],
				"bbox_smooth_alpha": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"IMAGE",
			"BBOX",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"original_images",
			"cropped_images",
			"bboxes",
			"width",
			"height"
		],
		"name": "BatchCropFromMask",
		"display_name": "BatchCropFromMask",
		"description": "",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"BatchCropFromMaskAdvanced": {
		"input": {
			"required": {
				"original_images": [
					"IMAGE"
				],
				"masks": [
					"MASK"
				],
				"crop_size_mult": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"bbox_smooth_alpha": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"IMAGE",
			"MASK",
			"IMAGE",
			"MASK",
			"BBOX",
			"BBOX",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"original_images",
			"cropped_images",
			"cropped_masks",
			"combined_crop_image",
			"combined_crop_masks",
			"bboxes",
			"combined_bounding_box",
			"bbox_width",
			"bbox_height"
		],
		"name": "BatchCropFromMaskAdvanced",
		"display_name": "BatchCropFromMaskAdvanced",
		"description": "",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"FilterZeroMasksAndCorrespondingImages": {
		"input": {
			"required": {
				"masks": [
					"MASK"
				]
			},
			"optional": {
				"original_images": [
					"IMAGE"
				]
			}
		},
		"output": [
			"MASK",
			"IMAGE",
			"IMAGE",
			"INDEXES"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"non_zero_masks_out",
			"non_zero_mask_images_out",
			"zero_mask_images_out",
			"zero_mask_images_out_indexes"
		],
		"name": "FilterZeroMasksAndCorrespondingImages",
		"display_name": "FilterZeroMasksAndCorrespondingImages",
		"description": "\nFilter out all the empty (i.e. all zero) mask in masks  \nAlso filter out all the corresponding images in original_images by indexes if provide  \n  \noriginal_images (optional): If provided, need have same length as masks.\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"InsertImageBatchByIndexes": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"images_to_insert": [
					"IMAGE"
				],
				"insert_indexes": [
					"INDEXES"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"images_after_insert"
		],
		"name": "InsertImageBatchByIndexes",
		"display_name": "InsertImageBatchByIndexes",
		"description": "\nThis node is designed to be use with node FilterZeroMasksAndCorrespondingImages\nIt inserts the images_to_insert into images according to insert_indexes\n\nReturns:\n    images_after_insert: updated original images with origonal sequence order\n",
		"category": "KJNodes/image",
		"output_node": false
	},
	"BatchUncrop": {
		"input": {
			"required": {
				"original_images": [
					"IMAGE"
				],
				"cropped_images": [
					"IMAGE"
				],
				"bboxes": [
					"BBOX"
				],
				"border_blending": [
					"FLOAT",
					{
						"default": 0.25,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"crop_rescale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"border_top": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"border_bottom": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"border_left": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"border_right": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "BatchUncrop",
		"display_name": "BatchUncrop",
		"description": "",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"BatchUncropAdvanced": {
		"input": {
			"required": {
				"original_images": [
					"IMAGE"
				],
				"cropped_images": [
					"IMAGE"
				],
				"cropped_masks": [
					"MASK"
				],
				"combined_crop_mask": [
					"MASK"
				],
				"bboxes": [
					"BBOX"
				],
				"border_blending": [
					"FLOAT",
					{
						"default": 0.25,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"crop_rescale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.01
					}
				],
				"use_combined_mask": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"use_square_mask": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			},
			"optional": {
				"combined_bounding_box": [
					"BBOX",
					{
						"default": null
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "BatchUncropAdvanced",
		"display_name": "BatchUncropAdvanced",
		"description": "",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"SplitBboxes": {
		"input": {
			"required": {
				"bboxes": [
					"BBOX"
				],
				"index": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 99999999,
						"step": 1
					}
				]
			}
		},
		"output": [
			"BBOX",
			"BBOX"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"bboxes_a",
			"bboxes_b"
		],
		"name": "SplitBboxes",
		"display_name": "SplitBboxes",
		"description": "\nSplits the specified bbox list at the given index into two lists.\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"BboxToInt": {
		"input": {
			"required": {
				"bboxes": [
					"BBOX"
				],
				"index": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 99999999,
						"step": 1
					}
				]
			}
		},
		"output": [
			"INT",
			"INT",
			"INT",
			"INT",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"x_min",
			"y_min",
			"width",
			"height",
			"center_x",
			"center_y"
		],
		"name": "BboxToInt",
		"display_name": "BboxToInt",
		"description": "\nReturns selected index from bounding box list as integers.\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"BboxVisualize": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"bboxes": [
					"BBOX"
				],
				"line_width": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 10,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"images"
		],
		"name": "BboxVisualize",
		"display_name": "BboxVisualize",
		"description": "\nVisualizes the specified bbox on the image.\n",
		"category": "KJNodes/masking",
		"output_node": false
	},
	"GenerateNoise": {
		"input": {
			"required": {
				"width": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				],
				"seed": [
					"INT",
					{
						"default": 123,
						"min": 0,
						"max": 18446744073709552000,
						"step": 1
					}
				],
				"multiplier": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 4096,
						"step": 0.01
					}
				],
				"constant_batch_noise": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"normalize": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"model": [
					"MODEL"
				],
				"sigmas": [
					"SIGMAS"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "GenerateNoise",
		"display_name": "GenerateNoise",
		"description": "\nGenerates noise for injection or to be used as empty latents on samplers with add_noise off.\n",
		"category": "KJNodes/noise",
		"output_node": false
	},
	"FlipSigmasAdjusted": {
		"input": {
			"required": {
				"sigmas": [
					"SIGMAS"
				],
				"divide_by_last_sigma": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"divide_by": [
					"FLOAT",
					{
						"default": 1,
						"min": 1,
						"max": 255,
						"step": 0.01
					}
				],
				"offset_by": [
					"INT",
					{
						"default": 1,
						"min": -100,
						"max": 100,
						"step": 1
					}
				]
			}
		},
		"output": [
			"SIGMAS",
			"STRING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"SIGMAS",
			"sigmas_string"
		],
		"name": "FlipSigmasAdjusted",
		"display_name": "FlipSigmasAdjusted",
		"description": "",
		"category": "KJNodes/noise",
		"output_node": false
	},
	"InjectNoiseToLatent": {
		"input": {
			"required": {
				"latents": [
					"LATENT"
				],
				"strength": [
					"FLOAT",
					{
						"default": 0.1,
						"min": 0,
						"max": 200,
						"step": 0.0001
					}
				],
				"noise": [
					"LATENT"
				],
				"normalize": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"average": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"mask": [
					"MASK"
				],
				"mix_randn_amount": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1000,
						"step": 0.001
					}
				],
				"seed": [
					"INT",
					{
						"default": 123,
						"min": 0,
						"max": 18446744073709552000,
						"step": 1
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "InjectNoiseToLatent",
		"display_name": "InjectNoiseToLatent",
		"description": "",
		"category": "KJNodes/noise",
		"output_node": false
	},
	"CustomSigmas": {
		"input": {
			"required": {
				"sigmas_string": [
					"STRING",
					{
						"default": "14.615, 6.475, 3.861, 2.697, 1.886, 1.396, 0.963, 0.652, 0.399, 0.152, 0.029",
						"multiline": true
					}
				],
				"interpolate_to_steps": [
					"INT",
					{
						"default": 10,
						"min": 0,
						"max": 255,
						"step": 1
					}
				]
			}
		},
		"output": [
			"SIGMAS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMAS"
		],
		"name": "CustomSigmas",
		"display_name": "Custom Sigmas",
		"description": "\nCreates a sigmas tensor from a string of comma separated values.  \nExamples: \n   \nNvidia's optimized AYS 10 step schedule for SD 1.5:  \n14.615, 6.475, 3.861, 2.697, 1.886, 1.396, 0.963, 0.652, 0.399, 0.152, 0.029  \nSDXL:   \n14.615, 6.315, 3.771, 2.181, 1.342, 0.862, 0.555, 0.380, 0.234, 0.113, 0.029  \nSVD:  \n700.00, 54.5, 15.886, 7.977, 4.248, 1.789, 0.981, 0.403, 0.173, 0.034, 0.002  \n",
		"category": "KJNodes/noise",
		"output_node": false
	},
	"WidgetToString": {
		"input": {
			"required": {
				"id": [
					"INT",
					{
						"default": 0
					}
				],
				"widget_name": [
					"STRING",
					{
						"multiline": false
					}
				],
				"return_all": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"hidden": {
				"extra_pnginfo": "EXTRA_PNGINFO",
				"prompt": "PROMPT"
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "WidgetToString",
		"display_name": "WidgetToString",
		"description": "\nSelects a node and it's specified widget and outputs the value as a string.  \nTo see node id's, enable node id display from Manager badge menu.\n",
		"category": "KJNodes/text",
		"output_node": false
	},
	"DummyLatentOut": {
		"input": {
			"required": {
				"latent": [
					"LATENT"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "DummyLatentOut",
		"display_name": "DummyLatentOut",
		"description": "\nDoes nothing, used to trigger generic workflow output.    \nA way to get previews in the UI without saving anything to disk.\n",
		"category": "KJNodes/misc",
		"output_node": true
	},
	"GetLatentsFromBatchIndexed": {
		"input": {
			"required": {
				"latents": [
					"LATENT"
				],
				"indexes": [
					"STRING",
					{
						"default": "0, 1, 2",
						"multiline": true
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "GetLatentsFromBatchIndexed",
		"display_name": "GetLatentsFromBatchIndexed",
		"description": "\nSelects and returns the latents at the specified indices as an latent batch.\n",
		"category": "KJNodes",
		"output_node": false
	},
	"ScaleBatchPromptSchedule": {
		"input": {
			"required": {
				"input_str": [
					"STRING",
					{
						"forceInput": true,
						"default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n"
					}
				],
				"old_frame_count": [
					"INT",
					{
						"forceInput": true,
						"default": 1,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				],
				"new_frame_count": [
					"INT",
					{
						"forceInput": true,
						"default": 1,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "ScaleBatchPromptSchedule",
		"display_name": "ScaleBatchPromptSchedule",
		"description": "\nScales a batch schedule from Fizz' nodes BatchPromptSchedule\nto a different frame count.\n",
		"category": "KJNodes",
		"output_node": false
	},
	"CameraPoseVisualizer": {
		"input": {
			"required": {
				"pose_file_path": [
					"STRING",
					{
						"default": "",
						"multiline": false
					}
				],
				"base_xval": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 100,
						"step": 0.01
					}
				],
				"zval": [
					"FLOAT",
					{
						"default": 0.3,
						"min": 0,
						"max": 100,
						"step": 0.01
					}
				],
				"scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.01,
						"max": 10,
						"step": 0.01
					}
				],
				"use_exact_fx": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"relative_c2w": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"use_viewer": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"cameractrl_poses": [
					"CAMERACTRL_POSES",
					{
						"default": null
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "CameraPoseVisualizer",
		"display_name": "CameraPoseVisualizer",
		"description": "\nVisualizes the camera poses, from Animatediff-Evolved CameraCtrl Pose  \nor a .txt file with RealEstate camera intrinsics and coordinates, in a 3D plot. \n",
		"category": "KJNodes/misc",
		"output_node": false
	},
	"JoinStrings": {
		"input": {
			"required": {
				"string1": [
					"STRING",
					{
						"default": "",
						"forceInput": true
					}
				],
				"string2": [
					"STRING",
					{
						"default": "",
						"forceInput": true
					}
				],
				"delimiter": [
					"STRING",
					{
						"default": " ",
						"multiline": false
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "JoinStrings",
		"display_name": "JoinStrings",
		"description": "",
		"category": "KJNodes/constants",
		"output_node": false
	},
	"Sleep": {
		"input": {
			"required": {
				"input": [
					"*",
					{}
				],
				"minutes": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 1439
					}
				],
				"seconds": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 59.99,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"*"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"*"
		],
		"name": "Sleep",
		"display_name": "🛌 Sleep 🛌",
		"description": "\nDelays the execution for the input amount of time.\n",
		"category": "KJNodes/misc",
		"output_node": false
	},
	"VRAM_Debug": {
		"input": {
			"required": {
				"empty_cache": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"gc_collect": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"unload_all_models": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			},
			"optional": {
				"any_input": [
					"*",
					{}
				],
				"image_pass": [
					"IMAGE"
				],
				"model_pass": [
					"MODEL"
				]
			}
		},
		"output": [
			"*",
			"IMAGE",
			"MODEL",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"any_output",
			"image_pass",
			"model_pass",
			"freemem_before",
			"freemem_after"
		],
		"name": "VRAM_Debug",
		"display_name": "VRAM Debug",
		"description": "\nReturns the inputs unchanged, they are only used as triggers,  \nand performs comfy model management functions and garbage collection,  \nreports free VRAM before and after the operations.\n",
		"category": "KJNodes/misc",
		"output_node": false
	},
	"SomethingToString": {
		"input": {
			"required": {
				"input": [
					"*",
					{}
				]
			},
			"optional": {
				"prefix": [
					"STRING",
					{
						"default": ""
					}
				],
				"suffix": [
					"STRING",
					{
						"default": ""
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "SomethingToString",
		"display_name": "SomethingToString",
		"description": "\nConverts any type to a string.\n",
		"category": "KJNodes/text",
		"output_node": false
	},
	"EmptyLatentImagePresets": {
		"input": {
			"required": {
				"dimensions": [
					[
						"512 x 512",
						"768 x 512",
						"960 x 512",
						"1024 x 512",
						"1536 x 640",
						"1344 x 768",
						"1216 x 832",
						"1152 x 896",
						"1024 x 1024"
					],
					{
						"default": "512 x 512"
					}
				],
				"invert": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				]
			}
		},
		"output": [
			"LATENT",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"Latent",
			"Width",
			"Height"
		],
		"name": "EmptyLatentImagePresets",
		"display_name": "EmptyLatentImagePresets",
		"description": "",
		"category": "KJNodes",
		"output_node": false
	},
	"NormalizedAmplitudeToMask": {
		"input": {
			"required": {
				"normalized_amp": [
					"NORMALIZED_AMPLITUDE"
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"frame_offset": [
					"INT",
					{
						"default": 0,
						"min": -255,
						"max": 255,
						"step": 1
					}
				],
				"location_x": [
					"INT",
					{
						"default": 256,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"location_y": [
					"INT",
					{
						"default": 256,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"size": [
					"INT",
					{
						"default": 128,
						"min": 8,
						"max": 4096,
						"step": 1
					}
				],
				"shape": [
					[
						"none",
						"circle",
						"square",
						"triangle"
					],
					{
						"default": "none"
					}
				],
				"color": [
					[
						"white",
						"amplitude"
					],
					{
						"default": "amplitude"
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "NormalizedAmplitudeToMask",
		"display_name": "NormalizedAmplitudeToMask",
		"description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nCreates masks based on the normalized amplitude.\n",
		"category": "KJNodes/audio",
		"output_node": false
	},
	"OffsetMaskByNormalizedAmplitude": {
		"input": {
			"required": {
				"normalized_amp": [
					"NORMALIZED_AMPLITUDE"
				],
				"mask": [
					"MASK"
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": -4096,
						"max": 16384,
						"step": 1,
						"display": "number"
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": -4096,
						"max": 16384,
						"step": 1,
						"display": "number"
					}
				],
				"rotate": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"angle_multiplier": [
					"FLOAT",
					{
						"default": 0,
						"min": -1,
						"max": 1,
						"step": 0.001,
						"display": "number"
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"mask"
		],
		"name": "OffsetMaskByNormalizedAmplitude",
		"display_name": "OffsetMaskByNormalizedAmplitude",
		"description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nOffsets masks based on the normalized amplitude.\n",
		"category": "KJNodes/audio",
		"output_node": false
	},
	"ImageTransformByNormalizedAmplitude": {
		"input": {
			"required": {
				"normalized_amp": [
					"NORMALIZED_AMPLITUDE"
				],
				"zoom_scale": [
					"FLOAT",
					{
						"default": 0,
						"min": -1,
						"max": 1,
						"step": 0.001,
						"display": "number"
					}
				],
				"x_offset": [
					"INT",
					{
						"default": 0,
						"min": -16383,
						"max": 16384,
						"step": 1,
						"display": "number"
					}
				],
				"y_offset": [
					"INT",
					{
						"default": 0,
						"min": -16383,
						"max": 16384,
						"step": 1,
						"display": "number"
					}
				],
				"cumulative": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageTransformByNormalizedAmplitude",
		"display_name": "ImageTransformByNormalizedAmplitude",
		"description": "\nWorks as a bridge to the AudioScheduler -nodes:  \nhttps://github.com/a1lazydog/ComfyUI-AudioScheduler  \nTransforms image based on the normalized amplitude.\n",
		"category": "KJNodes/audio",
		"output_node": false
	},
	"SplineEditor": {
		"input": {
			"required": {
				"points_store": [
					"STRING",
					{
						"multiline": false
					}
				],
				"coordinates": [
					"STRING",
					{
						"multiline": false
					}
				],
				"mask_width": [
					"INT",
					{
						"default": 512,
						"min": 8,
						"max": 4096,
						"step": 8
					}
				],
				"mask_height": [
					"INT",
					{
						"default": 512,
						"min": 8,
						"max": 4096,
						"step": 8
					}
				],
				"points_to_sample": [
					"INT",
					{
						"default": 16,
						"min": 2,
						"max": 1000,
						"step": 1
					}
				],
				"sampling_method": [
					[
						"path",
						"time"
					],
					{
						"default": "time"
					}
				],
				"interpolation": [
					[
						"cardinal",
						"monotone",
						"basis",
						"linear",
						"step-before",
						"step-after",
						"polar",
						"polar-reverse"
					],
					{
						"default": "cardinal"
					}
				],
				"tension": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"repeat_output": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				],
				"float_output_type": [
					[
						"list",
						"pandas series",
						"tensor"
					],
					{
						"default": "list"
					}
				]
			},
			"optional": {
				"min_value": [
					"FLOAT",
					{
						"default": 0,
						"min": -10000,
						"max": 10000,
						"step": 0.01
					}
				],
				"max_value": [
					"FLOAT",
					{
						"default": 1,
						"min": -10000,
						"max": 10000,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MASK",
			"STRING",
			"FLOAT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"mask",
			"string",
			"float",
			"count"
		],
		"name": "SplineEditor",
		"display_name": "Spline Editor",
		"description": "\n# WORK IN PROGRESS  \nDo not count on this as part of your workflow yet,  \nprobably contains lots of bugs and stability is not  \nguaranteed!!  \n  \n## Graphical editor to create values for various   \n## schedules and/or mask batches.  \n\n**Shift + click** to add control point at end.\n**Ctrl + click** to add control point (subdivide) between two points.  \n**Right click on a point** to delete it.    \nNote that you can't delete from start/end.  \n  \nRight click on canvas for context menu:  \nThese are purely visual options, doesn't affect the output:  \n - Toggle handles visibility\n - Display sample points: display the points to be returned.  \n\n**points_to_sample** value sets the number of samples  \nreturned from the **drawn spline itself**, this is independent from the  \nactual control points, so the interpolation type matters.  \nsampling_method: \n - time: samples along the time axis, used for schedules  \n - path: samples along the path itself, useful for coordinates  \n\noutput types:\n - mask batch  \n        example compatible nodes: anything that takes masks  \n - list of floats\n        example compatible nodes: IPAdapter weights  \n - pandas series\n        example compatible nodes: anything that takes Fizz'  \n        nodes Batch Value Schedule  \n - torch tensor  \n        example compatible nodes: unknown\n",
		"category": "KJNodes/experimental",
		"output_node": false
	},
	"CreateShapeMaskOnPath": {
		"input": {
			"required": {
				"shape": [
					[
						"circle",
						"square",
						"triangle"
					],
					{
						"default": "circle"
					}
				],
				"coordinates": [
					"STRING",
					{
						"forceInput": true
					}
				],
				"grow": [
					"INT",
					{
						"default": 0,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"frame_width": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"frame_height": [
					"INT",
					{
						"default": 512,
						"min": 16,
						"max": 4096,
						"step": 1
					}
				],
				"shape_width": [
					"INT",
					{
						"default": 128,
						"min": 8,
						"max": 4096,
						"step": 1
					}
				],
				"shape_height": [
					"INT",
					{
						"default": 128,
						"min": 8,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"mask",
			"mask_inverted"
		],
		"name": "CreateShapeMaskOnPath",
		"display_name": "Create Shape Mask On Path",
		"description": "\nCreates a mask or batch of masks with the specified shape.  \nLocations are center locations.  \nGrow value is the amount to grow the shape on each frame, creating animated masks.\n",
		"category": "KJNodes/masking/generate",
		"output_node": false
	},
	"WeightScheduleExtend": {
		"input": {
			"required": {
				"input_values_1": [
					"FLOAT",
					{
						"default": 0,
						"forceInput": true
					}
				],
				"input_values_2": [
					"FLOAT",
					{
						"default": 0,
						"forceInput": true
					}
				],
				"output_type": [
					[
						"match_input",
						"list",
						"pandas series",
						"tensor"
					],
					{
						"default": "match_input"
					}
				]
			}
		},
		"output": [
			"FLOAT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"FLOAT"
		],
		"name": "WeightScheduleExtend",
		"display_name": "Weight Schedule Extend",
		"description": "\nExtends, and converts if needed, different value lists/series  \n",
		"category": "KJNodes",
		"output_node": false
	},
	"MaskOrImageToWeight": {
		"input": {
			"required": {
				"output_type": [
					[
						"list",
						"pandas series",
						"tensor"
					],
					{
						"default": "list"
					}
				]
			},
			"optional": {
				"images": [
					"IMAGE"
				],
				"masks": [
					"MASK"
				]
			}
		},
		"output": [
			"FLOAT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"FLOAT"
		],
		"name": "MaskOrImageToWeight",
		"display_name": "Mask Or Image To Weight",
		"description": "\nGets the mean values from mask or image batch  \nand returns that as the selected output type.   \n",
		"category": "KJNodes",
		"output_node": false
	},
	"WeightScheduleConvert": {
		"input": {
			"required": {
				"input_values": [
					"FLOAT",
					{
						"default": 0,
						"forceInput": true
					}
				],
				"output_type": [
					[
						"match_input",
						"list",
						"pandas series",
						"tensor"
					],
					{
						"default": "list"
					}
				],
				"invert": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"repeat": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 255,
						"step": 1
					}
				]
			},
			"optional": {
				"remap_to_frames": [
					"INT",
					{
						"default": 0
					}
				],
				"interpolation_curve": [
					"FLOAT",
					{
						"forceInput": true
					}
				]
			}
		},
		"output": [
			"FLOAT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"FLOAT"
		],
		"name": "WeightScheduleConvert",
		"display_name": "Weight Schedule Convert",
		"description": "\nConverts different value lists/series to another type.  \n",
		"category": "KJNodes",
		"output_node": false
	},
	"FloatToMask": {
		"input": {
			"required": {
				"input_values": [
					"FLOAT",
					{
						"forceInput": true,
						"default": 0
					}
				],
				"width": [
					"INT",
					{
						"default": 100,
						"min": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 100,
						"min": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "FloatToMask",
		"display_name": "Float To Mask",
		"description": "\nGenerates a batch of masks based on the input float values.\nThe batch size is determined by the length of the input float values.\nEach mask is generated with the specified width and height.\n",
		"category": "KJNodes",
		"output_node": false
	},
	"FloatToSigmas": {
		"input": {
			"required": {
				"float_list": [
					"FLOAT",
					{
						"default": 0,
						"forceInput": true
					}
				]
			}
		},
		"output": [
			"SIGMAS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"SIGMAS"
		],
		"name": "FloatToSigmas",
		"display_name": "Float To Sigmas",
		"description": "\nCreates a sigmas tensor from list of float values.  \n\n",
		"category": "KJNodes/noise",
		"output_node": false
	},
	"StabilityAPI_SD3": {
		"input": {
			"required": {
				"prompt": [
					"STRING",
					{
						"multiline": true
					}
				],
				"n_prompt": [
					"STRING",
					{
						"multiline": true
					}
				],
				"seed": [
					"INT",
					{
						"default": 123,
						"min": 0,
						"max": 4294967294,
						"step": 1
					}
				],
				"model": [
					[
						"sd3",
						"sd3-turbo"
					],
					{
						"default": "sd3"
					}
				],
				"aspect_ratio": [
					[
						"1:1",
						"16:9",
						"21:9",
						"2:3",
						"3:2",
						"4:5",
						"5:4",
						"9:16",
						"9:21"
					],
					{
						"default": "1:1"
					}
				],
				"output_format": [
					[
						"png",
						"jpeg"
					],
					{
						"default": "jpeg"
					}
				]
			},
			"optional": {
				"api_key": [
					"STRING",
					{
						"multiline": true
					}
				],
				"image": [
					"IMAGE"
				],
				"img2img_strength": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"disable_metadata": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "StabilityAPI_SD3",
		"display_name": "Stability API SD3",
		"description": "\n## Calls StabilityAI API\n   \nAlthough you may have multiple keys in your account,  \nyou should use the same key for all requests to this API.  \n\nGet your API key here: https://platform.stability.ai/account/keys  \nRecommended to set the key in the config.json -file under this  \nnode packs folder.  \n# WARNING:  \nOtherwise the API key may get saved in the image metadata even  \nwith \"disable_metadata\" on if the workflow includes save nodes  \nseparate from this node.  \n   \nsd3 requires 6.5 credits per generation  \nsd3-turbo requires 4 credits per generation  \n\nIf no image is provided, mode is set to text-to-image  \n\n",
		"category": "KJNodes/experimental",
		"output_node": false
	},
	"SoundReactive": {
		"input": {
			"required": {
				"sound_level": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 99999,
						"step": 0.01
					}
				],
				"start_range_hz": [
					"INT",
					{
						"default": 150,
						"min": 0,
						"max": 9999,
						"step": 1
					}
				],
				"end_range_hz": [
					"INT",
					{
						"default": 2000,
						"min": 0,
						"max": 9999,
						"step": 1
					}
				],
				"multiplier": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.01,
						"max": 99999,
						"step": 0.01
					}
				],
				"smoothing_factor": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"normalize": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"FLOAT",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"sound_level",
			"sound_level_int"
		],
		"name": "SoundReactive",
		"display_name": "SoundReactive",
		"description": "\nReacts to the sound level of the input.  \nUses your browsers sound input options and requires.  \nMeant to be used with realtime diffusion with autoqueue.\n",
		"category": "KJNodes/audio",
		"output_node": false
	},
	"StableZero123_BatchSchedule": {
		"input": {
			"required": {
				"clip_vision": [
					"CLIP_VISION"
				],
				"init_image": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"width": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 256,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				],
				"interpolation": [
					[
						"linear",
						"ease_in",
						"ease_out",
						"ease_in_out"
					]
				],
				"azimuth_points_string": [
					"STRING",
					{
						"default": "0:(0.0),\n7:(1.0),\n15:(0.0)\n",
						"multiline": true
					}
				],
				"elevation_points_string": [
					"STRING",
					{
						"default": "0:(0.0),\n7:(0.0),\n15:(0.0)\n",
						"multiline": true
					}
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"latent"
		],
		"name": "StableZero123_BatchSchedule",
		"display_name": "StableZero123_BatchSchedule",
		"description": "",
		"category": "KJNodes/experimental",
		"output_node": false
	},
	"SV3D_BatchSchedule": {
		"input": {
			"required": {
				"clip_vision": [
					"CLIP_VISION"
				],
				"init_image": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"width": [
					"INT",
					{
						"default": 576,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 576,
						"min": 16,
						"max": 16384,
						"step": 8
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 21,
						"min": 1,
						"max": 4096
					}
				],
				"interpolation": [
					[
						"linear",
						"ease_in",
						"ease_out",
						"ease_in_out"
					]
				],
				"azimuth_points_string": [
					"STRING",
					{
						"default": "0:(0.0),\n9:(180.0),\n20:(360.0)\n",
						"multiline": true
					}
				],
				"elevation_points_string": [
					"STRING",
					{
						"default": "0:(0.0),\n9:(0.0),\n20:(0.0)\n",
						"multiline": true
					}
				]
			}
		},
		"output": [
			"CONDITIONING",
			"CONDITIONING",
			"LATENT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"positive",
			"negative",
			"latent"
		],
		"name": "SV3D_BatchSchedule",
		"display_name": "SV3D_BatchSchedule",
		"description": "\nAllow scheduling of the azimuth and elevation conditions for SV3D.  \nNote that SV3D is still a video model and the schedule needs to always go forward  \nhttps://huggingface.co/stabilityai/sv3d\n",
		"category": "KJNodes/experimental",
		"output_node": false
	},
	"LoadResAdapterNormalization": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"resadapter_path": [
					[
						"3Guofeng3_v32Light.safetensors",
						"AWPortrait_v1.4.safetensors",
						"AnythingV5Ink_v32Ink.safetensors",
						"CounterfeitV25_25.safetensors",
						"V08_V08.safetensors",
						"abyssorangemix2_Hard.safetensors",
						"abyssorangemix3AOM3_aom3a1b.safetensors",
						"abyssorangemix3AOM3_aom3a2.safetensors",
						"abyssorangemix3AOM3_aom3a3.safetensors",
						"animagine-xl-2.0.safetensors",
						"anygenV37_anygenv37.ckpt",
						"anygenz5.6.vae.pt",
						"aoaokoPVCStyleModel_pvcAOAOKO.safetensors",
						"awportrait_v13.safetensors",
						"beautifulRealistic_v60.safetensors",
						"cetusMix_Codaedition.safetensors",
						"chilloutmix_NiPrunedFp32Fix.safetensors",
						"coloringPage_v10.safetensors",
						"counterfeitxl_v10.safetensors",
						"cuteyukimixAdorable_neochapter2.safetensors",
						"cuteyukimixSpecializedAnd_echodimension.safetensors",
						"dosmix_.safetensors",
						"dreamshaperXL10_alpha2Xl10.safetensors",
						"dreamshaper_6BakedVae.safetensors",
						"etherBluMix_etherBluMix5.safetensors",
						"etherRealMix_etherRealMix3.safetensors",
						"ghostmix_v20Bakedvae.safetensors",
						"hassakuHentaiModel_hassakuv1.safetensors",
						"henmixReal_v10.safetensors",
						"juggernautXL_v8Rundiffusion.safetensors",
						"kohakuXLDelta_rev1.safetensors",
						"lyriel_v13.safetensors",
						"majicmixRealistic_v6.safetensors",
						"matrixHentaiPlusXL_v10.safetensors",
						"meinahentai_v2.safetensors",
						"meinahentai_v3.safetensors",
						"meinamix_meinaV7.safetensors",
						"meinapastel_v6Pastel.safetensors",
						"netaArtXL_v10.safetensors",
						"pastelMixStylizedAnime_pastelMixPrunedFP16.safetensors",
						"perfectWorld_v2Baked.safetensors",
						"perfectWorld_v4Baked.safetensors",
						"ponyDiffusionV6XL_v6StartWithThisOne.safetensors",
						"realisticVisionV20_v20.safetensors",
						"realvisxlV40_v40Bakedvae.safetensors",
						"sd-v1-5-pruned-noema-fp16.safetensors",
						"sd3_medium_incl_clips_t5xxlfp8.safetensors",
						"sd_xl_base_1.0.safetensors",
						"sd_xl_base_1.0_inpainting_0.1.safetensors",
						"sd_xl_refiner_1.0.safetensors",
						"sdxl_lightning_4step_unet.safetensors",
						"spiritforeseermix_spiritforeseerO.safetensors",
						"uberRealisticPornMerge_urpmv13.safetensors",
						"v1-5-pruned-emaonly.safetensors"
					]
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "LoadResAdapterNormalization",
		"display_name": "LoadResAdapterNormalization",
		"description": "",
		"category": "KJNodes/experimental",
		"output_node": false
	},
	"Superprompt": {
		"input": {
			"required": {
				"instruction_prompt": [
					"STRING",
					{
						"default": "Expand the following prompt to add more detail",
						"multiline": true
					}
				],
				"prompt": [
					"STRING",
					{
						"default": "",
						"multiline": true,
						"forceInput": true
					}
				],
				"max_new_tokens": [
					"INT",
					{
						"default": 128,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"STRING"
		],
		"name": "Superprompt",
		"display_name": "Superprompt",
		"description": "\n# SuperPrompt\nA T5 model fine-tuned on the SuperPrompt dataset for  \nupsampling text prompts to more detailed descriptions.  \nMeant to be used as a pre-generation step for text-to-image  \nmodels that benefit from more detailed prompts.  \nhttps://huggingface.co/roborovski/superprompt-v1\n",
		"category": "KJNodes/text",
		"output_node": false
	},
	"GLIGENTextBoxApplyBatch": {
		"input": {
			"required": {
				"conditioning_to": [
					"CONDITIONING"
				],
				"latents": [
					"LATENT"
				],
				"clip": [
					"CLIP"
				],
				"gligen_textbox_model": [
					"GLIGEN"
				],
				"text": [
					"STRING",
					{
						"multiline": true
					}
				],
				"width": [
					"INT",
					{
						"default": 64,
						"min": 8,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 64,
						"min": 8,
						"max": 16384,
						"step": 8
					}
				],
				"coordinates": [
					"STRING",
					{
						"multiline": true
					}
				],
				"interpolation": [
					[
						"straight",
						"CubicSpline"
					],
					{
						"default": "CubicSpline"
					}
				]
			}
		},
		"output": [
			"CONDITIONING",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"CONDITIONING",
			"IMAGE"
		],
		"name": "GLIGENTextBoxApplyBatch",
		"display_name": "GLIGENTextBoxApplyBatch",
		"description": "\nExperimental, does not function yet as ComfyUI base changes are needed\n",
		"category": "KJNodes/experimental",
		"output_node": false
	},
	"GLIGENTextBoxApplyBatchCoords": {
		"input": {
			"required": {
				"conditioning_to": [
					"CONDITIONING"
				],
				"latents": [
					"LATENT"
				],
				"clip": [
					"CLIP"
				],
				"gligen_textbox_model": [
					"GLIGEN"
				],
				"coordinates": [
					"STRING",
					{
						"forceInput": true
					}
				],
				"text": [
					"STRING",
					{
						"multiline": true
					}
				],
				"width": [
					"INT",
					{
						"default": 64,
						"min": 8,
						"max": 4096,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 64,
						"min": 8,
						"max": 4096,
						"step": 8
					}
				]
			}
		},
		"output": [
			"CONDITIONING",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"CONDITIONING",
			"IMAGE"
		],
		"name": "GLIGENTextBoxApplyBatchCoords",
		"display_name": "GLIGENTextBoxApplyBatchCoords",
		"description": "\nExperimental, does not function yet as ComfyUI base changes are needed\n",
		"category": "KJNodes/experimental",
		"output_node": false
	},
	"Intrinsic_lora_sampling": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"lora_name": [
					[]
				],
				"task": [
					[
						"depth map",
						"surface normals",
						"albedo",
						"shading"
					],
					{
						"default": "depth map"
					}
				],
				"text": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				],
				"clip": [
					"CLIP"
				],
				"vae": [
					"VAE"
				],
				"per_batch": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				]
			},
			"optional": {
				"image": [
					"IMAGE"
				],
				"optional_latent": [
					"LATENT"
				]
			}
		},
		"output": [
			"IMAGE",
			"LATENT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"LATENT"
		],
		"name": "Intrinsic_lora_sampling",
		"display_name": "Intrinsic_lora_sampling",
		"description": "\nSampler to use the intrinsic loras:  \nhttps://github.com/duxiaodan/intrinsic-lora  \nThese LoRAs are tiny and thus included  \nwith this node pack.\n",
		"category": "KJNodes",
		"output_node": false
	},
	"LayeredDiffusionApply": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"config": [
					[
						"SDXL, Attention Injection",
						"SDXL, Conv Injection",
						"SD15, Attention Injection, attn_sharing"
					]
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "LayeredDiffusionApply",
		"display_name": "Layer Diffuse Apply",
		"description": "",
		"category": "layer_diffuse",
		"output_node": false
	},
	"LayeredDiffusionJointApply": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"config": [
					[
						"SD15, attn_sharing, Batch size (3N)"
					]
				]
			},
			"optional": {
				"fg_cond": [
					"CONDITIONING"
				],
				"bg_cond": [
					"CONDITIONING"
				],
				"blended_cond": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "LayeredDiffusionJointApply",
		"display_name": "Layer Diffuse Joint Apply",
		"description": "",
		"category": "layer_diffuse",
		"output_node": false
	},
	"LayeredDiffusionCondApply": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"cond": [
					"CONDITIONING"
				],
				"uncond": [
					"CONDITIONING"
				],
				"latent": [
					"LATENT"
				],
				"config": [
					[
						"SDXL, Foreground",
						"SDXL, Background"
					]
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				]
			}
		},
		"output": [
			"MODEL",
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CONDITIONING",
			"CONDITIONING"
		],
		"name": "LayeredDiffusionCondApply",
		"display_name": "Layer Diffuse Cond Apply",
		"description": "",
		"category": "layer_diffuse",
		"output_node": false
	},
	"LayeredDiffusionCondJointApply": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"image": [
					"IMAGE"
				],
				"config": [
					[
						"SD15, Foreground, attn_sharing, Batch size (2N)",
						"SD15, Background, attn_sharing, Batch size (2N)"
					]
				]
			},
			"optional": {
				"cond": [
					"CONDITIONING"
				],
				"blended_cond": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "LayeredDiffusionCondJointApply",
		"display_name": "Layer Diffuse Cond Joint Apply",
		"description": "",
		"category": "layer_diffuse",
		"output_node": false
	},
	"LayeredDiffusionDiffApply": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"cond": [
					"CONDITIONING"
				],
				"uncond": [
					"CONDITIONING"
				],
				"blended_latent": [
					"LATENT"
				],
				"latent": [
					"LATENT"
				],
				"config": [
					[
						"SDXL, Foreground",
						"SDXL, Background"
					]
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				]
			}
		},
		"output": [
			"MODEL",
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CONDITIONING",
			"CONDITIONING"
		],
		"name": "LayeredDiffusionDiffApply",
		"display_name": "Layer Diffuse Diff Apply",
		"description": "",
		"category": "layer_diffuse",
		"output_node": false
	},
	"LayeredDiffusionDecode": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"images": [
					"IMAGE"
				],
				"sd_version": [
					[
						"SD15",
						"SDXL"
					],
					{
						"default": "SDXL"
					}
				],
				"sub_batch_size": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "LayeredDiffusionDecode",
		"display_name": "Layer Diffuse Decode",
		"description": "",
		"category": "layer_diffuse",
		"output_node": false
	},
	"LayeredDiffusionDecodeRGBA": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"images": [
					"IMAGE"
				],
				"sd_version": [
					[
						"SD15",
						"SDXL"
					],
					{
						"default": "SDXL"
					}
				],
				"sub_batch_size": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "LayeredDiffusionDecodeRGBA",
		"display_name": "Layer Diffuse Decode (RGBA)",
		"description": "",
		"category": "layer_diffuse",
		"output_node": false
	},
	"LayeredDiffusionDecodeSplit": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"images": [
					"IMAGE"
				],
				"frames": [
					"INT",
					{
						"default": 2,
						"min": 2,
						"max": 3,
						"step": 1
					}
				],
				"sd_version": [
					[
						"SD15",
						"SDXL"
					],
					{
						"default": "SDXL"
					}
				],
				"sub_batch_size": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 4096,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"IMAGE",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"IMAGE",
			"IMAGE"
		],
		"name": "LayeredDiffusionDecodeSplit",
		"display_name": "Layer Diffuse Decode (Split)",
		"description": "",
		"category": "layer_diffuse",
		"output_node": false
	},
	"huchenlei.OpenposeEditor": {
		"input": {
			"required": {
				"image": [
					[
						"ComfyUI_temp_cfdai_00001_.png",
						"ComfyUI_temp_cfdai_00002_.png",
						"ComfyUI_temp_cfdai_00003_.png",
						"ComfyUI_temp_cfdai_00004_.png",
						"ComfyUI_temp_cfdai_00005_.png",
						"ComfyUI_temp_cfdai_00006_.png",
						"ComfyUI_temp_cfdai_00007_.png",
						"ComfyUI_temp_cfdai_00008_.png",
						"ComfyUI_temp_cfdai_00009_.png",
						"ComfyUI_temp_cfdai_00010_.png",
						"ComfyUI_temp_cfdai_00011_.png"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "huchenlei.OpenposeEditor",
		"display_name": "OpenposeEditor+",
		"description": "",
		"category": "image/load_openpose+",
		"output_node": true
	},
	"ArithmeticBlend": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				],
				"image2": [
					"IMAGE"
				],
				"blend_mode": [
					[
						"add",
						"subtract",
						"difference"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ArithmeticBlend",
		"display_name": "ArithmeticBlend",
		"description": "",
		"category": "postprocessing/Blends",
		"output_node": false
	},
	"AsciiArt": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"char_size": [
					"INT",
					{
						"default": 12,
						"min": 0,
						"max": 64,
						"step": 2
					}
				],
				"font_size": [
					"INT",
					{
						"default": 12,
						"min": 0,
						"max": 64,
						"step": 2
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "AsciiArt",
		"display_name": "AsciiArt",
		"description": "",
		"category": "postprocessing/Effects",
		"output_node": false
	},
	"Blend": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				],
				"image2": [
					"IMAGE"
				],
				"blend_factor": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"blend_mode": [
					[
						"normal",
						"multiply",
						"screen",
						"overlay",
						"soft_light"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Blend",
		"display_name": "Blend",
		"description": "",
		"category": "postprocessing/Blends",
		"output_node": false
	},
	"Blur": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"blur_radius": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 15,
						"step": 1
					}
				],
				"sigma": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.1,
						"max": 10,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Blur",
		"display_name": "Blur",
		"description": "",
		"category": "postprocessing/Filters",
		"output_node": false
	},
	"CannyEdgeMask": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"lower_threshold": [
					"INT",
					{
						"default": 100,
						"min": 0,
						"max": 500,
						"step": 10
					}
				],
				"upper_threshold": [
					"INT",
					{
						"default": 200,
						"min": 0,
						"max": 500,
						"step": 10
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "CannyEdgeMask",
		"display_name": "CannyEdgeMask",
		"description": "",
		"category": "postprocessing/Masks",
		"output_node": false
	},
	"ChromaticAberration": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"red_shift": [
					"INT",
					{
						"default": 0,
						"min": -20,
						"max": 20,
						"step": 1
					}
				],
				"red_direction": [
					[
						"horizontal",
						"vertical"
					]
				],
				"green_shift": [
					"INT",
					{
						"default": 0,
						"min": -20,
						"max": 20,
						"step": 1
					}
				],
				"green_direction": [
					[
						"horizontal",
						"vertical"
					]
				],
				"blue_shift": [
					"INT",
					{
						"default": 0,
						"min": -20,
						"max": 20,
						"step": 1
					}
				],
				"blue_direction": [
					[
						"horizontal",
						"vertical"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ChromaticAberration",
		"display_name": "ChromaticAberration",
		"description": "",
		"category": "postprocessing/Effects",
		"output_node": false
	},
	"ColorCorrect": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"temperature": [
					"FLOAT",
					{
						"default": 0,
						"min": -100,
						"max": 100,
						"step": 5
					}
				],
				"hue": [
					"FLOAT",
					{
						"default": 0,
						"min": -90,
						"max": 90,
						"step": 5
					}
				],
				"brightness": [
					"FLOAT",
					{
						"default": 0,
						"min": -100,
						"max": 100,
						"step": 5
					}
				],
				"contrast": [
					"FLOAT",
					{
						"default": 0,
						"min": -100,
						"max": 100,
						"step": 5
					}
				],
				"saturation": [
					"FLOAT",
					{
						"default": 0,
						"min": -100,
						"max": 100,
						"step": 5
					}
				],
				"gamma": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.2,
						"max": 2.2,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ColorCorrect",
		"display_name": "ColorCorrect",
		"description": "",
		"category": "postprocessing/Color Adjustments",
		"output_node": false
	},
	"ColorTint": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.1,
						"max": 1,
						"step": 0.1
					}
				],
				"mode": [
					[
						"sepia",
						"red",
						"green",
						"blue",
						"cyan",
						"magenta",
						"yellow",
						"purple",
						"orange",
						"warm",
						"cool",
						"lime",
						"navy",
						"vintage",
						"rose",
						"teal",
						"maroon",
						"peach",
						"lavender",
						"olive"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ColorTint",
		"display_name": "ColorTint",
		"description": "",
		"category": "postprocessing/Color Adjustments",
		"output_node": false
	},
	"Dissolve": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				],
				"image2": [
					"IMAGE"
				],
				"dissolve_factor": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Dissolve",
		"display_name": "Dissolve",
		"description": "",
		"category": "postprocessing/Blends",
		"output_node": false
	},
	"DodgeAndBurn": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"mask": [
					"IMAGE"
				],
				"intensity": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"mode": [
					[
						"dodge",
						"burn",
						"dodge_and_burn",
						"burn_and_dodge",
						"color_dodge",
						"color_burn",
						"linear_dodge",
						"linear_burn"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "DodgeAndBurn",
		"display_name": "DodgeAndBurn",
		"description": "",
		"category": "postprocessing/Blends",
		"output_node": false
	},
	"FilmGrain": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"intensity": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"scale": [
					"FLOAT",
					{
						"default": 10,
						"min": 1,
						"max": 100,
						"step": 1
					}
				],
				"temperature": [
					"FLOAT",
					{
						"default": 0,
						"min": -100,
						"max": 100,
						"step": 1
					}
				],
				"vignette": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 10,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "FilmGrain",
		"display_name": "FilmGrain",
		"description": "",
		"category": "postprocessing/Effects",
		"output_node": false
	},
	"Glow": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"intensity": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 5,
						"step": 0.01
					}
				],
				"blur_radius": [
					"INT",
					{
						"default": 5,
						"min": 1,
						"max": 50,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Glow",
		"display_name": "Glow",
		"description": "",
		"category": "postprocessing/Effects",
		"output_node": false
	},
	"HSVThresholdMask": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"low_threshold": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1,
						"step": 0.1
					}
				],
				"high_threshold": [
					"FLOAT",
					{
						"default": 0.7,
						"min": 0,
						"max": 1,
						"step": 0.1
					}
				],
				"hsv_channel": [
					[
						"hue",
						"saturation",
						"value"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "HSVThresholdMask",
		"display_name": "HSVThresholdMask",
		"description": "",
		"category": "postprocessing/Masks",
		"output_node": false
	},
	"KuwaharaBlur": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"blur_radius": [
					"INT",
					{
						"default": 3,
						"min": 0,
						"max": 31,
						"step": 1
					}
				],
				"method": [
					[
						"mean",
						"gaussian"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "KuwaharaBlur",
		"display_name": "KuwaharaBlur",
		"description": "",
		"category": "postprocessing/Filters",
		"output_node": false
	},
	"Parabolize": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"coeff": [
					"FLOAT",
					{
						"default": 1,
						"min": -10,
						"max": 10,
						"step": 0.1
					}
				],
				"vertex_x": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.1
					}
				],
				"vertex_y": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Parabolize",
		"display_name": "Parabolize",
		"description": "",
		"category": "postprocessing/Color Adjustments",
		"output_node": false
	},
	"PencilSketch": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"blur_radius": [
					"INT",
					{
						"default": 5,
						"min": 1,
						"max": 31,
						"step": 1
					}
				],
				"sharpen_alpha": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "PencilSketch",
		"display_name": "PencilSketch",
		"description": "",
		"category": "postprocessing/Effects",
		"output_node": false
	},
	"PixelSort": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"mask": [
					"IMAGE"
				],
				"direction": [
					[
						"horizontal",
						"vertical"
					]
				],
				"span_limit": [
					"INT",
					{
						"default": null,
						"min": 0,
						"max": 100,
						"step": 5
					}
				],
				"sort_by": [
					[
						"hue",
						"saturation",
						"value"
					]
				],
				"order": [
					[
						"forward",
						"backward"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "PixelSort",
		"display_name": "PixelSort",
		"description": "",
		"category": "postprocessing/Effects",
		"output_node": false
	},
	"Pixelize": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"pixel_size": [
					"INT",
					{
						"default": 8,
						"min": 2,
						"max": 128,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Pixelize",
		"display_name": "Pixelize",
		"description": "",
		"category": "postprocessing/Effects",
		"output_node": false
	},
	"Quantize": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"colors": [
					"INT",
					{
						"default": 256,
						"min": 1,
						"max": 256,
						"step": 1
					}
				],
				"dither": [
					[
						"none",
						"floyd-steinberg"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Quantize",
		"display_name": "Quantize",
		"description": "",
		"category": "postprocessing/Color Adjustments",
		"output_node": false
	},
	"Sharpen": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"sharpen_radius": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 15,
						"step": 1
					}
				],
				"alpha": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.1,
						"max": 5,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Sharpen",
		"display_name": "Sharpen",
		"description": "",
		"category": "postprocessing/Filters",
		"output_node": false
	},
	"SineWave": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"amplitude": [
					"FLOAT",
					{
						"default": 10,
						"min": 0,
						"max": 150,
						"step": 5
					}
				],
				"frequency": [
					"FLOAT",
					{
						"default": 5,
						"min": 0,
						"max": 20,
						"step": 1
					}
				],
				"direction": [
					[
						"horizontal",
						"vertical"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "SineWave",
		"display_name": "SineWave",
		"description": "",
		"category": "postprocessing/Effects",
		"output_node": false
	},
	"Solarize": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Solarize",
		"display_name": "Solarize",
		"description": "",
		"category": "postprocessing/Color Adjustments",
		"output_node": false
	},
	"Vignette": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"a": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 10,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Vignette",
		"display_name": "Vignette",
		"description": "",
		"category": "postprocessing/Effects",
		"output_node": false
	},
	"ETN_LoadImageBase64": {
		"input": {
			"required": {
				"image": [
					"STRING",
					{
						"multiline": false
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "ETN_LoadImageBase64",
		"display_name": "Load Image (Base64)",
		"description": "",
		"category": "_external_tooling",
		"output_node": false
	},
	"ETN_LoadMaskBase64": {
		"input": {
			"required": {
				"mask": [
					"STRING",
					{
						"multiline": false
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "ETN_LoadMaskBase64",
		"display_name": "Load Mask (Base64)",
		"description": "",
		"category": "_external_tooling",
		"output_node": false
	},
	"ETN_SendImageWebSocket": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "ETN_SendImageWebSocket",
		"display_name": "Send Image (WebSocket)",
		"description": "",
		"category": "_external_tooling",
		"output_node": true
	},
	"ETN_CropImage": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"x": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 8192,
						"step": 1
					}
				],
				"y": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 8192,
						"step": 1
					}
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 8192,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 8192,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ETN_CropImage",
		"display_name": "Crop Image",
		"description": "",
		"category": "_external_tooling",
		"output_node": false
	},
	"ETN_ApplyMaskToImage": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ETN_ApplyMaskToImage",
		"display_name": "Apply Mask to Image",
		"description": "",
		"category": "_external_tooling",
		"output_node": false
	},
	"VHS_VideoCombine": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"frame_rate": [
					"INT",
					{
						"default": 8,
						"min": 1,
						"step": 1
					}
				],
				"loop_count": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "AnimateDiff"
					}
				],
				"format": [
					[
						"image/gif",
						"image/webp"
					]
				],
				"pingpong": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"save_output": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			},
			"optional": {
				"audio": [
					"VHS_AUDIO"
				],
				"batch_manager": [
					"VHS_BatchManager"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO",
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"VHS_FILENAMES"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"Filenames"
		],
		"name": "VHS_VideoCombine",
		"display_name": "Video Combine 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢",
		"output_node": true
	},
	"VHS_LoadVideo": {
		"input": {
			"required": {
				"video": [
					[]
				],
				"force_rate": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 60,
						"step": 1
					}
				],
				"force_size": [
					[
						"Disabled",
						"Custom Height",
						"Custom Width",
						"Custom",
						"256x?",
						"?x256",
						"256x256",
						"512x?",
						"?x512",
						"512x512"
					]
				],
				"custom_width": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 8192,
						"step": 8
					}
				],
				"custom_height": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 8192,
						"step": 8
					}
				],
				"frame_load_cap": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991,
						"step": 1
					}
				],
				"skip_first_frames": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991,
						"step": 1
					}
				],
				"select_every_nth": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 9007199254740991,
						"step": 1
					}
				]
			},
			"optional": {
				"batch_manager": [
					"VHS_BatchManager"
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"IMAGE",
			"INT",
			"VHS_AUDIO"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"frame_count",
			"audio"
		],
		"name": "VHS_LoadVideo",
		"display_name": "Load Video (Upload) 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢",
		"output_node": false
	},
	"VHS_LoadVideoPath": {
		"input": {
			"required": {
				"video": [
					"STRING",
					{
						"default": "X://insert/path/here.mp4",
						"vhs_path_extensions": [
							"webm",
							"mp4",
							"mkv",
							"gif"
						]
					}
				],
				"force_rate": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 60,
						"step": 1
					}
				],
				"force_size": [
					[
						"Disabled",
						"Custom Height",
						"Custom Width",
						"Custom",
						"256x?",
						"?x256",
						"256x256",
						"512x?",
						"?x512",
						"512x512"
					]
				],
				"custom_width": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 8192,
						"step": 8
					}
				],
				"custom_height": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 8192,
						"step": 8
					}
				],
				"frame_load_cap": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991,
						"step": 1
					}
				],
				"skip_first_frames": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991,
						"step": 1
					}
				],
				"select_every_nth": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 9007199254740991,
						"step": 1
					}
				]
			},
			"optional": {
				"batch_manager": [
					"VHS_BatchManager"
				]
			},
			"hidden": {
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"IMAGE",
			"INT",
			"VHS_AUDIO"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"frame_count",
			"audio"
		],
		"name": "VHS_LoadVideoPath",
		"display_name": "Load Video (Path) 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢",
		"output_node": false
	},
	"VHS_LoadImages": {
		"input": {
			"required": {
				"directory": [
					[]
				]
			},
			"optional": {
				"image_load_cap": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991,
						"step": 1
					}
				],
				"skip_first_images": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991,
						"step": 1
					}
				],
				"select_every_nth": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 9007199254740991,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK",
			"INT"
		],
		"name": "VHS_LoadImages",
		"display_name": "Load Images (Upload) 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢",
		"output_node": false
	},
	"VHS_LoadImagesPath": {
		"input": {
			"required": {
				"directory": [
					"STRING",
					{
						"default": "X://path/to/images",
						"vhs_path_extensions": []
					}
				]
			},
			"optional": {
				"image_load_cap": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991,
						"step": 1
					}
				],
				"skip_first_images": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9007199254740991,
						"step": 1
					}
				],
				"select_every_nth": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 9007199254740991,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK",
			"INT"
		],
		"name": "VHS_LoadImagesPath",
		"display_name": "Load Images (Path) 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢",
		"output_node": false
	},
	"VHS_LoadAudio": {
		"input": {
			"required": {
				"audio_file": [
					"STRING",
					{
						"default": "input/",
						"vhs_path_extensions": [
							"wav",
							"mp3",
							"ogg",
							"m4a",
							"flac"
						]
					}
				]
			},
			"optional": {
				"seek_seconds": [
					"FLOAT",
					{
						"default": 0,
						"min": 0
					}
				]
			}
		},
		"output": [
			"VHS_AUDIO"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"audio"
		],
		"name": "VHS_LoadAudio",
		"display_name": "Load Audio (Path)🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢",
		"output_node": false
	},
	"VHS_PruneOutputs": {
		"input": {
			"required": {
				"filenames": [
					"VHS_FILENAMES"
				],
				"options": [
					[
						"Intermediate",
						"Intermediate and Utility"
					]
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "VHS_PruneOutputs",
		"display_name": "Prune Outputs 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢",
		"output_node": true
	},
	"VHS_BatchManager": {
		"input": {
			"required": {
				"frames_per_batch": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 128,
						"step": 1
					}
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"unique_id": "UNIQUE_ID"
			}
		},
		"output": [
			"VHS_BatchManager"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"VHS_BatchManager"
		],
		"name": "VHS_BatchManager",
		"display_name": "Batch Manager 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢",
		"output_node": false
	},
	"VHS_SplitLatents": {
		"input": {
			"required": {
				"latents": [
					"LATENT"
				],
				"split_index": [
					"INT",
					{
						"default": 0,
						"step": 1,
						"min": -9007199254740991,
						"max": 9007199254740991
					}
				]
			}
		},
		"output": [
			"LATENT",
			"INT",
			"LATENT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"LATENT_A",
			"A_count",
			"LATENT_B",
			"B_count"
		],
		"name": "VHS_SplitLatents",
		"display_name": "Split Latent Batch 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/latent",
		"output_node": false
	},
	"VHS_SplitImages": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"split_index": [
					"INT",
					{
						"default": 0,
						"step": 1,
						"min": -9007199254740991,
						"max": 9007199254740991
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"INT",
			"IMAGE",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"IMAGE_A",
			"A_count",
			"IMAGE_B",
			"B_count"
		],
		"name": "VHS_SplitImages",
		"display_name": "Split Image Batch 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/image",
		"output_node": false
	},
	"VHS_SplitMasks": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"split_index": [
					"INT",
					{
						"default": 0,
						"step": 1,
						"min": -9007199254740991,
						"max": 9007199254740991
					}
				]
			}
		},
		"output": [
			"MASK",
			"INT",
			"MASK",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false
		],
		"output_name": [
			"MASK_A",
			"A_count",
			"MASK_B",
			"B_count"
		],
		"name": "VHS_SplitMasks",
		"display_name": "Split Mask Batch 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/mask",
		"output_node": false
	},
	"VHS_MergeLatents": {
		"input": {
			"required": {
				"latents_A": [
					"LATENT"
				],
				"latents_B": [
					"LATENT"
				],
				"merge_strategy": [
					[
						"match A",
						"match B",
						"match smaller",
						"match larger"
					]
				],
				"scale_method": [
					[
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic",
						"bislerp"
					]
				],
				"crop": [
					[
						"disabled",
						"center"
					]
				]
			}
		},
		"output": [
			"LATENT",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"LATENT",
			"count"
		],
		"name": "VHS_MergeLatents",
		"display_name": "Merge Latent Batches 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/latent",
		"output_node": false
	},
	"VHS_MergeImages": {
		"input": {
			"required": {
				"images_A": [
					"IMAGE"
				],
				"images_B": [
					"IMAGE"
				],
				"merge_strategy": [
					[
						"match A",
						"match B",
						"match smaller",
						"match larger"
					]
				],
				"scale_method": [
					[
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic",
						"bislerp"
					]
				],
				"crop": [
					[
						"disabled",
						"center"
					]
				]
			}
		},
		"output": [
			"IMAGE",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"count"
		],
		"name": "VHS_MergeImages",
		"display_name": "Merge Image Batches 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/image",
		"output_node": false
	},
	"VHS_MergeMasks": {
		"input": {
			"required": {
				"mask_A": [
					"MASK"
				],
				"mask_B": [
					"MASK"
				],
				"merge_strategy": [
					[
						"match A",
						"match B",
						"match smaller",
						"match larger"
					]
				],
				"scale_method": [
					[
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic",
						"bislerp"
					]
				],
				"crop": [
					[
						"disabled",
						"center"
					]
				]
			}
		},
		"output": [
			"MASK",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MASK",
			"count"
		],
		"name": "VHS_MergeMasks",
		"display_name": "Merge Mask Batches 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/mask",
		"output_node": false
	},
	"VHS_SelectEveryNthLatent": {
		"input": {
			"required": {
				"latents": [
					"LATENT"
				],
				"select_every_nth": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 9007199254740991,
						"step": 1
					}
				]
			}
		},
		"output": [
			"LATENT",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"LATENT",
			"count"
		],
		"name": "VHS_SelectEveryNthLatent",
		"display_name": "Select Every Nth Latent 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/latent",
		"output_node": false
	},
	"VHS_SelectEveryNthImage": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"select_every_nth": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 9007199254740991,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"count"
		],
		"name": "VHS_SelectEveryNthImage",
		"display_name": "Select Every Nth Image 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/image",
		"output_node": false
	},
	"VHS_SelectEveryNthMask": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"select_every_nth": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 9007199254740991,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MASK",
			"count"
		],
		"name": "VHS_SelectEveryNthMask",
		"display_name": "Select Every Nth Mask 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/mask",
		"output_node": false
	},
	"VHS_GetLatentCount": {
		"input": {
			"required": {
				"latents": [
					"LATENT"
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"count"
		],
		"name": "VHS_GetLatentCount",
		"display_name": "Get Latent Count 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/latent",
		"output_node": false
	},
	"VHS_GetImageCount": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"count"
		],
		"name": "VHS_GetImageCount",
		"display_name": "Get Image Count 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/image",
		"output_node": false
	},
	"VHS_GetMaskCount": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"count"
		],
		"name": "VHS_GetMaskCount",
		"display_name": "Get Mask Count 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/mask",
		"output_node": false
	},
	"VHS_DuplicateLatents": {
		"input": {
			"required": {
				"latents": [
					"LATENT"
				],
				"multiply_by": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 9007199254740991,
						"step": 1
					}
				]
			}
		},
		"output": [
			"LATENT",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"LATENT",
			"count"
		],
		"name": "VHS_DuplicateLatents",
		"display_name": "Duplicate Latent Batch 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/latent",
		"output_node": false
	},
	"VHS_DuplicateImages": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				],
				"multiply_by": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 9007199254740991,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"count"
		],
		"name": "VHS_DuplicateImages",
		"display_name": "Duplicate Image Batch 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/image",
		"output_node": false
	},
	"VHS_DuplicateMasks": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"multiply_by": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 9007199254740991,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MASK",
			"count"
		],
		"name": "VHS_DuplicateMasks",
		"display_name": "Duplicate Mask Batch 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/mask",
		"output_node": false
	},
	"VHS_VAEEncodeBatched": {
		"input": {
			"required": {
				"pixels": [
					"IMAGE"
				],
				"vae": [
					"VAE"
				],
				"per_batch": [
					"INT",
					{
						"default": 16,
						"min": 1
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "VHS_VAEEncodeBatched",
		"display_name": "VAE Encode Batched 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/batched nodes",
		"output_node": false
	},
	"VHS_VAEDecodeBatched": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				],
				"vae": [
					"VAE"
				],
				"per_batch": [
					"INT",
					{
						"default": 16,
						"min": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "VHS_VAEDecodeBatched",
		"display_name": "VAE Decode Batched 🎥🅥🅗🅢",
		"description": "",
		"category": "Video Helper Suite 🎥🅥🅗🅢/batched nodes",
		"output_node": false
	},
	"BNK_CLIPTextEncodeAdvanced": {
		"input": {
			"required": {
				"text": [
					"STRING",
					{
						"multiline": true
					}
				],
				"clip": [
					"CLIP"
				],
				"token_normalization": [
					[
						"none",
						"mean",
						"length",
						"length+mean"
					]
				],
				"weight_interpretation": [
					[
						"comfy",
						"A1111",
						"compel",
						"comfy++",
						"down_weight"
					]
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "BNK_CLIPTextEncodeAdvanced",
		"display_name": "CLIP Text Encode (Advanced)",
		"description": "",
		"category": "conditioning/advanced",
		"output_node": false
	},
	"BNK_CLIPTextEncodeSDXLAdvanced": {
		"input": {
			"required": {
				"text_l": [
					"STRING",
					{
						"multiline": true
					}
				],
				"text_g": [
					"STRING",
					{
						"multiline": true
					}
				],
				"clip": [
					"CLIP"
				],
				"token_normalization": [
					[
						"none",
						"mean",
						"length",
						"length+mean"
					]
				],
				"weight_interpretation": [
					[
						"comfy",
						"A1111",
						"compel",
						"comfy++",
						"down_weight"
					]
				],
				"balance": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "BNK_CLIPTextEncodeSDXLAdvanced",
		"display_name": "CLIP Text Encode SDXL (Advanced)",
		"description": "",
		"category": "conditioning/advanced",
		"output_node": false
	},
	"BNK_AddCLIPSDXLParams": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"width": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"height": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"crop_w": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384
					}
				],
				"crop_h": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384
					}
				],
				"target_width": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"target_height": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "BNK_AddCLIPSDXLParams",
		"display_name": "Add CLIP SDXL Params",
		"description": "",
		"category": "conditioning/advanced",
		"output_node": false
	},
	"BNK_AddCLIPSDXLRParams": {
		"input": {
			"required": {
				"conditioning": [
					"CONDITIONING"
				],
				"width": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"height": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"ascore": [
					"FLOAT",
					{
						"default": 6,
						"min": 0,
						"max": 1000,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "BNK_AddCLIPSDXLRParams",
		"display_name": "Add CLIP SDXL Refiner Params",
		"description": "",
		"category": "conditioning/advanced",
		"output_node": false
	},
	"AnimeFace_SemSegPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"remove_background_using_abg": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 512,
						"max": 512,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"ABG_CHARACTER_MASK (MASK)"
		],
		"name": "AnimeFace_SemSegPreprocessor",
		"display_name": "Anime Face Segmentor",
		"description": "",
		"category": "ControlNet Preprocessors/Semantic Segmentation",
		"output_node": false
	},
	"AnyLineArtPreprocessor_aux": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"merge_with_lineart": [
					[
						"lineart_standard",
						"lineart_realisitic",
						"lineart_anime",
						"manga_line"
					],
					{
						"default": "lineart_standard"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 1280,
						"min": 512,
						"max": 16384,
						"step": 8
					}
				]
			},
			"optional": {
				"lineart_lower_bound": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"lineart_upper_bound": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"object_min_size": [
					"INT",
					{
						"default": 36,
						"min": 1,
						"max": 16384
					}
				],
				"object_connectivity": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 16384
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"image"
		],
		"name": "AnyLineArtPreprocessor_aux",
		"display_name": "AnyLine Lineart",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"BinaryPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"bin_threshold": [
					"INT",
					{
						"default": 100,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "BinaryPreprocessor",
		"display_name": "Binary Lines",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"CannyEdgePreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"low_threshold": [
					"INT",
					{
						"default": 100,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"high_threshold": [
					"INT",
					{
						"default": 200,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "CannyEdgePreprocessor",
		"display_name": "Canny Edge",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"ColorPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ColorPreprocessor",
		"display_name": "Color Pallete",
		"description": "",
		"category": "ControlNet Preprocessors/T2IAdapter-only",
		"output_node": false
	},
	"DensePosePreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"model": [
					[
						"densepose_r50_fpn_dl.torchscript",
						"densepose_r101_fpn_dl.torchscript"
					],
					{
						"default": "densepose_r50_fpn_dl.torchscript"
					}
				],
				"cmap": [
					[
						"Viridis (MagicAnimate)",
						"Parula (CivitAI)"
					],
					{
						"default": "Viridis (MagicAnimate)"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "DensePosePreprocessor",
		"display_name": "DensePose Estimator",
		"description": "",
		"category": "ControlNet Preprocessors/Faces and Poses Estimators",
		"output_node": false
	},
	"DepthAnythingPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"ckpt_name": [
					[
						"depth_anything_vitl14.pth",
						"depth_anything_vitb14.pth",
						"depth_anything_vits14.pth"
					],
					{
						"default": "depth_anything_vitl14.pth"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "DepthAnythingPreprocessor",
		"display_name": "Depth Anything",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"Zoe_DepthAnythingPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"environment": [
					[
						"indoor",
						"outdoor"
					],
					{
						"default": "indoor"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Zoe_DepthAnythingPreprocessor",
		"display_name": "Zoe Depth Anything",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"DiffusionEdge_Preprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"environment": [
					[
						"indoor",
						"urban",
						"natrual"
					],
					{
						"default": "indoor"
					}
				],
				"patch_batch_size": [
					"INT",
					{
						"default": 4,
						"min": 1,
						"max": 16
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "DiffusionEdge_Preprocessor",
		"display_name": "Diffusion Edge (batch size ↑ => speed ↑, VRAM ↑)",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"DSINE-NormalMapPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"fov": [
					"FLOAT",
					{
						"min": 0,
						"max": 365,
						"step": 0.05,
						"default": 60
					}
				],
				"iterations": [
					"INT",
					{
						"min": 1,
						"max": 20,
						"step": 1,
						"default": 5
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "DSINE-NormalMapPreprocessor",
		"display_name": "DSINE Normal Map",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"DWPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"detect_hand": [
					[
						"enable",
						"disable"
					],
					{
						"default": "enable"
					}
				],
				"detect_body": [
					[
						"enable",
						"disable"
					],
					{
						"default": "enable"
					}
				],
				"detect_face": [
					[
						"enable",
						"disable"
					],
					{
						"default": "enable"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				],
				"bbox_detector": [
					[
						"yolox_l.torchscript.pt",
						"yolox_l.onnx",
						"yolo_nas_l_fp16.onnx",
						"yolo_nas_m_fp16.onnx",
						"yolo_nas_s_fp16.onnx"
					],
					{
						"default": "yolox_l.onnx"
					}
				],
				"pose_estimator": [
					[
						"dw-ll_ucoco_384_bs5.torchscript.pt",
						"dw-ll_ucoco_384.onnx",
						"dw-ll_ucoco.onnx"
					],
					{
						"default": "dw-ll_ucoco_384_bs5.torchscript.pt"
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"POSE_KEYPOINT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"POSE_KEYPOINT"
		],
		"name": "DWPreprocessor",
		"display_name": "DWPose Estimator",
		"description": "",
		"category": "ControlNet Preprocessors/Faces and Poses Estimators",
		"output_node": false
	},
	"AnimalPosePreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"bbox_detector": [
					[
						"yolox_l.torchscript.pt",
						"yolox_l.onnx",
						"yolo_nas_l_fp16.onnx",
						"yolo_nas_m_fp16.onnx",
						"yolo_nas_s_fp16.onnx"
					],
					{
						"default": "yolox_l.torchscript.pt"
					}
				],
				"pose_estimator": [
					[
						"rtmpose-m_ap10k_256_bs5.torchscript.pt",
						"rtmpose-m_ap10k_256.onnx"
					],
					{
						"default": "rtmpose-m_ap10k_256_bs5.torchscript.pt"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"POSE_KEYPOINT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"POSE_KEYPOINT"
		],
		"name": "AnimalPosePreprocessor",
		"display_name": "AnimalPose Estimator (AP10K)",
		"description": "",
		"category": "ControlNet Preprocessors/Faces and Poses Estimators",
		"output_node": false
	},
	"HEDPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"safe": [
					[
						"enable",
						"disable"
					],
					{
						"default": "enable"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "HEDPreprocessor",
		"display_name": "HED Soft-Edge Lines",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"FakeScribblePreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"safe": [
					[
						"enable",
						"disable"
					],
					{
						"default": "enable"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "FakeScribblePreprocessor",
		"display_name": "Fake Scribble Lines (aka scribble_hed)",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"InpaintPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "InpaintPreprocessor",
		"display_name": "Inpaint Preprocessor",
		"description": "",
		"category": "ControlNet Preprocessors/others",
		"output_node": false
	},
	"LeReS-DepthMapPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"rm_nearest": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.1
					}
				],
				"rm_background": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 0.1
					}
				],
				"boost": [
					[
						"enable",
						"disable"
					],
					{
						"default": "disable"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "LeReS-DepthMapPreprocessor",
		"display_name": "LeReS Depth Map (enable boost for leres++)",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"LineArtPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"coarse": [
					[
						"disable",
						"enable"
					],
					{
						"default": "disable"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "LineArtPreprocessor",
		"display_name": "Realistic Lineart",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"AnimeLineArtPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "AnimeLineArtPreprocessor",
		"display_name": "Anime Lineart",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"LineartStandardPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"guassian_sigma": [
					"FLOAT",
					{
						"default": 6,
						"min": 0,
						"max": 100
					}
				],
				"intensity_threshold": [
					"INT",
					{
						"default": 8,
						"min": 0,
						"max": 16
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "LineartStandardPreprocessor",
		"display_name": "Standard Lineart",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"Manga2Anime_LineArt_Preprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Manga2Anime_LineArt_Preprocessor",
		"display_name": "Manga Lineart (aka lineart_anime_denoise)",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"MediaPipe-FaceMeshPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"max_faces": [
					"INT",
					{
						"default": 10,
						"min": 1,
						"max": 50,
						"step": 1
					}
				],
				"min_confidence": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0.01,
						"max": 1,
						"step": 0.01
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "MediaPipe-FaceMeshPreprocessor",
		"display_name": "MediaPipe Face Mesh",
		"description": "",
		"category": "ControlNet Preprocessors/Faces and Poses Estimators",
		"output_node": false
	},
	"MeshGraphormer-DepthMapPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"mask_bbox_padding": [
					"INT",
					{
						"default": 30,
						"min": 0,
						"max": 100
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				],
				"mask_type": [
					[
						"based_on_depth",
						"tight_bboxes",
						"original"
					],
					{
						"default": "based_on_depth"
					}
				],
				"mask_expand": [
					"INT",
					{
						"default": 5,
						"min": -16384,
						"max": 16384,
						"step": 1
					}
				],
				"rand_seed": [
					"INT",
					{
						"default": 88,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"detect_thr": [
					"FLOAT",
					{
						"default": 0.6,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"presence_thr": [
					"FLOAT",
					{
						"default": 0.6,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"INPAINTING_MASK"
		],
		"name": "MeshGraphormer-DepthMapPreprocessor",
		"display_name": "MeshGraphormer Hand Refiner",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"MeshGraphormer+ImpactDetector-DepthMapPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"bbox_detector": [
					"BBOX_DETECTOR"
				]
			},
			"optional": {
				"bbox_threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"bbox_dilation": [
					"INT",
					{
						"default": 10,
						"min": -512,
						"max": 512,
						"step": 1
					}
				],
				"bbox_crop_factor": [
					"FLOAT",
					{
						"default": 3,
						"min": 1,
						"max": 10,
						"step": 0.1
					}
				],
				"drop_size": [
					"INT",
					{
						"min": 1,
						"max": 16384,
						"step": 1,
						"default": 10
					}
				],
				"mask_bbox_padding": [
					"INT",
					{
						"default": 30,
						"min": 0,
						"max": 100
					}
				],
				"mask_type": [
					[
						"based_on_depth",
						"tight_bboxes",
						"original"
					],
					{
						"default": "based_on_depth"
					}
				],
				"mask_expand": [
					"INT",
					{
						"default": 5,
						"min": -16384,
						"max": 16384,
						"step": 1
					}
				],
				"rand_seed": [
					"INT",
					{
						"default": 88,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"INPAINTING_MASK"
		],
		"name": "MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
		"display_name": "MeshGraphormer Hand Refiner With External Detector",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"Metric3D-DepthMapPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"backbone": [
					[
						"vit-small",
						"vit-large",
						"vit-giant2"
					],
					{
						"default": "vit-small"
					}
				],
				"fx": [
					"INT",
					{
						"default": 1000,
						"min": 1,
						"max": 16384
					}
				],
				"fy": [
					"INT",
					{
						"default": 1000,
						"min": 1,
						"max": 16384
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Metric3D-DepthMapPreprocessor",
		"display_name": "Metric3D Depth Map",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"Metric3D-NormalMapPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"backbone": [
					[
						"vit-small",
						"vit-large",
						"vit-giant2"
					],
					{
						"default": "vit-small"
					}
				],
				"fx": [
					"INT",
					{
						"default": 1000,
						"min": 1,
						"max": 16384
					}
				],
				"fy": [
					"INT",
					{
						"default": 1000,
						"min": 1,
						"max": 16384
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Metric3D-NormalMapPreprocessor",
		"display_name": "Metric3D Normal Map",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"MiDaS-NormalMapPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"a": [
					"FLOAT",
					{
						"default": 6.283185307179586,
						"min": 0,
						"max": 15.707963267948966,
						"step": 0.05
					}
				],
				"bg_threshold": [
					"FLOAT",
					{
						"default": 0.1,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "MiDaS-NormalMapPreprocessor",
		"display_name": "MiDaS Normal Map",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"MiDaS-DepthMapPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"a": [
					"FLOAT",
					{
						"default": 6.283185307179586,
						"min": 0,
						"max": 15.707963267948966,
						"step": 0.05
					}
				],
				"bg_threshold": [
					"FLOAT",
					{
						"default": 0.1,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "MiDaS-DepthMapPreprocessor",
		"display_name": "MiDaS Depth Map",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"M-LSDPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"score_threshold": [
					"FLOAT",
					{
						"default": 0.1,
						"min": 0.01,
						"max": 2,
						"step": 0.01
					}
				],
				"dist_threshold": [
					"FLOAT",
					{
						"default": 0.1,
						"min": 0.01,
						"max": 20,
						"step": 0.01
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "M-LSDPreprocessor",
		"display_name": "M-LSD Lines",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"BAE-NormalMapPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "BAE-NormalMapPreprocessor",
		"display_name": "BAE Normal Map",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"OneFormer-COCO-SemSegPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "OneFormer-COCO-SemSegPreprocessor",
		"display_name": "OneFormer COCO Segmentor",
		"description": "",
		"category": "ControlNet Preprocessors/Semantic Segmentation",
		"output_node": false
	},
	"OneFormer-ADE20K-SemSegPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "OneFormer-ADE20K-SemSegPreprocessor",
		"display_name": "OneFormer ADE20K Segmentor",
		"description": "",
		"category": "ControlNet Preprocessors/Semantic Segmentation",
		"output_node": false
	},
	"OpenposePreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"detect_hand": [
					[
						"enable",
						"disable"
					],
					{
						"default": "enable"
					}
				],
				"detect_body": [
					[
						"enable",
						"disable"
					],
					{
						"default": "enable"
					}
				],
				"detect_face": [
					[
						"enable",
						"disable"
					],
					{
						"default": "enable"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"POSE_KEYPOINT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"POSE_KEYPOINT"
		],
		"name": "OpenposePreprocessor",
		"display_name": "OpenPose Pose",
		"description": "",
		"category": "ControlNet Preprocessors/Faces and Poses Estimators",
		"output_node": false
	},
	"PiDiNetPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"safe": [
					[
						"enable",
						"disable"
					],
					{
						"default": "enable"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "PiDiNetPreprocessor",
		"display_name": "PiDiNet Soft-Edge Lines",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"SavePoseKpsAsJsonFile": {
		"input": {
			"required": {
				"pose_kps": [
					"POSE_KEYPOINT"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "PoseKeypoint"
					}
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "SavePoseKpsAsJsonFile",
		"display_name": "Save Pose Keypoints",
		"description": "",
		"category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
		"output_node": true
	},
	"FacialPartColoringFromPoseKps": {
		"input": {
			"required": {
				"pose_kps": [
					"POSE_KEYPOINT"
				],
				"mode": [
					[
						"point",
						"polygon"
					],
					{
						"default": "polygon"
					}
				],
				"skin": [
					"STRING",
					{
						"default": "rgb(0, 153, 255)",
						"multiline": false
					}
				],
				"left_eye": [
					"STRING",
					{
						"default": "rgb(0, 204, 153)",
						"multiline": false
					}
				],
				"right_eye": [
					"STRING",
					{
						"default": "rgb(255, 153, 0)",
						"multiline": false
					}
				],
				"nose": [
					"STRING",
					{
						"default": "rgb(255, 102, 255)",
						"multiline": false
					}
				],
				"upper_lip": [
					"STRING",
					{
						"default": "rgb(102, 0, 51)",
						"multiline": false
					}
				],
				"inner_mouth": [
					"STRING",
					{
						"default": "rgb(255, 204, 255)",
						"multiline": false
					}
				],
				"lower_lip": [
					"STRING",
					{
						"default": "rgb(255, 0, 102)",
						"multiline": false
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "FacialPartColoringFromPoseKps",
		"display_name": "Colorize Facial Parts from PoseKPS",
		"description": "",
		"category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
		"output_node": false
	},
	"UpperBodyTrackingFromPoseKps": {
		"input": {
			"required": {
				"pose_kps": [
					"POSE_KEYPOINT"
				],
				"id_include": [
					"STRING",
					{
						"default": "",
						"multiline": false
					}
				],
				"Head_width_height": [
					"STRING",
					{
						"default": "256, 256",
						"multiline": false
					}
				],
				"Neck_width_height": [
					"STRING",
					{
						"default": "100, 100",
						"multiline": false
					}
				],
				"Shoulder_width_height": [
					"STRING",
					{
						"default": "",
						"multiline": false
					}
				],
				"Torso_width_height": [
					"STRING",
					{
						"default": "350, 450",
						"multiline": false
					}
				],
				"RArm_width_height": [
					"STRING",
					{
						"default": "128, 256",
						"multiline": false
					}
				],
				"RForearm_width_height": [
					"STRING",
					{
						"default": "128, 256",
						"multiline": false
					}
				],
				"LArm_width_height": [
					"STRING",
					{
						"default": "128, 256",
						"multiline": false
					}
				],
				"LForearm_width_height": [
					"STRING",
					{
						"default": "128, 256",
						"multiline": false
					}
				]
			}
		},
		"output": [
			"TRACKING",
			"STRING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"tracking",
			"prompt"
		],
		"name": "UpperBodyTrackingFromPoseKps",
		"display_name": "Upper Body Tracking From PoseKps (InstanceDiffusion)",
		"description": "",
		"category": "ControlNet Preprocessors/Pose Keypoint Postprocess",
		"output_node": false
	},
	"ImageLuminanceDetector": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"gamma_correction": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.1,
						"max": 2,
						"step": 0.001
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageLuminanceDetector",
		"display_name": "Image Luminance",
		"description": "",
		"category": "ControlNet Preprocessors/Recolor",
		"output_node": false
	},
	"ImageIntensityDetector": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"gamma_correction": [
					"FLOAT",
					{
						"default": 1,
						"min": 0.1,
						"max": 2,
						"step": 0.001
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageIntensityDetector",
		"display_name": "Image Intensity",
		"description": "",
		"category": "ControlNet Preprocessors/Recolor",
		"output_node": false
	},
	"ScribblePreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ScribblePreprocessor",
		"display_name": "Scribble Lines",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"Scribble_XDoG_Preprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"threshold": [
					"INT",
					{
						"default": 32,
						"min": 1,
						"max": 64,
						"step": 1
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Scribble_XDoG_Preprocessor",
		"display_name": "Scribble XDoG Lines",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"Scribble_PiDiNet_Preprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"safe": [
					[
						"enable",
						"disable"
					],
					{
						"default": "enable"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Scribble_PiDiNet_Preprocessor",
		"display_name": "Scribble PiDiNet Lines",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"SAMPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "SAMPreprocessor",
		"display_name": "SAM Segmentor",
		"description": "",
		"category": "ControlNet Preprocessors/others",
		"output_node": false
	},
	"ShufflePreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ShufflePreprocessor",
		"display_name": "Content Shuffle",
		"description": "",
		"category": "ControlNet Preprocessors/T2IAdapter-only",
		"output_node": false
	},
	"TEEDPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"safe_steps": [
					"INT",
					{
						"default": 2,
						"min": 0,
						"max": 10
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "TEEDPreprocessor",
		"display_name": "TEEDPreprocessor",
		"description": "",
		"category": "ControlNet Preprocessors/Line Extractors",
		"output_node": false
	},
	"TilePreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"pyrUp_iters": [
					"INT",
					{
						"default": 3,
						"min": 1,
						"max": 10,
						"step": 1
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "TilePreprocessor",
		"display_name": "Tile",
		"description": "",
		"category": "ControlNet Preprocessors/tile",
		"output_node": false
	},
	"TTPlanet_TileGF_Preprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"scale_factor": [
					"FLOAT",
					{
						"default": 1,
						"min": 1,
						"max": 8,
						"step": 0.05
					}
				],
				"blur_strength": [
					"FLOAT",
					{
						"default": 2,
						"min": 1,
						"max": 10,
						"step": 0.1
					}
				],
				"radius": [
					"INT",
					{
						"default": 7,
						"min": 1,
						"max": 20,
						"step": 1
					}
				],
				"eps": [
					"FLOAT",
					{
						"default": 0.01,
						"min": 0.001,
						"max": 0.1,
						"step": 0.001
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "TTPlanet_TileGF_Preprocessor",
		"display_name": "TTPlanet Tile GuidedFilter",
		"description": "",
		"category": "ControlNet Preprocessors/tile",
		"output_node": false
	},
	"TTPlanet_TileSimple_Preprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"scale_factor": [
					"FLOAT",
					{
						"default": 1,
						"min": 1,
						"max": 8,
						"step": 0.05
					}
				],
				"blur_strength": [
					"FLOAT",
					{
						"default": 2,
						"min": 1,
						"max": 10,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "TTPlanet_TileSimple_Preprocessor",
		"display_name": "TTPlanet Tile Simple",
		"description": "",
		"category": "ControlNet Preprocessors/tile",
		"output_node": false
	},
	"UniFormer-SemSegPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "UniFormer-SemSegPreprocessor",
		"display_name": "UniFormer Segmentor",
		"description": "",
		"category": "ControlNet Preprocessors/Semantic Segmentation",
		"output_node": false
	},
	"SemSegPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "SemSegPreprocessor",
		"display_name": "Semantic Segmentor (legacy, alias for UniFormer)",
		"description": "",
		"category": "ControlNet Preprocessors/Semantic Segmentation",
		"output_node": false
	},
	"Unimatch_OptFlowPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"ckpt_name": [
					[
						"gmflow-scale1-mixdata.pth",
						"gmflow-scale2-mixdata.pth",
						"gmflow-scale2-regrefine6-mixdata.pth"
					],
					{
						"default": "gmflow-scale2-regrefine6-mixdata.pth"
					}
				],
				"backward_flow": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"bidirectional_flow": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"OPTICAL_FLOW",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"OPTICAL_FLOW",
			"PREVIEW_IMAGE"
		],
		"name": "Unimatch_OptFlowPreprocessor",
		"display_name": "Unimatch Optical Flow",
		"description": "",
		"category": "ControlNet Preprocessors/Optical Flow",
		"output_node": false
	},
	"MaskOptFlow": {
		"input": {
			"required": {
				"optical_flow": [
					"OPTICAL_FLOW"
				],
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"OPTICAL_FLOW",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"OPTICAL_FLOW",
			"PREVIEW_IMAGE"
		],
		"name": "MaskOptFlow",
		"display_name": "Mask Optical Flow (DragNUWA)",
		"description": "",
		"category": "ControlNet Preprocessors/Optical Flow",
		"output_node": false
	},
	"Zoe-DepthMapPreprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "Zoe-DepthMapPreprocessor",
		"display_name": "Zoe Depth Map",
		"description": "",
		"category": "ControlNet Preprocessors/Normal and Depth Estimators",
		"output_node": false
	},
	"AIO_Preprocessor": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			},
			"optional": {
				"preprocessor": [
					[
						"none",
						"AnimeFace_SemSegPreprocessor",
						"AnyLineArtPreprocessor_aux",
						"BinaryPreprocessor",
						"CannyEdgePreprocessor",
						"ColorPreprocessor",
						"DensePosePreprocessor",
						"DepthAnythingPreprocessor",
						"Zoe_DepthAnythingPreprocessor",
						"DiffusionEdge_Preprocessor",
						"DSINE-NormalMapPreprocessor",
						"DWPreprocessor",
						"AnimalPosePreprocessor",
						"HEDPreprocessor",
						"FakeScribblePreprocessor",
						"LeReS-DepthMapPreprocessor",
						"LineArtPreprocessor",
						"AnimeLineArtPreprocessor",
						"LineartStandardPreprocessor",
						"Manga2Anime_LineArt_Preprocessor",
						"MediaPipe-FaceMeshPreprocessor",
						"MeshGraphormer-DepthMapPreprocessor",
						"MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
						"Metric3D-DepthMapPreprocessor",
						"Metric3D-NormalMapPreprocessor",
						"MiDaS-NormalMapPreprocessor",
						"MiDaS-DepthMapPreprocessor",
						"M-LSDPreprocessor",
						"BAE-NormalMapPreprocessor",
						"OneFormer-COCO-SemSegPreprocessor",
						"OneFormer-ADE20K-SemSegPreprocessor",
						"OpenposePreprocessor",
						"PiDiNetPreprocessor",
						"SavePoseKpsAsJsonFile",
						"FacialPartColoringFromPoseKps",
						"UpperBodyTrackingFromPoseKps",
						"ImageLuminanceDetector",
						"ImageIntensityDetector",
						"ScribblePreprocessor",
						"Scribble_XDoG_Preprocessor",
						"Scribble_PiDiNet_Preprocessor",
						"SAMPreprocessor",
						"ShufflePreprocessor",
						"TEEDPreprocessor",
						"TilePreprocessor",
						"TTPlanet_TileGF_Preprocessor",
						"TTPlanet_TileSimple_Preprocessor",
						"UniFormer-SemSegPreprocessor",
						"SemSegPreprocessor",
						"Unimatch_OptFlowPreprocessor",
						"MaskOptFlow",
						"Zoe-DepthMapPreprocessor"
					],
					{
						"default": "none"
					}
				],
				"resolution": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 16384,
						"step": 64
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "AIO_Preprocessor",
		"display_name": "AIO Aux Preprocessor",
		"description": "",
		"category": "ControlNet Preprocessors",
		"output_node": false
	},
	"ControlNetPreprocessorSelector": {
		"input": {
			"required": {
				"preprocessor": [
					[
						"none",
						"AnimeFace_SemSegPreprocessor",
						"AnyLineArtPreprocessor_aux",
						"BinaryPreprocessor",
						"CannyEdgePreprocessor",
						"ColorPreprocessor",
						"DensePosePreprocessor",
						"DepthAnythingPreprocessor",
						"Zoe_DepthAnythingPreprocessor",
						"DiffusionEdge_Preprocessor",
						"DSINE-NormalMapPreprocessor",
						"DWPreprocessor",
						"AnimalPosePreprocessor",
						"HEDPreprocessor",
						"FakeScribblePreprocessor",
						"LeReS-DepthMapPreprocessor",
						"LineArtPreprocessor",
						"AnimeLineArtPreprocessor",
						"LineartStandardPreprocessor",
						"Manga2Anime_LineArt_Preprocessor",
						"MediaPipe-FaceMeshPreprocessor",
						"MeshGraphormer-DepthMapPreprocessor",
						"MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
						"Metric3D-DepthMapPreprocessor",
						"Metric3D-NormalMapPreprocessor",
						"MiDaS-NormalMapPreprocessor",
						"MiDaS-DepthMapPreprocessor",
						"M-LSDPreprocessor",
						"BAE-NormalMapPreprocessor",
						"OneFormer-COCO-SemSegPreprocessor",
						"OneFormer-ADE20K-SemSegPreprocessor",
						"OpenposePreprocessor",
						"PiDiNetPreprocessor",
						"SavePoseKpsAsJsonFile",
						"FacialPartColoringFromPoseKps",
						"UpperBodyTrackingFromPoseKps",
						"ImageLuminanceDetector",
						"ImageIntensityDetector",
						"ScribblePreprocessor",
						"Scribble_XDoG_Preprocessor",
						"Scribble_PiDiNet_Preprocessor",
						"SAMPreprocessor",
						"ShufflePreprocessor",
						"TEEDPreprocessor",
						"TilePreprocessor",
						"TTPlanet_TileGF_Preprocessor",
						"TTPlanet_TileSimple_Preprocessor",
						"UniFormer-SemSegPreprocessor",
						"SemSegPreprocessor",
						"Unimatch_OptFlowPreprocessor",
						"MaskOptFlow",
						"Zoe-DepthMapPreprocessor"
					]
				]
			}
		},
		"output": [
			[
				"none",
				"AnimeFace_SemSegPreprocessor",
				"AnyLineArtPreprocessor_aux",
				"BinaryPreprocessor",
				"CannyEdgePreprocessor",
				"ColorPreprocessor",
				"DensePosePreprocessor",
				"DepthAnythingPreprocessor",
				"Zoe_DepthAnythingPreprocessor",
				"DiffusionEdge_Preprocessor",
				"DSINE-NormalMapPreprocessor",
				"DWPreprocessor",
				"AnimalPosePreprocessor",
				"HEDPreprocessor",
				"FakeScribblePreprocessor",
				"LeReS-DepthMapPreprocessor",
				"LineArtPreprocessor",
				"AnimeLineArtPreprocessor",
				"LineartStandardPreprocessor",
				"Manga2Anime_LineArt_Preprocessor",
				"MediaPipe-FaceMeshPreprocessor",
				"MeshGraphormer-DepthMapPreprocessor",
				"MeshGraphormer+ImpactDetector-DepthMapPreprocessor",
				"Metric3D-DepthMapPreprocessor",
				"Metric3D-NormalMapPreprocessor",
				"MiDaS-NormalMapPreprocessor",
				"MiDaS-DepthMapPreprocessor",
				"M-LSDPreprocessor",
				"BAE-NormalMapPreprocessor",
				"OneFormer-COCO-SemSegPreprocessor",
				"OneFormer-ADE20K-SemSegPreprocessor",
				"OpenposePreprocessor",
				"PiDiNetPreprocessor",
				"SavePoseKpsAsJsonFile",
				"FacialPartColoringFromPoseKps",
				"UpperBodyTrackingFromPoseKps",
				"ImageLuminanceDetector",
				"ImageIntensityDetector",
				"ScribblePreprocessor",
				"Scribble_XDoG_Preprocessor",
				"Scribble_PiDiNet_Preprocessor",
				"SAMPreprocessor",
				"ShufflePreprocessor",
				"TEEDPreprocessor",
				"TilePreprocessor",
				"TTPlanet_TileGF_Preprocessor",
				"TTPlanet_TileSimple_Preprocessor",
				"UniFormer-SemSegPreprocessor",
				"SemSegPreprocessor",
				"Unimatch_OptFlowPreprocessor",
				"MaskOptFlow",
				"Zoe-DepthMapPreprocessor"
			]
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"preprocessor"
		],
		"name": "ControlNetPreprocessorSelector",
		"display_name": "Preprocessor Selector",
		"description": "",
		"category": "ControlNet Preprocessors",
		"output_node": false
	},
	"PixelPerfectResolution": {
		"input": {
			"required": {
				"original_image": [
					"IMAGE"
				],
				"image_gen_width": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 8192,
						"step": 8
					}
				],
				"image_gen_height": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 8192,
						"step": 8
					}
				],
				"resize_mode": [
					[
						"Just Resize",
						"Crop and Resize",
						"Resize and Fill"
					],
					{
						"default": "Just Resize"
					}
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"RESOLUTION (INT)"
		],
		"name": "PixelPerfectResolution",
		"display_name": "Pixel Perfect Resolution",
		"description": "",
		"category": "ControlNet Preprocessors",
		"output_node": false
	},
	"ImageGenResolutionFromImage": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE_GEN_WIDTH (INT)",
			"IMAGE_GEN_HEIGHT (INT)"
		],
		"name": "ImageGenResolutionFromImage",
		"display_name": "Generation Resolution From Image",
		"description": "",
		"category": "ControlNet Preprocessors",
		"output_node": false
	},
	"ImageGenResolutionFromLatent": {
		"input": {
			"required": {
				"latent": [
					"LATENT"
				]
			}
		},
		"output": [
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE_GEN_WIDTH (INT)",
			"IMAGE_GEN_HEIGHT (INT)"
		],
		"name": "ImageGenResolutionFromLatent",
		"display_name": "Generation Resolution From Latent",
		"description": "",
		"category": "ControlNet Preprocessors",
		"output_node": false
	},
	"HintImageEnchance": {
		"input": {
			"required": {
				"hint_image": [
					"IMAGE"
				],
				"image_gen_width": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 8192,
						"step": 8
					}
				],
				"image_gen_height": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 8192,
						"step": 8
					}
				],
				"resize_mode": [
					[
						"Just Resize",
						"Crop and Resize",
						"Resize and Fill"
					],
					{
						"default": "Just Resize"
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "HintImageEnchance",
		"display_name": "Enchance And Resize Hint Images",
		"description": "",
		"category": "ControlNet Preprocessors",
		"output_node": false
	},
	"PromptDanTagGen": {
		"input": {
			"required": {
				"model": [
					[
						"KBlueLeaf/DanTagGen-alpha",
						"KBlueLeaf/DanTagGen-beta",
						"KBlueLeaf/DanTagGen-delta",
						"KBlueLeaf/DanTagGen-delta-rev2"
					]
				],
				"artist": [
					"STRING",
					{
						"default": ""
					}
				],
				"characters": [
					"STRING",
					{
						"default": ""
					}
				],
				"copyrights": [
					"STRING",
					{
						"default": ""
					}
				],
				"special_tags": [
					"STRING",
					{
						"default": ""
					}
				],
				"general": [
					"STRING",
					{
						"default": "",
						"multiline": true
					}
				],
				"blacklist": [
					"STRING",
					{
						"default": ""
					}
				],
				"rating": [
					[
						"safe",
						"sensitive",
						"nsfw",
						"nsfw, explicit"
					]
				],
				"target": [
					[
						"very_short",
						"short",
						"long",
						"very_long"
					]
				],
				"width": [
					"INT",
					{
						"default": 1024,
						"min": 256,
						"max": 4096,
						"step": 32
					}
				],
				"height": [
					"INT",
					{
						"default": 1024,
						"min": 256,
						"max": 4096,
						"step": 32
					}
				],
				"escape_bracket": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"temperature": [
					"FLOAT",
					{
						"default": 1.35,
						"step": 0.05
					}
				]
			}
		},
		"output": [
			"STRING",
			"STRING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"output",
			"llm_output"
		],
		"name": "PromptDanTagGen",
		"display_name": "Danbooru Tag Generator",
		"description": "",
		"category": "_for_testing",
		"output_node": false
	},
	"DenseDiffusionApplyNode": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				]
			}
		},
		"output": [
			"MODEL",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CONDITIONING"
		],
		"name": "DenseDiffusionApplyNode",
		"display_name": "DenseDiffusion Apply",
		"description": "Apply DenseDiffusion model.",
		"category": "DenseDiffusion",
		"output_node": false
	},
	"DenseDiffusionAddCondNode": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"conditioning": [
					"CONDITIONING"
				],
				"mask": [
					"MASK"
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 2,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "DenseDiffusionAddCondNode",
		"display_name": "DenseDiffusion Add Cond",
		"description": "Set a regional prompt for DenseDiffusion.",
		"category": "DenseDiffusion",
		"output_node": false
	},
	"GetImageSize+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"width",
			"height"
		],
		"name": "GetImageSize+",
		"display_name": "🔧 Get Image Size",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageResize+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"interpolation": [
					[
						"nearest",
						"bilinear",
						"bicubic",
						"area",
						"nearest-exact",
						"lanczos"
					]
				],
				"keep_proportion": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"condition": [
					[
						"always",
						"downscale if bigger",
						"upscale if smaller"
					]
				],
				"multiple_of": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 512,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"width",
			"height"
		],
		"name": "ImageResize+",
		"display_name": "🔧 Image Resize",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageCrop+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"width": [
					"INT",
					{
						"default": 256,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"height": [
					"INT",
					{
						"default": 256,
						"min": 0,
						"max": 16384,
						"step": 8
					}
				],
				"position": [
					[
						"top-left",
						"top-center",
						"top-right",
						"right-center",
						"bottom-right",
						"bottom-center",
						"bottom-left",
						"left-center",
						"center"
					]
				],
				"x_offset": [
					"INT",
					{
						"default": 0,
						"min": -99999,
						"step": 1
					}
				],
				"y_offset": [
					"INT",
					{
						"default": 0,
						"min": -99999,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"x",
			"y"
		],
		"name": "ImageCrop+",
		"display_name": "🔧 Image Crop",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageFlip+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"axis": [
					[
						"x",
						"y",
						"xy"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageFlip+",
		"display_name": "🔧 Image Flip",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageDesaturate+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"factor": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageDesaturate+",
		"display_name": "🔧 Image Desaturate",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImagePosterize+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.5,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImagePosterize+",
		"display_name": "🔧 Image Posterize",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageCASharpening+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"amount": [
					"FLOAT",
					{
						"default": 0.8,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageCASharpening+",
		"display_name": "🔧 Image Contrast Adaptive Sharpening",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageSeamCarving+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"width": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"energy": [
					[
						"backward",
						"forward"
					]
				],
				"order": [
					[
						"width-first",
						"height-first"
					]
				]
			},
			"optional": {
				"keep_mask": [
					"MASK"
				],
				"drop_mask": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageSeamCarving+",
		"display_name": "🔧 Image Seam Carving",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageEnhanceDifference+": {
		"input": {
			"required": {
				"image1": [
					"IMAGE"
				],
				"image2": [
					"IMAGE"
				],
				"exponent": [
					"FLOAT",
					{
						"default": 0.75,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageEnhanceDifference+",
		"display_name": "🔧 Image Enhance Difference",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageExpandBatch+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"size": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"step": 1
					}
				],
				"method": [
					[
						"expand",
						"repeat all",
						"repeat first",
						"repeat last"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageExpandBatch+",
		"display_name": "🔧 Image Expand Batch",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageFromBatch+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"start": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"length": [
					"INT",
					{
						"default": -1,
						"min": -1,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageFromBatch+",
		"display_name": "🔧 Image From Batch",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageListToBatch+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageListToBatch+",
		"display_name": "🔧 Image List To Batch",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageCompositeFromMaskBatch+": {
		"input": {
			"required": {
				"image_from": [
					"IMAGE"
				],
				"image_to": [
					"IMAGE"
				],
				"mask": [
					"MASK"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageCompositeFromMaskBatch+",
		"display_name": "🔧 Image Composite From Mask Batch",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ExtractKeyframes+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"threshold": [
					"FLOAT",
					{
						"default": 0.85,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"STRING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"KEYFRAMES",
			"indexes"
		],
		"name": "ExtractKeyframes+",
		"display_name": "🔧 Extract Keyframes (experimental)",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageApplyLUT+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"lut_file": [
					[]
				],
				"log_colorspace": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"clip_values": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.1
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageApplyLUT+",
		"display_name": "🔧 Image Apply LUT",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"PixelOEPixelize+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"downscale_mode": [
					[
						"contrast",
						"bicubic",
						"nearest",
						"center",
						"k-centroid"
					]
				],
				"target_size": [
					"INT",
					{
						"default": 128,
						"min": 1,
						"max": 16384,
						"step": 16
					}
				],
				"patch_size": [
					"INT",
					{
						"default": 16,
						"min": 4,
						"max": 32,
						"step": 2
					}
				],
				"thickness": [
					"INT",
					{
						"default": 2,
						"min": 1,
						"max": 16,
						"step": 1
					}
				],
				"color_matching": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"upscale": [
					"BOOLEAN",
					{
						"default": true
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "PixelOEPixelize+",
		"display_name": "🔧 Pixelize",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"MaskBlur+": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"amount": [
					"FLOAT",
					{
						"default": 6,
						"min": 0,
						"step": 0.5
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "MaskBlur+",
		"display_name": "🔧 Mask Blur",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"MaskFlip+": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"axis": [
					[
						"x",
						"y",
						"xy"
					]
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "MaskFlip+",
		"display_name": "🔧 Mask Flip",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"MaskPreview+": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				]
			},
			"hidden": {
				"prompt": "PROMPT",
				"extra_pnginfo": "EXTRA_PNGINFO"
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "MaskPreview+",
		"display_name": "🔧 Mask Preview",
		"description": "",
		"category": "essentials",
		"output_node": true
	},
	"MaskBatch+": {
		"input": {
			"required": {
				"mask1": [
					"MASK"
				],
				"mask2": [
					"MASK"
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "MaskBatch+",
		"display_name": "🔧 Mask Batch",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"MaskExpandBatch+": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"size": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"step": 1
					}
				],
				"method": [
					[
						"expand",
						"repeat all",
						"repeat first",
						"repeat last"
					]
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "MaskExpandBatch+",
		"display_name": "🔧 Mask Expand Batch",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"TransitionMask+": {
		"input": {
			"required": {
				"width": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 512,
						"min": 1,
						"max": 16384,
						"step": 1
					}
				],
				"frames": [
					"INT",
					{
						"default": 16,
						"min": 1,
						"max": 9999,
						"step": 1
					}
				],
				"start_frame": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"end_frame": [
					"INT",
					{
						"default": 9999,
						"min": 0,
						"step": 1
					}
				],
				"transition_type": [
					[
						"horizontal slide",
						"vertical slide",
						"horizontal bar",
						"vertical bar",
						"center box",
						"horizontal door",
						"vertical door",
						"circle",
						"fade"
					]
				],
				"timing_function": [
					[
						"linear",
						"in",
						"out",
						"in-out"
					]
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "TransitionMask+",
		"display_name": "🔧 Transition Mask",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"MaskFromColor+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"red": [
					"INT",
					{
						"default": 255,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"green": [
					"INT",
					{
						"default": 255,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"blue": [
					"INT",
					{
						"default": 255,
						"min": 0,
						"max": 255,
						"step": 1
					}
				],
				"threshold": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 127,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "MaskFromColor+",
		"display_name": "🔧 Mask From Color",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"MaskFromBatch+": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"start": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"step": 1
					}
				],
				"length": [
					"INT",
					{
						"default": -1,
						"min": -1,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "MaskFromBatch+",
		"display_name": "🔧 Mask From Batch",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"MaskBoundingBox+": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"padding": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 4096,
						"step": 1
					}
				],
				"blur": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 128,
						"step": 1
					}
				]
			},
			"optional": {
				"image_optional": [
					"IMAGE"
				]
			}
		},
		"output": [
			"MASK",
			"IMAGE",
			"INT",
			"INT",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"MASK",
			"IMAGE",
			"x",
			"y",
			"width",
			"height"
		],
		"name": "MaskBoundingBox+",
		"display_name": "🔧 Mask Bounding Box",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"MaskFromSegmentation+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"segments": [
					"INT",
					{
						"default": 6,
						"min": 1,
						"max": 16,
						"step": 1
					}
				],
				"remove_isolated_pixels": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 32,
						"step": 1
					}
				],
				"remove_small_masks": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"fill_holes": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "MaskFromSegmentation+",
		"display_name": "🔧 Mask From Segmentation",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"MaskFromRGBCMYBW+": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"threshold_r": [
					"FLOAT",
					{
						"default": 0.15,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"threshold_g": [
					"FLOAT",
					{
						"default": 0.15,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"threshold_b": [
					"FLOAT",
					{
						"default": 0.15,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"remove_isolated_pixels": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 32,
						"step": 1
					}
				],
				"fill_holes": [
					"BOOLEAN",
					{
						"default": false
					}
				]
			}
		},
		"output": [
			"MASK",
			"MASK",
			"MASK",
			"MASK",
			"MASK",
			"MASK",
			"MASK",
			"MASK"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"red",
			"green",
			"blue",
			"cyan",
			"magenta",
			"yellow",
			"black",
			"white"
		],
		"name": "MaskFromRGBCMYBW+",
		"display_name": "🔧 Mask From RGB/CMY/BW",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"MaskSmooth+": {
		"input": {
			"required": {
				"mask": [
					"MASK"
				],
				"amount": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 127,
						"step": 1
					}
				]
			}
		},
		"output": [
			"MASK"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MASK"
		],
		"name": "MaskSmooth+",
		"display_name": "🔧 Mask Smooth",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"SimpleMath+": {
		"input": {
			"optional": {
				"a": [
					"INT,FLOAT",
					{
						"default": 0,
						"step": 0.1
					}
				],
				"b": [
					"INT,FLOAT",
					{
						"default": 0,
						"step": 0.1
					}
				]
			},
			"required": {
				"value": [
					"STRING",
					{
						"multiline": false,
						"default": ""
					}
				]
			}
		},
		"output": [
			"INT",
			"FLOAT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"INT",
			"FLOAT"
		],
		"name": "SimpleMath+",
		"display_name": "🔧 Simple Math",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ConsoleDebug+": {
		"input": {
			"required": {
				"value": [
					"*",
					{}
				]
			},
			"optional": {
				"prefix": [
					"STRING",
					{
						"multiline": false,
						"default": "Value:"
					}
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "ConsoleDebug+",
		"display_name": "🔧 Console Debug",
		"description": "",
		"category": "essentials",
		"output_node": true
	},
	"DebugTensorShape+": {
		"input": {
			"required": {
				"tensor": [
					"*",
					{}
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "DebugTensorShape+",
		"display_name": "🔧 Tensor Shape Debug",
		"description": "",
		"category": "essentials",
		"output_node": true
	},
	"ModelCompile+": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"fullgraph": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"dynamic": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"mode": [
					[
						"default",
						"reduce-overhead",
						"max-autotune",
						"max-autotune-no-cudagraphs"
					]
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ModelCompile+",
		"display_name": "🔧 Compile Model",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"BatchCount+": {
		"input": {
			"required": {
				"batch": [
					"*",
					{}
				]
			}
		},
		"output": [
			"INT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"INT"
		],
		"name": "BatchCount+",
		"display_name": "🔧 Batch Count",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"KSamplerVariationsStochastic+": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"latent_image": [
					"LATENT"
				],
				"noise_seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 25,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 7,
						"min": 0,
						"max": 100,
						"step": 0.1,
						"round": 0.01
					}
				],
				"sampler": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"variation_seed": [
					"INT:seed",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"variation_strength": [
					"FLOAT",
					{
						"default": 0.2,
						"min": 0,
						"max": 1,
						"step": 0.05,
						"round": 0.01
					}
				],
				"cfg_scale": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.05,
						"round": 0.01
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "KSamplerVariationsStochastic+",
		"display_name": "🔧 KSampler Stochastic Variations",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"KSamplerVariationsWithNoise+": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"latent_image": [
					"LATENT"
				],
				"main_seed": [
					"INT:seed",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100,
						"step": 0.1,
						"round": 0.01
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"variation_strength": [
					"FLOAT",
					{
						"default": 0.17,
						"min": 0,
						"max": 1,
						"step": 0.01,
						"round": 0.01
					}
				],
				"variation_seed": [
					"INT:seed",
					{
						"default": 12345,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01,
						"round": 0.01
					}
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "KSamplerVariationsWithNoise+",
		"display_name": "🔧 KSampler Variations with Noise Injection",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"CLIPTextEncodeSDXL+": {
		"input": {
			"required": {
				"width": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"height": [
					"INT",
					{
						"default": 1024,
						"min": 0,
						"max": 16384
					}
				],
				"size_cond_factor": [
					"INT",
					{
						"default": 4,
						"min": 1,
						"max": 16
					}
				],
				"text": [
					"STRING",
					{
						"multiline": true,
						"default": ""
					}
				],
				"clip": [
					"CLIP"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "CLIPTextEncodeSDXL+",
		"display_name": "🔧 SDXLCLIPTextEncode",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"SDXLEmptyLatentSizePicker+": {
		"input": {
			"required": {
				"resolution": [
					[
						"704x1408 (0.5)",
						"704x1344 (0.52)",
						"768x1344 (0.57)",
						"768x1280 (0.6)",
						"832x1216 (0.68)",
						"832x1152 (0.72)",
						"896x1152 (0.78)",
						"896x1088 (0.82)",
						"960x1088 (0.88)",
						"960x1024 (0.94)",
						"1024x1024 (1.0)",
						"1024x960 (1.07)",
						"1088x960 (1.13)",
						"1088x896 (1.21)",
						"1152x896 (1.29)",
						"1152x832 (1.38)",
						"1216x832 (1.46)",
						"1280x768 (1.67)",
						"1344x768 (1.75)",
						"1344x704 (1.91)",
						"1408x704 (2.0)",
						"1472x704 (2.09)",
						"1536x640 (2.4)",
						"1600x640 (2.5)",
						"1664x576 (2.89)",
						"1728x576 (3.0)"
					],
					{
						"default": "1024x1024 (1.0)"
					}
				],
				"batch_size": [
					"INT",
					{
						"default": 1,
						"min": 1,
						"max": 4096
					}
				]
			}
		},
		"output": [
			"LATENT",
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"LATENT",
			"width",
			"height"
		],
		"name": "SDXLEmptyLatentSizePicker+",
		"display_name": "🔧 SDXL Empty Latent Size Picker",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"DrawText+": {
		"input": {
			"required": {
				"text": [
					"STRING",
					{
						"multiline": true,
						"default": "Hello, World!"
					}
				],
				"font": [
					[]
				],
				"size": [
					"INT",
					{
						"default": 56,
						"min": 1,
						"max": 9999,
						"step": 1
					}
				],
				"color": [
					"STRING",
					{
						"multiline": false,
						"default": "#FFFFFF"
					}
				],
				"background_color": [
					"STRING",
					{
						"multiline": false,
						"default": "#00000000"
					}
				],
				"shadow_distance": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"shadow_blur": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 100,
						"step": 1
					}
				],
				"shadow_color": [
					"STRING",
					{
						"multiline": false,
						"default": "#000000"
					}
				],
				"alignment": [
					[
						"left",
						"center",
						"right"
					]
				],
				"width": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				],
				"height": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 16384,
						"step": 1
					}
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "DrawText+",
		"display_name": "🔧 Draw Text",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"RemBGSession+": {
		"input": {
			"required": {
				"model": [
					[
						"u2net: general purpose",
						"u2netp: lightweight general purpose",
						"u2net_human_seg: human segmentation",
						"u2net_cloth_seg: cloths Parsing",
						"silueta: very small u2net",
						"isnet-general-use: general purpose",
						"isnet-anime: anime illustrations",
						"sam: general purpose"
					]
				],
				"providers": [
					[
						"CPU",
						"CUDA",
						"ROCM",
						"DirectML",
						"OpenVINO",
						"CoreML",
						"Tensorrt",
						"Azure"
					]
				]
			}
		},
		"output": [
			"REMBG_SESSION"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"REMBG_SESSION"
		],
		"name": "RemBGSession+",
		"display_name": "🔧 RemBG Session",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageRemoveBackground+": {
		"input": {
			"required": {
				"rembg_session": [
					"REMBG_SESSION"
				],
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "ImageRemoveBackground+",
		"display_name": "🔧 Image Remove Background",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"RemoveLatentMask+": {
		"input": {
			"required": {
				"samples": [
					"LATENT"
				]
			}
		},
		"output": [
			"LATENT"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"LATENT"
		],
		"name": "RemoveLatentMask+",
		"display_name": "🔧 Remove Latent Mask",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ConditioningCombineMultiple+": {
		"input": {
			"required": {
				"conditioning_1": [
					"CONDITIONING"
				],
				"conditioning_2": [
					"CONDITIONING"
				]
			},
			"optional": {
				"conditioning_3": [
					"CONDITIONING"
				],
				"conditioning_4": [
					"CONDITIONING"
				],
				"conditioning_5": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "ConditioningCombineMultiple+",
		"display_name": "🔧 Conditionings Combine Multiple ",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"ImageBatchMultiple+": {
		"input": {
			"required": {
				"image_1": [
					"IMAGE"
				],
				"image_2": [
					"IMAGE"
				],
				"method": [
					[
						"nearest-exact",
						"bilinear",
						"area",
						"bicubic",
						"lanczos"
					],
					{
						"default": "lanczos"
					}
				]
			},
			"optional": {
				"image_3": [
					"IMAGE"
				],
				"image_4": [
					"IMAGE"
				],
				"image_5": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ImageBatchMultiple+",
		"display_name": "🔧 Images Batch Multiple",
		"description": "",
		"category": "essentials",
		"output_node": false
	},
	"IPAdapter": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"image": [
					"IMAGE"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"weight_type": [
					[
						"standard",
						"prompt is more important",
						"style transfer"
					]
				]
			},
			"optional": {
				"attn_mask": [
					"MASK"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "IPAdapter",
		"display_name": "IPAdapter",
		"description": "",
		"category": "ipadapter",
		"output_node": false
	},
	"IPAdapterAdvanced": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"image": [
					"IMAGE"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 5,
						"step": 0.05
					}
				],
				"weight_type": [
					[
						"linear",
						"ease in",
						"ease out",
						"ease in-out",
						"reverse in-out",
						"weak input",
						"weak output",
						"weak middle",
						"strong middle",
						"style transfer",
						"composition",
						"strong style transfer"
					]
				],
				"combine_embeds": [
					[
						"concat",
						"add",
						"subtract",
						"average",
						"norm average"
					]
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				]
			},
			"optional": {
				"image_negative": [
					"IMAGE"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "IPAdapterAdvanced",
		"display_name": "IPAdapter Advanced",
		"description": "",
		"category": "ipadapter",
		"output_node": false
	},
	"IPAdapterBatch": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"image": [
					"IMAGE"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 5,
						"step": 0.05
					}
				],
				"weight_type": [
					[
						"linear",
						"ease in",
						"ease out",
						"ease in-out",
						"reverse in-out",
						"weak input",
						"weak output",
						"weak middle",
						"strong middle",
						"style transfer",
						"composition",
						"strong style transfer"
					]
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				],
				"encode_batch_size": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 4096
					}
				]
			},
			"optional": {
				"image_negative": [
					"IMAGE"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "IPAdapterBatch",
		"display_name": "IPAdapter Batch (Adv.)",
		"description": "",
		"category": "ipadapter",
		"output_node": false
	},
	"IPAdapterFaceID": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"image": [
					"IMAGE"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"weight_faceidv2": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 5,
						"step": 0.05
					}
				],
				"weight_type": [
					[
						"linear",
						"ease in",
						"ease out",
						"ease in-out",
						"reverse in-out",
						"weak input",
						"weak output",
						"weak middle",
						"strong middle",
						"style transfer",
						"composition",
						"strong style transfer"
					]
				],
				"combine_embeds": [
					[
						"concat",
						"add",
						"subtract",
						"average",
						"norm average"
					]
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				]
			},
			"optional": {
				"image_negative": [
					"IMAGE"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				],
				"insightface": [
					"INSIGHTFACE"
				]
			}
		},
		"output": [
			"MODEL",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MODEL",
			"face_image"
		],
		"name": "IPAdapterFaceID",
		"display_name": "IPAdapter FaceID",
		"description": "",
		"category": "ipadapter/faceid",
		"output_node": false
	},
	"IPAAdapterFaceIDBatch": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"image": [
					"IMAGE"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"weight_faceidv2": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 5,
						"step": 0.05
					}
				],
				"weight_type": [
					[
						"linear",
						"ease in",
						"ease out",
						"ease in-out",
						"reverse in-out",
						"weak input",
						"weak output",
						"weak middle",
						"strong middle",
						"style transfer",
						"composition",
						"strong style transfer"
					]
				],
				"combine_embeds": [
					[
						"concat",
						"add",
						"subtract",
						"average",
						"norm average"
					]
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				]
			},
			"optional": {
				"image_negative": [
					"IMAGE"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				],
				"insightface": [
					"INSIGHTFACE"
				]
			}
		},
		"output": [
			"MODEL",
			"IMAGE"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MODEL",
			"face_image"
		],
		"name": "IPAAdapterFaceIDBatch",
		"display_name": "IPAdapter FaceID Batch",
		"description": "",
		"category": "ipadapter/faceid",
		"output_node": false
	},
	"IPAdapterTiled": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"image": [
					"IMAGE"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"weight_type": [
					[
						"linear",
						"ease in",
						"ease out",
						"ease in-out",
						"reverse in-out",
						"weak input",
						"weak output",
						"weak middle",
						"strong middle",
						"style transfer",
						"composition",
						"strong style transfer"
					]
				],
				"combine_embeds": [
					[
						"concat",
						"add",
						"subtract",
						"average",
						"norm average"
					]
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"sharpening": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				]
			},
			"optional": {
				"image_negative": [
					"IMAGE"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				]
			}
		},
		"output": [
			"MODEL",
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"tiles",
			"masks"
		],
		"name": "IPAdapterTiled",
		"display_name": "IPAdapter Tiled",
		"description": "",
		"category": "ipadapter/tiled",
		"output_node": false
	},
	"IPAdapterTiledBatch": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"image": [
					"IMAGE"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"weight_type": [
					[
						"linear",
						"ease in",
						"ease out",
						"ease in-out",
						"reverse in-out",
						"weak input",
						"weak output",
						"weak middle",
						"strong middle",
						"style transfer",
						"composition",
						"strong style transfer"
					]
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"sharpening": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				],
				"encode_batch_size": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 4096
					}
				]
			},
			"optional": {
				"image_negative": [
					"IMAGE"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				]
			}
		},
		"output": [
			"MODEL",
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"MODEL",
			"tiles",
			"masks"
		],
		"name": "IPAdapterTiledBatch",
		"display_name": "IPAdapter Tiled Batch",
		"description": "",
		"category": "ipadapter/tiled",
		"output_node": false
	},
	"IPAdapterEmbeds": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"pos_embed": [
					"EMBEDS"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"weight_type": [
					[
						"linear",
						"ease in",
						"ease out",
						"ease in-out",
						"reverse in-out",
						"weak input",
						"weak output",
						"weak middle",
						"strong middle",
						"style transfer",
						"composition",
						"strong style transfer"
					]
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				]
			},
			"optional": {
				"neg_embed": [
					"EMBEDS"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "IPAdapterEmbeds",
		"display_name": "IPAdapter Embeds",
		"description": "",
		"category": "ipadapter/embeds",
		"output_node": false
	},
	"IPAdapterEmbedsBatch": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"pos_embed": [
					"EMBEDS"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"weight_type": [
					[
						"linear",
						"ease in",
						"ease out",
						"ease in-out",
						"reverse in-out",
						"weak input",
						"weak output",
						"weak middle",
						"strong middle",
						"style transfer",
						"composition",
						"strong style transfer"
					]
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				]
			},
			"optional": {
				"neg_embed": [
					"EMBEDS"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "IPAdapterEmbedsBatch",
		"display_name": "IPAdapter Embeds Batch",
		"description": "",
		"category": "ipadapter/embeds",
		"output_node": false
	},
	"IPAdapterStyleComposition": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"image_style": [
					"IMAGE"
				],
				"image_composition": [
					"IMAGE"
				],
				"weight_style": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 5,
						"step": 0.05
					}
				],
				"weight_composition": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 5,
						"step": 0.05
					}
				],
				"expand_style": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"combine_embeds": [
					[
						"concat",
						"add",
						"subtract",
						"average",
						"norm average"
					],
					{
						"default": "average"
					}
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				]
			},
			"optional": {
				"image_negative": [
					"IMAGE"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "IPAdapterStyleComposition",
		"display_name": "IPAdapter Style & Composition SDXL",
		"description": "",
		"category": "ipadapter/style_composition",
		"output_node": false
	},
	"IPAdapterStyleCompositionBatch": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"image_style": [
					"IMAGE"
				],
				"image_composition": [
					"IMAGE"
				],
				"weight_style": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 5,
						"step": 0.05
					}
				],
				"weight_composition": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 5,
						"step": 0.05
					}
				],
				"expand_style": [
					"BOOLEAN",
					{
						"default": false
					}
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				]
			},
			"optional": {
				"image_negative": [
					"IMAGE"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "IPAdapterStyleCompositionBatch",
		"display_name": "IPAdapter Style & Composition Batch SDXL",
		"description": "",
		"category": "ipadapter/style_composition",
		"output_node": false
	},
	"IPAdapterMS": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"image": [
					"IMAGE"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 5,
						"step": 0.05
					}
				],
				"weight_faceidv2": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 5,
						"step": 0.05
					}
				],
				"weight_type": [
					[
						"linear",
						"ease in",
						"ease out",
						"ease in-out",
						"reverse in-out",
						"weak input",
						"weak output",
						"weak middle",
						"strong middle",
						"style transfer",
						"composition",
						"strong style transfer"
					]
				],
				"combine_embeds": [
					[
						"concat",
						"add",
						"subtract",
						"average",
						"norm average"
					]
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				],
				"layer_weights": [
					"STRING",
					{
						"default": "",
						"multiline": true
					}
				]
			},
			"optional": {
				"image_negative": [
					"IMAGE"
				],
				"attn_mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				],
				"insightface": [
					"INSIGHTFACE"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "IPAdapterMS",
		"display_name": "IPAdapter Mad Scientist",
		"description": "",
		"category": "ipadapter/dev",
		"output_node": false
	},
	"IPAdapterFromParams": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"ipadapter": [
					"IPADAPTER"
				],
				"ipadapter_params": [
					"IPADAPTER_PARAMS"
				],
				"combine_embeds": [
					[
						"concat",
						"add",
						"subtract",
						"average",
						"norm average"
					]
				],
				"embeds_scaling": [
					[
						"V only",
						"K+V",
						"K+V w/ C penalty",
						"K+mean(V) w/ C penalty"
					]
				]
			},
			"optional": {
				"image_negative": [
					"IMAGE"
				],
				"clip_vision": [
					"CLIP_VISION"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "IPAdapterFromParams",
		"display_name": "IPAdapter from Params",
		"description": "",
		"category": "ipadapter/params",
		"output_node": false
	},
	"IPAdapterUnifiedLoader": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"preset": [
					[
						"LIGHT - SD1.5 only (low strength)",
						"STANDARD (medium strength)",
						"VIT-G (medium strength)",
						"PLUS (high strength)",
						"PLUS FACE (portraits)",
						"FULL FACE - SD1.5 only (portraits stronger)"
					]
				]
			},
			"optional": {
				"ipadapter": [
					"IPADAPTER"
				]
			}
		},
		"output": [
			"MODEL",
			"IPADAPTER"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"model",
			"ipadapter"
		],
		"name": "IPAdapterUnifiedLoader",
		"display_name": "IPAdapter Unified Loader",
		"description": "",
		"category": "ipadapter",
		"output_node": false
	},
	"IPAdapterUnifiedLoaderFaceID": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"preset": [
					[
						"FACEID",
						"FACEID PLUS - SD1.5 only",
						"FACEID PLUS V2",
						"FACEID PORTRAIT (style transfer)",
						"FACEID PORTRAIT UNNORM - SDXL only (strong)"
					]
				],
				"lora_strength": [
					"FLOAT",
					{
						"default": 0.6,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"provider": [
					[
						"CPU",
						"CUDA",
						"ROCM",
						"DirectML",
						"OpenVINO",
						"CoreML"
					]
				]
			},
			"optional": {
				"ipadapter": [
					"IPADAPTER"
				]
			}
		},
		"output": [
			"MODEL",
			"IPADAPTER"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MODEL",
			"ipadapter"
		],
		"name": "IPAdapterUnifiedLoaderFaceID",
		"display_name": "IPAdapter Unified Loader FaceID",
		"description": "",
		"category": "ipadapter/faceid",
		"output_node": false
	},
	"IPAdapterModelLoader": {
		"input": {
			"required": {
				"ipadapter_file": [
					[
						"ip-adapter-faceid-plusv2_sd15.bin",
						"ip-adapter-faceid-plusv2_sdxl.bin",
						"ip-adapter-faceid_sd15.bin",
						"ip-adapter-plus_sd15.safetensors",
						"ip-adapter-plus_sdxl_vit-h.safetensors",
						"ip-adapter_sd15.safetensors",
						"ip-adapter_sdxl_vit-h.safetensors"
					]
				]
			}
		},
		"output": [
			"IPADAPTER"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IPADAPTER"
		],
		"name": "IPAdapterModelLoader",
		"display_name": "IPAdapter Model Loader",
		"description": "",
		"category": "ipadapter/loaders",
		"output_node": false
	},
	"IPAdapterInsightFaceLoader": {
		"input": {
			"required": {
				"provider": [
					[
						"CPU",
						"CUDA",
						"ROCM"
					]
				]
			}
		},
		"output": [
			"INSIGHTFACE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"INSIGHTFACE"
		],
		"name": "IPAdapterInsightFaceLoader",
		"display_name": "IPAdapter InsightFace Loader",
		"description": "",
		"category": "ipadapter/loaders",
		"output_node": false
	},
	"IPAdapterUnifiedLoaderCommunity": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"preset": [
					[
						"Composition"
					]
				]
			},
			"optional": {
				"ipadapter": [
					"IPADAPTER"
				]
			}
		},
		"output": [
			"MODEL",
			"IPADAPTER"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"model",
			"ipadapter"
		],
		"name": "IPAdapterUnifiedLoaderCommunity",
		"display_name": "IPAdapter Unified Loader Community",
		"description": "",
		"category": "ipadapter/loaders",
		"output_node": false
	},
	"IPAdapterEncoder": {
		"input": {
			"required": {
				"ipadapter": [
					"IPADAPTER"
				],
				"image": [
					"IMAGE"
				],
				"weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.01
					}
				]
			},
			"optional": {
				"mask": [
					"MASK"
				],
				"clip_vision": [
					"CLIP_VISION"
				]
			}
		},
		"output": [
			"EMBEDS",
			"EMBEDS"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"pos_embed",
			"neg_embed"
		],
		"name": "IPAdapterEncoder",
		"display_name": "IPAdapter Encoder",
		"description": "",
		"category": "ipadapter/embeds",
		"output_node": false
	},
	"IPAdapterCombineEmbeds": {
		"input": {
			"required": {
				"embed1": [
					"EMBEDS"
				],
				"method": [
					[
						"concat",
						"add",
						"subtract",
						"average",
						"norm average",
						"max",
						"min"
					]
				]
			},
			"optional": {
				"embed2": [
					"EMBEDS"
				],
				"embed3": [
					"EMBEDS"
				],
				"embed4": [
					"EMBEDS"
				],
				"embed5": [
					"EMBEDS"
				]
			}
		},
		"output": [
			"EMBEDS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"EMBEDS"
		],
		"name": "IPAdapterCombineEmbeds",
		"display_name": "IPAdapter Combine Embeds",
		"description": "",
		"category": "ipadapter/embeds",
		"output_node": false
	},
	"IPAdapterNoise": {
		"input": {
			"required": {
				"type": [
					[
						"fade",
						"dissolve",
						"gaussian",
						"shuffle"
					]
				],
				"strength": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				],
				"blur": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 32,
						"step": 1
					}
				]
			},
			"optional": {
				"image_optional": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "IPAdapterNoise",
		"display_name": "IPAdapter Noise",
		"description": "",
		"category": "ipadapter/utils",
		"output_node": false
	},
	"PrepImageForClipVision": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"interpolation": [
					[
						"LANCZOS",
						"BICUBIC",
						"HAMMING",
						"BILINEAR",
						"BOX",
						"NEAREST"
					]
				],
				"crop_position": [
					[
						"top",
						"bottom",
						"left",
						"right",
						"center",
						"pad"
					]
				],
				"sharpening": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "PrepImageForClipVision",
		"display_name": "Prep Image For ClipVision",
		"description": "",
		"category": "ipadapter/utils",
		"output_node": false
	},
	"IPAdapterSaveEmbeds": {
		"input": {
			"required": {
				"embeds": [
					"EMBEDS"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "IP_embeds"
					}
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "IPAdapterSaveEmbeds",
		"display_name": "IPAdapter Save Embeds",
		"description": "",
		"category": "ipadapter/embeds",
		"output_node": true
	},
	"IPAdapterLoadEmbeds": {
		"input": {
			"required": {
				"embeds": [
					[]
				]
			}
		},
		"output": [
			"EMBEDS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"EMBEDS"
		],
		"name": "IPAdapterLoadEmbeds",
		"display_name": "IPAdapter Load Embeds",
		"description": "",
		"category": "ipadapter/embeds",
		"output_node": false
	},
	"IPAdapterWeights": {
		"input": {
			"required": {
				"weights": [
					"STRING",
					{
						"default": "1.0, 0.0",
						"multiline": true
					}
				],
				"timing": [
					[
						"custom",
						"linear",
						"ease_in_out",
						"ease_in",
						"ease_out",
						"random"
					],
					{
						"default": "linear"
					}
				],
				"frames": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9999,
						"step": 1
					}
				],
				"start_frame": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9999,
						"step": 1
					}
				],
				"end_frame": [
					"INT",
					{
						"default": 9999,
						"min": 0,
						"max": 9999,
						"step": 1
					}
				],
				"add_starting_frames": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9999,
						"step": 1
					}
				],
				"add_ending_frames": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 9999,
						"step": 1
					}
				],
				"method": [
					[
						"full batch",
						"shift batches",
						"alternate batches"
					],
					{
						"default": "full batch"
					}
				]
			},
			"optional": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"FLOAT",
			"FLOAT",
			"INT",
			"IMAGE",
			"IMAGE",
			"WEIGHTS_STRATEGY"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"weights",
			"weights_invert",
			"total_frames",
			"image_1",
			"image_2",
			"weights_strategy"
		],
		"name": "IPAdapterWeights",
		"display_name": "IPAdapter Weights",
		"description": "",
		"category": "ipadapter/weights",
		"output_node": false
	},
	"IPAdapterCombineWeights": {
		"input": {
			"required": {
				"weights_1": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				],
				"weights_2": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.05
					}
				]
			}
		},
		"output": [
			"FLOAT",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"weights",
			"count"
		],
		"name": "IPAdapterCombineWeights",
		"display_name": "IPAdapter Combine Weights",
		"description": "",
		"category": "ipadapter/utils",
		"output_node": false
	},
	"IPAdapterWeightsFromStrategy": {
		"input": {
			"required": {
				"weights_strategy": [
					"WEIGHTS_STRATEGY"
				]
			},
			"optional": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"FLOAT",
			"FLOAT",
			"INT",
			"IMAGE",
			"IMAGE",
			"WEIGHTS_STRATEGY"
		],
		"output_is_list": [
			false,
			false,
			false,
			false,
			false,
			false
		],
		"output_name": [
			"weights",
			"weights_invert",
			"total_frames",
			"image_1",
			"image_2",
			"weights_strategy"
		],
		"name": "IPAdapterWeightsFromStrategy",
		"display_name": "IPAdapter Weights From Strategy",
		"description": "",
		"category": "ipadapter/weights",
		"output_node": false
	},
	"IPAdapterPromptScheduleFromWeightsStrategy": {
		"input": {
			"required": {
				"weights_strategy": [
					"WEIGHTS_STRATEGY"
				],
				"prompt": [
					"STRING",
					{
						"default": "",
						"multiline": true
					}
				]
			}
		},
		"output": [
			"STRING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"prompt_schedule"
		],
		"name": "IPAdapterPromptScheduleFromWeightsStrategy",
		"display_name": "Prompt Schedule From Weights Strategy",
		"description": "",
		"category": "ipadapter/weights",
		"output_node": false
	},
	"IPAdapterRegionalConditioning": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"image_weight": [
					"FLOAT",
					{
						"default": 1,
						"min": -1,
						"max": 3,
						"step": 0.05
					}
				],
				"prompt_weight": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 10,
						"step": 0.05
					}
				],
				"weight_type": [
					[
						"linear",
						"ease in",
						"ease out",
						"ease in-out",
						"reverse in-out",
						"weak input",
						"weak output",
						"weak middle",
						"strong middle",
						"style transfer",
						"composition",
						"strong style transfer"
					]
				],
				"start_at": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				],
				"end_at": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.001
					}
				]
			},
			"optional": {
				"mask": [
					"MASK"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"IPADAPTER_PARAMS",
			"CONDITIONING",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false,
			false
		],
		"output_name": [
			"IPADAPTER_PARAMS",
			"POSITIVE",
			"NEGATIVE"
		],
		"name": "IPAdapterRegionalConditioning",
		"display_name": "IPAdapter Regional Conditioning",
		"description": "",
		"category": "ipadapter/params",
		"output_node": false
	},
	"IPAdapterCombineParams": {
		"input": {
			"required": {
				"params_1": [
					"IPADAPTER_PARAMS"
				],
				"params_2": [
					"IPADAPTER_PARAMS"
				]
			},
			"optional": {
				"params_3": [
					"IPADAPTER_PARAMS"
				],
				"params_4": [
					"IPADAPTER_PARAMS"
				],
				"params_5": [
					"IPADAPTER_PARAMS"
				]
			}
		},
		"output": [
			"IPADAPTER_PARAMS"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IPADAPTER_PARAMS"
		],
		"name": "IPAdapterCombineParams",
		"display_name": "IPAdapter Combine Params",
		"description": "",
		"category": "ipadapter/params",
		"output_node": false
	},
	"ApplyMSWMSAAttention": {
		"input": {
			"required": {
				"input_blocks": [
					"STRING",
					{
						"default": "0,1"
					}
				],
				"middle_blocks": [
					"STRING",
					{
						"default": ""
					}
				],
				"output_blocks": [
					"STRING",
					{
						"default": "9,10,11"
					}
				],
				"time_mode": [
					[
						"percent",
						"timestep",
						"sigma"
					]
				],
				"start_time": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 999
					}
				],
				"end_time": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 999
					}
				],
				"model": [
					"MODEL"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ApplyMSWMSAAttention",
		"display_name": "ApplyMSWMSAAttention",
		"description": "",
		"category": "model_patches",
		"output_node": false
	},
	"ApplyRAUNet": {
		"input": {
			"required": {
				"enabled": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"input_blocks": [
					"STRING",
					{
						"default": "3"
					}
				],
				"output_blocks": [
					"STRING",
					{
						"default": "8"
					}
				],
				"time_mode": [
					[
						"percent",
						"timestep",
						"sigma"
					]
				],
				"start_time": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 999
					}
				],
				"end_time": [
					"FLOAT",
					{
						"default": 0.45,
						"min": 0,
						"max": 999
					}
				],
				"two_stage_upscale": [
					"BOOLEAN",
					{
						"default": true
					}
				],
				"upscale_mode": [
					[
						"bicubic",
						"bislerp",
						"bilinear",
						"nearest-exact",
						"area"
					]
				],
				"ca_start_time": [
					"FLOAT",
					{
						"default": 0,
						"min": 0,
						"max": 999
					}
				],
				"ca_end_time": [
					"FLOAT",
					{
						"default": 0.3,
						"min": 0,
						"max": 999
					}
				],
				"ca_input_blocks": [
					"STRING",
					{
						"default": "4"
					}
				],
				"ca_output_blocks": [
					"STRING",
					{
						"default": "8"
					}
				],
				"ca_upscale_mode": [
					[
						"bicubic",
						"bislerp",
						"bilinear",
						"nearest-exact",
						"area"
					]
				],
				"model": [
					"MODEL"
				]
			}
		},
		"output": [
			"MODEL"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"MODEL"
		],
		"name": "ApplyRAUNet",
		"display_name": "ApplyRAUNet",
		"description": "",
		"category": "model_patches",
		"output_node": false
	},
	"OmostLLMLoaderNode": {
		"input": {
			"required": {
				"llm_name": [
					[
						"lllyasviel/omost-phi-3-mini-128k-8bits",
						"lllyasviel/omost-llama-3-8b-4bits",
						"lllyasviel/omost-dolphin-2.9-llama3-8b-4bits"
					],
					{
						"default": "lllyasviel/omost-llama-3-8b-4bits"
					}
				]
			}
		},
		"output": [
			"OMOST_LLM"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"OMOST_LLM"
		],
		"name": "OmostLLMLoaderNode",
		"display_name": "Omost LLM Loader",
		"description": "",
		"category": "omost",
		"output_node": false
	},
	"OmostLLMHTTPServerNode": {
		"input": {
			"required": {
				"address": [
					"STRING",
					{
						"multiline": true
					}
				]
			}
		},
		"output": [
			"OMOST_LLM"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"OMOST_LLM"
		],
		"name": "OmostLLMHTTPServerNode",
		"display_name": "Omost LLM HTTP Server",
		"description": "",
		"category": "omost",
		"output_node": false
	},
	"OmostLLMChatNode": {
		"input": {
			"required": {
				"llm": [
					"OMOST_LLM"
				],
				"text": [
					"STRING",
					{
						"multiline": true
					}
				],
				"max_new_tokens": [
					"INT",
					{
						"min": 128,
						"max": 4096,
						"step": 1,
						"default": 4096
					}
				],
				"top_p": [
					"FLOAT",
					{
						"min": 0,
						"max": 1,
						"step": 0.01,
						"default": 0.9
					}
				],
				"temperature": [
					"FLOAT",
					{
						"min": 0,
						"max": 2,
						"step": 0.01,
						"default": 0.6
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				]
			},
			"optional": {
				"conversation": [
					"OMOST_CONVERSATION"
				]
			}
		},
		"output": [
			"OMOST_CONVERSATION",
			"OMOST_CANVAS_CONDITIONING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"OMOST_CONVERSATION",
			"OMOST_CANVAS_CONDITIONING"
		],
		"name": "OmostLLMChatNode",
		"display_name": "Omost LLM Chat",
		"description": "",
		"category": "omost",
		"output_node": false
	},
	"OmostGreedyBagsTextEmbeddingNode": {
		"input": {
			"required": {
				"canvas_conds": [
					"OMOST_CANVAS_CONDITIONING"
				],
				"clip": [
					"CLIP"
				]
			}
		},
		"output": [
			"CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"CONDITIONING"
		],
		"name": "OmostGreedyBagsTextEmbeddingNode",
		"display_name": "Omost Greedy Bags Text Embedding",
		"description": "",
		"category": "omost",
		"output_node": false
	},
	"OmostLayoutCondNode": {
		"input": {
			"required": {
				"canvas_conds": [
					"OMOST_CANVAS_CONDITIONING"
				],
				"clip": [
					"CLIP"
				],
				"global_strength": [
					"FLOAT",
					{
						"min": 0,
						"max": 1,
						"step": 0.01,
						"default": 0.2
					}
				],
				"region_strength": [
					"FLOAT",
					{
						"min": 0,
						"max": 1,
						"step": 0.01,
						"default": 0.8
					}
				],
				"overlap_method": [
					[
						"overlay",
						"average"
					],
					{
						"default": "average"
					}
				]
			},
			"optional": {
				"positive": [
					"CONDITIONING"
				]
			}
		},
		"output": [
			"CONDITIONING",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"CONDITIONING",
			"MASK"
		],
		"name": "OmostLayoutCondNode",
		"display_name": "Omost Layout Cond (ComfyUI-Area)",
		"description": "",
		"category": "omost",
		"output_node": false
	},
	"OmostDenseDiffusionLayoutNode": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"canvas_conds": [
					"OMOST_CANVAS_CONDITIONING"
				],
				"clip": [
					"CLIP"
				]
			}
		},
		"output": [
			"MODEL",
			"CONDITIONING"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"MODEL",
			"CONDITIONING"
		],
		"name": "OmostDenseDiffusionLayoutNode",
		"display_name": "Omost Layout Cond (OmostDenseDiffusion)",
		"description": "",
		"category": "omost",
		"output_node": false
	},
	"OmostLoadCanvasConditioningNode": {
		"input": {
			"required": {
				"json_str": [
					"STRING",
					{
						"multiline": true
					}
				]
			}
		},
		"output": [
			"OMOST_CANVAS_CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"OMOST_CANVAS_CONDITIONING"
		],
		"name": "OmostLoadCanvasConditioningNode",
		"display_name": "Omost Load Canvas Conditioning",
		"description": "",
		"category": "omost",
		"output_node": false
	},
	"OmostLoadCanvasPythonCodeNode": {
		"input": {
			"required": {
				"python_str": [
					"STRING",
					{
						"multiline": true
					}
				]
			}
		},
		"output": [
			"OMOST_CANVAS_CONDITIONING"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"OMOST_CANVAS_CONDITIONING"
		],
		"name": "OmostLoadCanvasPythonCodeNode",
		"display_name": "Omost Load Canvas Python Code",
		"description": "",
		"category": "omost",
		"output_node": false
	},
	"OmostRenderCanvasConditioningNode": {
		"input": {
			"required": {
				"canvas_conds": [
					"OMOST_CANVAS_CONDITIONING"
				]
			}
		},
		"output": [
			"IMAGE",
			"MASK"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"IMAGE",
			"MASK"
		],
		"name": "OmostRenderCanvasConditioningNode",
		"display_name": "Omost Render Canvas Conditioning",
		"description": "",
		"category": "omost",
		"output_node": false
	},
	"UltimateSDUpscale": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				],
				"model": [
					"MODEL"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"vae": [
					"VAE"
				],
				"upscale_by": [
					"FLOAT",
					{
						"default": 2,
						"min": 0.05,
						"max": 4,
						"step": 0.05
					}
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000,
						"step": 1
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"upscale_model": [
					"UPSCALE_MODEL"
				],
				"mode_type": [
					[
						"Linear",
						"Chess",
						"None"
					]
				],
				"tile_width": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 8192,
						"step": 8
					}
				],
				"tile_height": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 8192,
						"step": 8
					}
				],
				"mask_blur": [
					"INT",
					{
						"default": 8,
						"min": 0,
						"max": 64,
						"step": 1
					}
				],
				"tile_padding": [
					"INT",
					{
						"default": 32,
						"min": 0,
						"max": 8192,
						"step": 8
					}
				],
				"seam_fix_mode": [
					[
						"None",
						"Band Pass",
						"Half Tile",
						"Half Tile + Intersections"
					]
				],
				"seam_fix_denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"seam_fix_width": [
					"INT",
					{
						"default": 64,
						"min": 0,
						"max": 8192,
						"step": 8
					}
				],
				"seam_fix_mask_blur": [
					"INT",
					{
						"default": 8,
						"min": 0,
						"max": 64,
						"step": 1
					}
				],
				"seam_fix_padding": [
					"INT",
					{
						"default": 16,
						"min": 0,
						"max": 8192,
						"step": 8
					}
				],
				"force_uniform_tiles": [
					[
						"enable",
						"disable"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "UltimateSDUpscale",
		"display_name": "Ultimate SD Upscale",
		"description": "",
		"category": "image/upscaling",
		"output_node": false
	},
	"UltimateSDUpscaleNoUpscale": {
		"input": {
			"required": {
				"upscaled_image": [
					"IMAGE"
				],
				"model": [
					"MODEL"
				],
				"positive": [
					"CONDITIONING"
				],
				"negative": [
					"CONDITIONING"
				],
				"vae": [
					"VAE"
				],
				"seed": [
					"INT",
					{
						"default": 0,
						"min": 0,
						"max": 18446744073709552000
					}
				],
				"steps": [
					"INT",
					{
						"default": 20,
						"min": 1,
						"max": 10000,
						"step": 1
					}
				],
				"cfg": [
					"FLOAT",
					{
						"default": 8,
						"min": 0,
						"max": 100
					}
				],
				"sampler_name": [
					[
						"euler",
						"euler_ancestral",
						"heun",
						"heunpp2",
						"dpm_2",
						"dpm_2_ancestral",
						"lms",
						"dpm_fast",
						"dpm_adaptive",
						"dpmpp_2s_ancestral",
						"dpmpp_sde",
						"dpmpp_sde_gpu",
						"dpmpp_2m",
						"dpmpp_2m_sde",
						"dpmpp_2m_sde_gpu",
						"dpmpp_3m_sde",
						"dpmpp_3m_sde_gpu",
						"ddpm",
						"lcm",
						"ddim",
						"uni_pc",
						"uni_pc_bh2"
					]
				],
				"scheduler": [
					[
						"normal",
						"karras",
						"exponential",
						"sgm_uniform",
						"simple",
						"ddim_uniform"
					]
				],
				"denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"mode_type": [
					[
						"Linear",
						"Chess",
						"None"
					]
				],
				"tile_width": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 8192,
						"step": 8
					}
				],
				"tile_height": [
					"INT",
					{
						"default": 512,
						"min": 64,
						"max": 8192,
						"step": 8
					}
				],
				"mask_blur": [
					"INT",
					{
						"default": 8,
						"min": 0,
						"max": 64,
						"step": 1
					}
				],
				"tile_padding": [
					"INT",
					{
						"default": 32,
						"min": 0,
						"max": 8192,
						"step": 8
					}
				],
				"seam_fix_mode": [
					[
						"None",
						"Band Pass",
						"Half Tile",
						"Half Tile + Intersections"
					]
				],
				"seam_fix_denoise": [
					"FLOAT",
					{
						"default": 1,
						"min": 0,
						"max": 1,
						"step": 0.01
					}
				],
				"seam_fix_width": [
					"INT",
					{
						"default": 64,
						"min": 0,
						"max": 8192,
						"step": 8
					}
				],
				"seam_fix_mask_blur": [
					"INT",
					{
						"default": 8,
						"min": 0,
						"max": 64,
						"step": 1
					}
				],
				"seam_fix_padding": [
					"INT",
					{
						"default": 16,
						"min": 0,
						"max": 8192,
						"step": 8
					}
				],
				"force_uniform_tiles": [
					[
						"enable",
						"disable"
					]
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "UltimateSDUpscaleNoUpscale",
		"display_name": "Ultimate SD Upscale (No Upscale)",
		"description": "",
		"category": "image/upscaling",
		"output_node": false
	},
	"ControlLoraSave": {
		"input": {
			"required": {
				"model": [
					"MODEL"
				],
				"control_net": [
					"CONTROL_NET"
				],
				"filename_prefix": [
					"STRING",
					{
						"default": "controlnet_loras/ComfyUI_control_lora"
					}
				],
				"rank": [
					"INT",
					{
						"default": 64,
						"min": 0,
						"max": 1024,
						"step": 8
					}
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "ControlLoraSave",
		"display_name": "ControlLoraSave",
		"description": "",
		"category": "stability/controlnet",
		"output_node": true
	},
	"ColorBlend": {
		"input": {
			"required": {
				"bw_layer": [
					"IMAGE"
				],
				"color_layer": [
					"IMAGE"
				]
			}
		},
		"output": [
			"IMAGE"
		],
		"output_is_list": [
			false
		],
		"output_name": [
			"IMAGE"
		],
		"name": "ColorBlend",
		"display_name": "Color Blend",
		"description": "",
		"category": "stability/image/postprocessing",
		"output_node": false
	},
	"GetImageSize": {
		"input": {
			"required": {
				"image": [
					"IMAGE"
				]
			}
		},
		"output": [
			"INT",
			"INT"
		],
		"output_is_list": [
			false,
			false
		],
		"output_name": [
			"width",
			"height"
		],
		"name": "GetImageSize",
		"display_name": "GetImageSize",
		"description": "",
		"category": "stability/image",
		"output_node": false
	},
	"SaveImageWebsocket": {
		"input": {
			"required": {
				"images": [
					"IMAGE"
				]
			}
		},
		"output": [],
		"output_is_list": [],
		"output_name": [],
		"name": "SaveImageWebsocket",
		"display_name": "SaveImageWebsocket",
		"description": "",
		"category": "api/image",
		"output_node": true
	}
}